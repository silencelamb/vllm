//
// Generated by LLVM NVPTX Back-End
//

.version 8.5
.target sm_80
.address_size 64

	// .globl	loop_gather_fusion
.extern .shared .align 16 .b8 global_smem[];

.visible .entry loop_gather_fusion(
	.param .u64 .ptr .align 16 loop_gather_fusion_param_0,
	.param .u64 .ptr .align 16 loop_gather_fusion_param_1,
	.param .u64 .ptr .align 128 loop_gather_fusion_param_2
)
.reqntid 128, 1, 1
{
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<13>;

	ld.param.u64 	%rd1, [loop_gather_fusion_param_0];
	ld.param.u64 	%rd2, [loop_gather_fusion_param_2];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.param.u64 	%rd4, [loop_gather_fusion_param_1];
	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd1;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shr.u32 	%r3, %r2, 3;
	mul.wide.u32 	%rd7, %r3, 4;
	add.s64 	%rd8, %rd5, %rd7;
	ld.global.nc.u32 	%r4, [%rd8];
	min.u32 	%r5, %r4, 151935;
	shl.b32 	%r6, %r2, 7;
	and.b32  	%r7, %r6, 896;
	shl.b32 	%r8, %r5, 10;
	or.b32  	%r9, %r8, %r7;
	or.b32  	%r10, %r9, %r1;
	mul.wide.u32 	%rd9, %r10, 2;
	add.s64 	%rd10, %rd6, %rd9;
	ld.global.nc.u16 	%rs1, [%rd10];
	or.b32  	%r11, %r6, %r1;
	mul.wide.u32 	%rd11, %r11, 2;
	add.s64 	%rd12, %rd3, %rd11;
	st.global.b16 	[%rd12], %rs1;
	ret;

}
	// .globl	wrapped_concatenate
.visible .entry wrapped_concatenate(
	.param .u64 .ptr .align 16 wrapped_concatenate_param_0,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_1,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_2,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_3,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_4,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_5,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_6,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_7,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_8,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_9,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_10,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_11,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_12,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_13,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_14,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_15,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_16,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_17,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_18,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_19,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_20,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_21,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_22,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_23,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_24,
	.param .u64 .ptr .align 16 wrapped_concatenate_param_25,
	.param .u64 .ptr .align 128 wrapped_concatenate_param_26
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<26>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<53>;
	.reg .b64 	%rd<251>;

	ld.param.u64 	%rd55, [wrapped_concatenate_param_0];
	ld.param.u64 	%rd56, [wrapped_concatenate_param_26];
	cvta.to.global.u64 	%rd1, %rd56;
	ld.param.u64 	%rd57, [wrapped_concatenate_param_1];
	ld.param.u64 	%rd58, [wrapped_concatenate_param_25];
	cvta.to.global.u64 	%rd2, %rd58;
	ld.param.u64 	%rd59, [wrapped_concatenate_param_2];
	ld.param.u64 	%rd60, [wrapped_concatenate_param_24];
	cvta.to.global.u64 	%rd3, %rd60;
	ld.param.u64 	%rd61, [wrapped_concatenate_param_3];
	ld.param.u64 	%rd62, [wrapped_concatenate_param_23];
	cvta.to.global.u64 	%rd4, %rd62;
	ld.param.u64 	%rd63, [wrapped_concatenate_param_4];
	ld.param.u64 	%rd64, [wrapped_concatenate_param_22];
	cvta.to.global.u64 	%rd5, %rd64;
	ld.param.u64 	%rd65, [wrapped_concatenate_param_5];
	ld.param.u64 	%rd66, [wrapped_concatenate_param_21];
	cvta.to.global.u64 	%rd6, %rd66;
	ld.param.u64 	%rd67, [wrapped_concatenate_param_6];
	ld.param.u64 	%rd68, [wrapped_concatenate_param_20];
	cvta.to.global.u64 	%rd7, %rd68;
	ld.param.u64 	%rd69, [wrapped_concatenate_param_7];
	ld.param.u64 	%rd70, [wrapped_concatenate_param_19];
	cvta.to.global.u64 	%rd8, %rd70;
	ld.param.u64 	%rd71, [wrapped_concatenate_param_8];
	ld.param.u64 	%rd72, [wrapped_concatenate_param_18];
	cvta.to.global.u64 	%rd9, %rd72;
	ld.param.u64 	%rd73, [wrapped_concatenate_param_9];
	ld.param.u64 	%rd74, [wrapped_concatenate_param_17];
	cvta.to.global.u64 	%rd10, %rd74;
	ld.param.u64 	%rd75, [wrapped_concatenate_param_10];
	ld.param.u64 	%rd76, [wrapped_concatenate_param_16];
	cvta.to.global.u64 	%rd11, %rd76;
	ld.param.u64 	%rd77, [wrapped_concatenate_param_11];
	ld.param.u64 	%rd78, [wrapped_concatenate_param_15];
	cvta.to.global.u64 	%rd12, %rd78;
	ld.param.u64 	%rd79, [wrapped_concatenate_param_12];
	ld.param.u64 	%rd80, [wrapped_concatenate_param_14];
	cvta.to.global.u64 	%rd13, %rd80;
	ld.param.u64 	%rd81, [wrapped_concatenate_param_13];
	cvta.to.global.u64 	%rd14, %rd81;
	cvta.to.global.u64 	%rd15, %rd79;
	cvta.to.global.u64 	%rd16, %rd77;
	cvta.to.global.u64 	%rd17, %rd75;
	cvta.to.global.u64 	%rd18, %rd73;
	cvta.to.global.u64 	%rd19, %rd71;
	cvta.to.global.u64 	%rd20, %rd69;
	cvta.to.global.u64 	%rd21, %rd67;
	cvta.to.global.u64 	%rd22, %rd65;
	cvta.to.global.u64 	%rd23, %rd63;
	cvta.to.global.u64 	%rd24, %rd61;
	cvta.to.global.u64 	%rd25, %rd59;
	cvta.to.global.u64 	%rd26, %rd57;
	cvta.to.global.u64 	%rd27, %rd55;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shr.u32 	%r3, %r2, 4;
	setp.gt.u32 	%p1, %r2, 212991;
	@%p1 bra 	$L__BB1_26;
	setp.gt.u32 	%p14, %r2, 98303;
	@%p14 bra 	$L__BB1_13;
	setp.gt.u32 	%p21, %r2, 49151;
	@%p21 bra 	$L__BB1_8;
	setp.gt.u32 	%p24, %r2, 16383;
	@%p24 bra 	$L__BB1_5;
	shl.b32 	%r52, %r2, 7;
	or.b32  	%r50, %r52, %r1;
	mul.wide.u32 	%rd247, %r50, 2;
	add.s64 	%rd250, %rd27, %rd247;
	bra.uni 	$L__BB1_51;
$L__BB1_26:
	setp.gt.u32 	%p2, %r2, 311295;
	@%p2 bra 	$L__BB1_38;
	setp.gt.u32 	%p9, %r2, 262143;
	@%p9 bra 	$L__BB1_33;
	setp.gt.u32 	%p12, %r2, 229375;
	@%p12 bra 	$L__BB1_30;
	shl.b32 	%r52, %r2, 7;
	and.b32  	%r41, %r52, 1920;
	shl.b32 	%r42, %r3, 11;
	cvt.s64.s32 	%rd162, %r1;
	or.b32  	%r43, %r42, %r41;
	cvt.u64.u32 	%rd163, %r43;
	add.s64 	%rd164, %rd163, %rd162;
	shl.b64 	%rd165, %rd164, 1;
	add.s64 	%rd166, %rd14, %rd165;
	add.s64 	%rd250, %rd166, -54525952;
	bra.uni 	$L__BB1_51;
$L__BB1_13:
	setp.gt.u32 	%p15, %r2, 147455;
	@%p15 bra 	$L__BB1_19;
	setp.gt.u32 	%p19, %r2, 114687;
	@%p19 bra 	$L__BB1_16;
	shl.b32 	%r52, %r2, 7;
	and.b32  	%r44, %r52, 1920;
	shl.b32 	%r45, %r3, 11;
	cvt.s64.s32 	%rd209, %r1;
	or.b32  	%r46, %r45, %r44;
	cvt.u64.u32 	%rd210, %r46;
	add.s64 	%rd211, %rd210, %rd209;
	shl.b64 	%rd212, %rd211, 1;
	add.s64 	%rd213, %rd21, %rd212;
	add.s64 	%rd250, %rd213, -25165824;
	bra.uni 	$L__BB1_51;
$L__BB1_38:
	setp.gt.u32 	%p3, %r2, 360447;
	@%p3 bra 	$L__BB1_44;
	setp.gt.u32 	%p7, %r2, 327679;
	@%p7 bra 	$L__BB1_41;
	shl.b32 	%r52, %r2, 7;
	and.b32  	%r35, %r52, 1920;
	shl.b32 	%r36, %r3, 11;
	cvt.s64.s32 	%rd124, %r1;
	or.b32  	%r37, %r36, %r35;
	cvt.u64.u32 	%rd125, %r37;
	add.s64 	%rd126, %rd125, %rd124;
	shl.b64 	%rd127, %rd126, 1;
	add.s64 	%rd128, %rd8, %rd127;
	add.s64 	%rd250, %rd128, -79691776;
	bra.uni 	$L__BB1_51;
$L__BB1_8:
	setp.gt.u32 	%p22, %r2, 65535;
	@%p22 bra 	$L__BB1_10;
	shl.b32 	%r52, %r2, 7;
	and.b32  	%r47, %r52, 1920;
	shl.b32 	%r48, %r3, 11;
	cvt.s64.s32 	%rd228, %r1;
	or.b32  	%r49, %r48, %r47;
	cvt.u64.u32 	%rd229, %r49;
	add.s64 	%rd230, %rd229, %rd228;
	shl.b64 	%rd231, %rd230, 1;
	add.s64 	%rd232, %rd24, %rd231;
	add.s64 	%rd250, %rd232, -12582912;
	bra.uni 	$L__BB1_51;
$L__BB1_33:
	setp.gt.u32 	%p10, %r2, 278527;
	@%p10 bra 	$L__BB1_35;
	shl.b32 	%r52, %r2, 7;
	and.b32  	%r38, %r52, 1920;
	shl.b32 	%r39, %r3, 11;
	cvt.s64.s32 	%rd143, %r1;
	or.b32  	%r40, %r39, %r38;
	cvt.u64.u32 	%rd144, %r40;
	add.s64 	%rd145, %rd144, %rd143;
	shl.b64 	%rd146, %rd145, 1;
	add.s64 	%rd147, %rd11, %rd146;
	add.s64 	%rd250, %rd147, -67108864;
	bra.uni 	$L__BB1_51;
$L__BB1_19:
	setp.gt.u32 	%p16, %r2, 180223;
	shl.b32 	%r52, %r2, 7;
	and.b32  	%r17, %r52, 1920;
	shl.b32 	%r18, %r3, 11;
	@%p16 bra 	$L__BB1_23;
	setp.gt.u32 	%p18, %r2, 163839;
	@%p18 bra 	$L__BB1_22;
	cvt.s64.s32 	%rd188, %r1;
	cvt.u64.u32 	%rd189, %r17;
	cvt.u64.u32 	%rd190, %r18;
	add.s64 	%rd191, %rd190, %rd189;
	add.s64 	%rd192, %rd191, %rd188;
	shl.b64 	%rd193, %rd192, 1;
	add.s64 	%rd194, %rd18, %rd193;
	add.s64 	%rd250, %rd194, -37748736;
	bra.uni 	$L__BB1_51;
$L__BB1_44:
	setp.gt.u32 	%p4, %r2, 393215;
	shl.b32 	%r52, %r2, 7;
	and.b32  	%r32, %r52, 1920;
	shl.b32 	%r33, %r3, 11;
	@%p4 bra 	$L__BB1_48;
	setp.gt.u32 	%p6, %r2, 376831;
	@%p6 bra 	$L__BB1_47;
	cvt.s64.s32 	%rd103, %r1;
	cvt.u64.u32 	%rd104, %r32;
	cvt.u64.u32 	%rd105, %r33;
	add.s64 	%rd106, %rd105, %rd104;
	add.s64 	%rd107, %rd106, %rd103;
	shl.b64 	%rd108, %rd107, 1;
	add.s64 	%rd109, %rd5, %rd108;
	add.s64 	%rd250, %rd109, -92274688;
	bra.uni 	$L__BB1_51;
$L__BB1_5:
	setp.gt.u32 	%p25, %r2, 32767;
	shl.b32 	%r52, %r2, 7;
	and.b32  	%r6, %r52, 1920;
	shl.b32 	%r7, %r3, 11;
	@%p25 bra 	$L__BB1_7;
	cvt.s64.s32 	%rd240, %r1;
	cvt.u64.u32 	%rd241, %r6;
	cvt.u64.u32 	%rd242, %r7;
	add.s64 	%rd243, %rd242, %rd241;
	add.s64 	%rd244, %rd243, %rd240;
	shl.b64 	%rd245, %rd244, 1;
	add.s64 	%rd246, %rd26, %rd245;
	add.s64 	%rd250, %rd246, -4194304;
	bra.uni 	$L__BB1_51;
$L__BB1_30:
	setp.gt.u32 	%p13, %r2, 245759;
	shl.b32 	%r52, %r2, 7;
	and.b32  	%r21, %r52, 1920;
	shl.b32 	%r22, %r3, 11;
	@%p13 bra 	$L__BB1_32;
	cvt.s64.s32 	%rd155, %r1;
	cvt.u64.u32 	%rd156, %r21;
	cvt.u64.u32 	%rd157, %r22;
	add.s64 	%rd158, %rd157, %rd156;
	add.s64 	%rd159, %rd158, %rd155;
	shl.b64 	%rd160, %rd159, 1;
	add.s64 	%rd161, %rd13, %rd160;
	add.s64 	%rd250, %rd161, -58720256;
	bra.uni 	$L__BB1_51;
$L__BB1_16:
	setp.gt.u32 	%p20, %r2, 131071;
	shl.b32 	%r52, %r2, 7;
	and.b32  	%r14, %r52, 1920;
	shl.b32 	%r15, %r3, 11;
	@%p20 bra 	$L__BB1_18;
	cvt.s64.s32 	%rd202, %r1;
	cvt.u64.u32 	%rd203, %r14;
	cvt.u64.u32 	%rd204, %r15;
	add.s64 	%rd205, %rd204, %rd203;
	add.s64 	%rd206, %rd205, %rd202;
	shl.b64 	%rd207, %rd206, 1;
	add.s64 	%rd208, %rd20, %rd207;
	add.s64 	%rd250, %rd208, -29360128;
	bra.uni 	$L__BB1_51;
$L__BB1_41:
	setp.gt.u32 	%p8, %r2, 344063;
	shl.b32 	%r52, %r2, 7;
	and.b32  	%r29, %r52, 1920;
	shl.b32 	%r30, %r3, 11;
	@%p8 bra 	$L__BB1_43;
	cvt.s64.s32 	%rd117, %r1;
	cvt.u64.u32 	%rd118, %r29;
	cvt.u64.u32 	%rd119, %r30;
	add.s64 	%rd120, %rd119, %rd118;
	add.s64 	%rd121, %rd120, %rd117;
	shl.b64 	%rd122, %rd121, 1;
	add.s64 	%rd123, %rd7, %rd122;
	add.s64 	%rd250, %rd123, -83886080;
	bra.uni 	$L__BB1_51;
$L__BB1_10:
	setp.gt.u32 	%p23, %r2, 81919;
	shl.b32 	%r52, %r2, 7;
	and.b32  	%r10, %r52, 1920;
	shl.b32 	%r11, %r3, 11;
	@%p23 bra 	$L__BB1_12;
	cvt.s64.s32 	%rd221, %r1;
	cvt.u64.u32 	%rd222, %r10;
	cvt.u64.u32 	%rd223, %r11;
	add.s64 	%rd224, %rd223, %rd222;
	add.s64 	%rd225, %rd224, %rd221;
	shl.b64 	%rd226, %rd225, 1;
	add.s64 	%rd227, %rd23, %rd226;
	add.s64 	%rd250, %rd227, -16777216;
	bra.uni 	$L__BB1_51;
$L__BB1_35:
	setp.gt.u32 	%p11, %r2, 294911;
	shl.b32 	%r52, %r2, 7;
	and.b32  	%r25, %r52, 1920;
	shl.b32 	%r26, %r3, 11;
	@%p11 bra 	$L__BB1_37;
	cvt.s64.s32 	%rd136, %r1;
	cvt.u64.u32 	%rd137, %r25;
	cvt.u64.u32 	%rd138, %r26;
	add.s64 	%rd139, %rd138, %rd137;
	add.s64 	%rd140, %rd139, %rd136;
	shl.b64 	%rd141, %rd140, 1;
	add.s64 	%rd142, %rd10, %rd141;
	add.s64 	%rd250, %rd142, -71303168;
	bra.uni 	$L__BB1_51;
$L__BB1_23:
	setp.gt.u32 	%p17, %r2, 196607;
	@%p17 bra 	$L__BB1_25;
	cvt.s64.s32 	%rd174, %r1;
	cvt.u64.u32 	%rd175, %r17;
	cvt.u64.u32 	%rd176, %r18;
	add.s64 	%rd177, %rd176, %rd175;
	add.s64 	%rd178, %rd177, %rd174;
	shl.b64 	%rd179, %rd178, 1;
	add.s64 	%rd180, %rd16, %rd179;
	add.s64 	%rd250, %rd180, -46137344;
	bra.uni 	$L__BB1_51;
$L__BB1_48:
	setp.gt.u32 	%p5, %r2, 409599;
	@%p5 bra 	$L__BB1_50;
	cvt.s64.s32 	%rd89, %r1;
	cvt.u64.u32 	%rd90, %r32;
	cvt.u64.u32 	%rd91, %r33;
	add.s64 	%rd92, %rd91, %rd90;
	add.s64 	%rd93, %rd92, %rd89;
	shl.b64 	%rd94, %rd93, 1;
	add.s64 	%rd95, %rd3, %rd94;
	add.s64 	%rd250, %rd95, -100663296;
	bra.uni 	$L__BB1_51;
$L__BB1_22:
	cvt.s64.s32 	%rd181, %r1;
	cvt.u64.u32 	%rd182, %r17;
	cvt.u64.u32 	%rd183, %r18;
	add.s64 	%rd184, %rd183, %rd182;
	add.s64 	%rd185, %rd184, %rd181;
	shl.b64 	%rd186, %rd185, 1;
	add.s64 	%rd187, %rd17, %rd186;
	add.s64 	%rd250, %rd187, -41943040;
	bra.uni 	$L__BB1_51;
$L__BB1_47:
	cvt.s64.s32 	%rd96, %r1;
	cvt.u64.u32 	%rd97, %r32;
	cvt.u64.u32 	%rd98, %r33;
	add.s64 	%rd99, %rd98, %rd97;
	add.s64 	%rd100, %rd99, %rd96;
	shl.b64 	%rd101, %rd100, 1;
	add.s64 	%rd102, %rd4, %rd101;
	add.s64 	%rd250, %rd102, -96468992;
	bra.uni 	$L__BB1_51;
$L__BB1_7:
	cvt.s64.s32 	%rd233, %r1;
	cvt.u64.u32 	%rd234, %r6;
	cvt.u64.u32 	%rd235, %r7;
	add.s64 	%rd236, %rd235, %rd234;
	add.s64 	%rd237, %rd236, %rd233;
	shl.b64 	%rd238, %rd237, 1;
	add.s64 	%rd239, %rd25, %rd238;
	add.s64 	%rd250, %rd239, -8388608;
	bra.uni 	$L__BB1_51;
$L__BB1_32:
	cvt.s64.s32 	%rd148, %r1;
	cvt.u64.u32 	%rd149, %r21;
	cvt.u64.u32 	%rd150, %r22;
	add.s64 	%rd151, %rd150, %rd149;
	add.s64 	%rd152, %rd151, %rd148;
	shl.b64 	%rd153, %rd152, 1;
	add.s64 	%rd154, %rd12, %rd153;
	add.s64 	%rd250, %rd154, -62914560;
	bra.uni 	$L__BB1_51;
$L__BB1_18:
	cvt.s64.s32 	%rd195, %r1;
	cvt.u64.u32 	%rd196, %r14;
	cvt.u64.u32 	%rd197, %r15;
	add.s64 	%rd198, %rd197, %rd196;
	add.s64 	%rd199, %rd198, %rd195;
	shl.b64 	%rd200, %rd199, 1;
	add.s64 	%rd201, %rd19, %rd200;
	add.s64 	%rd250, %rd201, -33554432;
	bra.uni 	$L__BB1_51;
$L__BB1_43:
	cvt.s64.s32 	%rd110, %r1;
	cvt.u64.u32 	%rd111, %r29;
	cvt.u64.u32 	%rd112, %r30;
	add.s64 	%rd113, %rd112, %rd111;
	add.s64 	%rd114, %rd113, %rd110;
	shl.b64 	%rd115, %rd114, 1;
	add.s64 	%rd116, %rd6, %rd115;
	add.s64 	%rd250, %rd116, -88080384;
	bra.uni 	$L__BB1_51;
$L__BB1_12:
	cvt.s64.s32 	%rd214, %r1;
	cvt.u64.u32 	%rd215, %r10;
	cvt.u64.u32 	%rd216, %r11;
	add.s64 	%rd217, %rd216, %rd215;
	add.s64 	%rd218, %rd217, %rd214;
	shl.b64 	%rd219, %rd218, 1;
	add.s64 	%rd220, %rd22, %rd219;
	add.s64 	%rd250, %rd220, -20971520;
	bra.uni 	$L__BB1_51;
$L__BB1_37:
	cvt.s64.s32 	%rd129, %r1;
	cvt.u64.u32 	%rd130, %r25;
	cvt.u64.u32 	%rd131, %r26;
	add.s64 	%rd132, %rd131, %rd130;
	add.s64 	%rd133, %rd132, %rd129;
	shl.b64 	%rd134, %rd133, 1;
	add.s64 	%rd135, %rd9, %rd134;
	add.s64 	%rd250, %rd135, -75497472;
	bra.uni 	$L__BB1_51;
$L__BB1_25:
	cvt.s64.s32 	%rd167, %r1;
	cvt.u64.u32 	%rd168, %r17;
	cvt.u64.u32 	%rd169, %r18;
	add.s64 	%rd170, %rd169, %rd168;
	add.s64 	%rd171, %rd170, %rd167;
	shl.b64 	%rd172, %rd171, 1;
	add.s64 	%rd173, %rd15, %rd172;
	add.s64 	%rd250, %rd173, -50331648;
	bra.uni 	$L__BB1_51;
$L__BB1_50:
	cvt.s64.s32 	%rd82, %r1;
	cvt.u64.u32 	%rd83, %r32;
	cvt.u64.u32 	%rd84, %r33;
	add.s64 	%rd85, %rd84, %rd83;
	add.s64 	%rd86, %rd85, %rd82;
	shl.b64 	%rd87, %rd86, 1;
	add.s64 	%rd88, %rd2, %rd87;
	add.s64 	%rd250, %rd88, -104857600;
$L__BB1_51:
	ld.global.nc.u16 	%rs1, [%rd250];
	or.b32  	%r51, %r52, %r1;
	mul.wide.u32 	%rd248, %r51, 2;
	add.s64 	%rd249, %rd1, %rd248;
	st.global.b16 	[%rd249], %rs1;
	ret;

}
	// .globl	gemm_fusion_dot_104_0
.visible .entry gemm_fusion_dot_104_0(
	.param .u64 .ptr .align 128 gemm_fusion_dot_104_0_param_0,
	.param .u64 .ptr .align 128 gemm_fusion_dot_104_0_param_1
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<39>;
	.reg .b16 	%rs<65>;
	.reg .b32 	%r<880>;
	.reg .f32 	%f<673>;
	.reg .b64 	%rd<433>;

	ld.param.u64 	%rd119, [gemm_fusion_dot_104_0_param_0];
	ld.param.u64 	%rd120, [gemm_fusion_dot_104_0_param_1];
	cvta.to.global.u64 	%rd1, %rd120;
	cvta.to.global.u64 	%rd121, %rd119;
	// begin inline asm
	mov.u32 %r13, %ctaid.x;
	// end inline asm
	shr.s32 	%r81, %r13, 31;
	shr.u32 	%r82, %r81, 29;
	add.s32 	%r83, %r13, %r82;
	shr.s32 	%r2, %r83, 3;
	and.b32  	%r84, %r83, -8;
	sub.s32 	%r85, 104, %r84;
	min.s32 	%r3, %r85, 8;
	rem.s32 	%r86, %r13, %r3;
	add.s32 	%r87, %r84, %r86;
	shl.b32 	%r88, %r87, 8;
	cvt.s64.s32 	%rd2, %r88;
	mov.u32 	%r4, %tid.x;
	and.b32  	%r89, %r4, 16;
	bfe.s32 	%r90, %r4, 4, 1;
	and.b32  	%r91, %r4, 32;
	bfe.s32 	%r92, %r4, 5, 1;
	and.b32  	%r93, %r4, 64;
	bfe.s32 	%r94, %r4, 6, 1;
	bfe.u32 	%r95, %r4, 4, 3;
	setp.lt.u32 	%p1, %r4, 128;
	selp.b32 	%r96, 0, 8, %p1;
	or.b32  	%r97, %r95, %r96;
	or.b32  	%r98, %r97, 16;
	or.b32  	%r99, %r97, 32;
	or.b32  	%r100, %r97, 48;
	or.b32  	%r101, %r97, 64;
	or.b32  	%r102, %r97, 80;
	or.b32  	%r103, %r97, 96;
	or.b32  	%r104, %r97, 112;
	or.b32  	%r105, %r97, 128;
	or.b32  	%r106, %r97, 144;
	or.b32  	%r107, %r97, 160;
	or.b32  	%r108, %r97, 176;
	or.b32  	%r109, %r97, 192;
	or.b32  	%r110, %r97, 208;
	or.b32  	%r111, %r97, 224;
	or.b32  	%r112, %r97, 240;
	cvt.u64.u32 	%rd122, %r97;
	cvt.u64.u32 	%rd123, %r98;
	cvt.u64.u32 	%rd124, %r99;
	cvt.u64.u32 	%rd125, %r100;
	cvt.u64.u32 	%rd126, %r101;
	cvt.u64.u32 	%rd127, %r102;
	cvt.u64.u32 	%rd128, %r103;
	cvt.u64.u32 	%rd129, %r104;
	cvt.u64.u32 	%rd130, %r105;
	cvt.u64.u32 	%rd131, %r106;
	cvt.u64.u32 	%rd132, %r107;
	cvt.u64.u32 	%rd133, %r108;
	cvt.u64.u32 	%rd134, %r109;
	cvt.u64.u32 	%rd135, %r110;
	cvt.u64.u32 	%rd136, %r111;
	cvt.u64.u32 	%rd137, %r112;
	or.b64  	%rd138, %rd2, %rd122;
	or.b64  	%rd139, %rd2, %rd123;
	or.b64  	%rd140, %rd2, %rd124;
	or.b64  	%rd141, %rd2, %rd125;
	or.b64  	%rd142, %rd2, %rd126;
	or.b64  	%rd143, %rd2, %rd127;
	or.b64  	%rd144, %rd2, %rd128;
	or.b64  	%rd145, %rd2, %rd129;
	or.b64  	%rd146, %rd2, %rd130;
	or.b64  	%rd147, %rd2, %rd131;
	or.b64  	%rd148, %rd2, %rd132;
	or.b64  	%rd149, %rd2, %rd133;
	or.b64  	%rd150, %rd2, %rd134;
	or.b64  	%rd151, %rd2, %rd135;
	or.b64  	%rd152, %rd2, %rd136;
	or.b64  	%rd153, %rd2, %rd137;
	shl.b64 	%rd154, %rd138, 11;
	shl.b64 	%rd155, %rd139, 11;
	shl.b64 	%rd156, %rd140, 11;
	shl.b64 	%rd157, %rd141, 11;
	shl.b64 	%rd158, %rd142, 11;
	shl.b64 	%rd159, %rd143, 11;
	shl.b64 	%rd160, %rd144, 11;
	shl.b64 	%rd161, %rd145, 11;
	shl.b64 	%rd162, %rd146, 11;
	shl.b64 	%rd163, %rd147, 11;
	shl.b64 	%rd164, %rd148, 11;
	shl.b64 	%rd165, %rd149, 11;
	shl.b64 	%rd166, %rd150, 11;
	shl.b64 	%rd167, %rd151, 11;
	shl.b64 	%rd168, %rd152, 11;
	shl.b64 	%rd169, %rd153, 11;
	and.b32  	%r113, %r4, 1;
	neg.s32 	%r114, %r113;
	bfe.s32 	%r115, %r4, 1, 1;
	bfe.s32 	%r116, %r4, 2, 1;
	shl.b32 	%r5, %r4, 3;
	and.b32  	%r117, %r5, 120;
	cvt.u64.u32 	%rd170, %r117;
	or.b64  	%rd171, %rd154, %rd170;
	or.b64  	%rd172, %rd155, %rd170;
	or.b64  	%rd173, %rd156, %rd170;
	or.b64  	%rd174, %rd157, %rd170;
	or.b64  	%rd175, %rd158, %rd170;
	or.b64  	%rd176, %rd159, %rd170;
	or.b64  	%rd177, %rd160, %rd170;
	or.b64  	%rd178, %rd161, %rd170;
	or.b64  	%rd179, %rd162, %rd170;
	or.b64  	%rd180, %rd163, %rd170;
	or.b64  	%rd181, %rd164, %rd170;
	or.b64  	%rd182, %rd165, %rd170;
	or.b64  	%rd183, %rd166, %rd170;
	or.b64  	%rd184, %rd167, %rd170;
	or.b64  	%rd185, %rd168, %rd170;
	or.b64  	%rd186, %rd169, %rd170;
	shl.b64 	%rd187, %rd171, 1;
	add.s64 	%rd86, %rd121, %rd187;
	shl.b64 	%rd188, %rd172, 1;
	add.s64 	%rd87, %rd121, %rd188;
	shl.b64 	%rd189, %rd173, 1;
	add.s64 	%rd88, %rd121, %rd189;
	shl.b64 	%rd190, %rd174, 1;
	add.s64 	%rd89, %rd121, %rd190;
	shl.b64 	%rd191, %rd175, 1;
	add.s64 	%rd90, %rd121, %rd191;
	shl.b64 	%rd192, %rd176, 1;
	add.s64 	%rd91, %rd121, %rd192;
	shl.b64 	%rd193, %rd177, 1;
	add.s64 	%rd92, %rd121, %rd193;
	shl.b64 	%rd194, %rd178, 1;
	add.s64 	%rd93, %rd121, %rd194;
	shl.b64 	%rd195, %rd179, 1;
	add.s64 	%rd94, %rd121, %rd195;
	shl.b64 	%rd196, %rd180, 1;
	add.s64 	%rd95, %rd121, %rd196;
	shl.b64 	%rd197, %rd181, 1;
	add.s64 	%rd96, %rd121, %rd197;
	shl.b64 	%rd198, %rd182, 1;
	add.s64 	%rd97, %rd121, %rd198;
	shl.b64 	%rd199, %rd183, 1;
	add.s64 	%rd98, %rd121, %rd199;
	shl.b64 	%rd200, %rd184, 1;
	add.s64 	%rd99, %rd121, %rd200;
	shl.b64 	%rd201, %rd185, 1;
	add.s64 	%rd100, %rd121, %rd201;
	shl.b64 	%rd202, %rd186, 1;
	add.s64 	%rd101, %rd121, %rd202;
	and.b32  	%r118, %r90, 136;
	and.b32  	%r119, %r92, 272;
	and.b32  	%r120, %r94, 544;
	or.b32  	%r121, %r119, %r118;
	xor.b32  	%r122, %r121, %r117;
	xor.b32  	%r123, %r122, %r120;
	selp.b32 	%r6, 0, 1024, %p1;
	or.b32  	%r124, %r123, %r6;
	cvt.u64.u32 	%rd3, %r124;
	mul.wide.u32 	%rd203, %r124, 2;
	mov.u64 	%rd118, global_smem;
	add.s64 	%rd204, %rd118, %rd203;
	or.b32  	%r125, %r117, 2048;
	xor.b32  	%r126, %r121, %r125;
	xor.b32  	%r127, %r126, %r120;
	or.b32  	%r128, %r127, %r6;
	cvt.u64.u32 	%rd4, %r128;
	mul.wide.u32 	%rd205, %r128, 2;
	add.s64 	%rd206, %rd118, %rd205;
	or.b32  	%r129, %r117, 4096;
	xor.b32  	%r130, %r121, %r129;
	xor.b32  	%r131, %r130, %r120;
	or.b32  	%r132, %r131, %r6;
	cvt.u64.u32 	%rd5, %r132;
	mul.wide.u32 	%rd207, %r132, 2;
	add.s64 	%rd208, %rd118, %rd207;
	or.b32  	%r133, %r117, 6144;
	xor.b32  	%r134, %r121, %r133;
	xor.b32  	%r135, %r134, %r120;
	or.b32  	%r136, %r135, %r6;
	cvt.u64.u32 	%rd6, %r136;
	mul.wide.u32 	%rd209, %r136, 2;
	add.s64 	%rd210, %rd118, %rd209;
	or.b32  	%r137, %r117, 8192;
	xor.b32  	%r138, %r121, %r137;
	xor.b32  	%r139, %r138, %r120;
	or.b32  	%r140, %r139, %r6;
	cvt.u64.u32 	%rd7, %r140;
	mul.wide.u32 	%rd211, %r140, 2;
	add.s64 	%rd212, %rd118, %rd211;
	or.b32  	%r141, %r117, 10240;
	xor.b32  	%r142, %r121, %r141;
	xor.b32  	%r143, %r142, %r120;
	or.b32  	%r144, %r143, %r6;
	cvt.u64.u32 	%rd8, %r144;
	mul.wide.u32 	%rd213, %r144, 2;
	add.s64 	%rd214, %rd118, %rd213;
	or.b32  	%r145, %r117, 12288;
	xor.b32  	%r146, %r121, %r145;
	xor.b32  	%r147, %r146, %r120;
	or.b32  	%r148, %r147, %r6;
	cvt.u64.u32 	%rd9, %r148;
	mul.wide.u32 	%rd215, %r148, 2;
	add.s64 	%rd216, %rd118, %rd215;
	or.b32  	%r149, %r117, 14336;
	xor.b32  	%r150, %r121, %r149;
	xor.b32  	%r151, %r150, %r120;
	or.b32  	%r152, %r151, %r6;
	cvt.u64.u32 	%rd10, %r152;
	mul.wide.u32 	%rd217, %r152, 2;
	add.s64 	%rd218, %rd118, %rd217;
	or.b32  	%r153, %r117, 16384;
	xor.b32  	%r154, %r121, %r153;
	xor.b32  	%r155, %r154, %r120;
	or.b32  	%r156, %r155, %r6;
	cvt.u64.u32 	%rd11, %r156;
	mul.wide.u32 	%rd219, %r156, 2;
	add.s64 	%rd220, %rd118, %rd219;
	or.b32  	%r157, %r117, 18432;
	xor.b32  	%r158, %r121, %r157;
	xor.b32  	%r159, %r158, %r120;
	or.b32  	%r160, %r159, %r6;
	cvt.u64.u32 	%rd12, %r160;
	mul.wide.u32 	%rd221, %r160, 2;
	add.s64 	%rd222, %rd118, %rd221;
	or.b32  	%r161, %r117, 20480;
	xor.b32  	%r162, %r121, %r161;
	xor.b32  	%r163, %r162, %r120;
	or.b32  	%r164, %r163, %r6;
	cvt.u64.u32 	%rd13, %r164;
	mul.wide.u32 	%rd223, %r164, 2;
	add.s64 	%rd224, %rd118, %rd223;
	or.b32  	%r165, %r117, 22528;
	xor.b32  	%r166, %r121, %r165;
	xor.b32  	%r167, %r166, %r120;
	or.b32  	%r168, %r167, %r6;
	cvt.u64.u32 	%rd14, %r168;
	mul.wide.u32 	%rd225, %r168, 2;
	add.s64 	%rd226, %rd118, %rd225;
	or.b32  	%r169, %r117, 24576;
	xor.b32  	%r170, %r121, %r169;
	xor.b32  	%r171, %r170, %r120;
	or.b32  	%r172, %r171, %r6;
	cvt.u64.u32 	%rd15, %r172;
	mul.wide.u32 	%rd227, %r172, 2;
	add.s64 	%rd228, %rd118, %rd227;
	or.b32  	%r173, %r117, 26624;
	xor.b32  	%r174, %r121, %r173;
	xor.b32  	%r175, %r174, %r120;
	or.b32  	%r176, %r175, %r6;
	cvt.u64.u32 	%rd16, %r176;
	mul.wide.u32 	%rd229, %r176, 2;
	add.s64 	%rd230, %rd118, %rd229;
	or.b32  	%r177, %r117, 28672;
	xor.b32  	%r178, %r121, %r177;
	xor.b32  	%r179, %r178, %r120;
	or.b32  	%r180, %r179, %r6;
	cvt.u64.u32 	%rd17, %r180;
	mul.wide.u32 	%rd231, %r180, 2;
	add.s64 	%rd232, %rd118, %rd231;
	or.b32  	%r181, %r117, 30720;
	xor.b32  	%r182, %r121, %r181;
	xor.b32  	%r183, %r182, %r120;
	or.b32  	%r184, %r183, %r6;
	cvt.u64.u32 	%rd18, %r184;
	mul.wide.u32 	%rd233, %r184, 2;
	add.s64 	%rd234, %rd118, %rd233;
	cvt.u32.u64 	%r14, %rd204;
	mov.b32 	%r15, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r14 + 0 ], [ %rd86 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r16, %rd206;
	// begin inline asm
	cp.async.cg.shared.global [ %r16 + 0 ], [ %rd87 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r18, %rd208;
	// begin inline asm
	cp.async.cg.shared.global [ %r18 + 0 ], [ %rd88 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r20, %rd210;
	// begin inline asm
	cp.async.cg.shared.global [ %r20 + 0 ], [ %rd89 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r22, %rd212;
	// begin inline asm
	cp.async.cg.shared.global [ %r22 + 0 ], [ %rd90 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r24, %rd214;
	// begin inline asm
	cp.async.cg.shared.global [ %r24 + 0 ], [ %rd91 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r26, %rd216;
	// begin inline asm
	cp.async.cg.shared.global [ %r26 + 0 ], [ %rd92 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r28, %rd218;
	// begin inline asm
	cp.async.cg.shared.global [ %r28 + 0 ], [ %rd93 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r30, %rd220;
	// begin inline asm
	cp.async.cg.shared.global [ %r30 + 0 ], [ %rd94 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r32, %rd222;
	// begin inline asm
	cp.async.cg.shared.global [ %r32 + 0 ], [ %rd95 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r34, %rd224;
	// begin inline asm
	cp.async.cg.shared.global [ %r34 + 0 ], [ %rd96 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r36, %rd226;
	// begin inline asm
	cp.async.cg.shared.global [ %r36 + 0 ], [ %rd97 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r38, %rd228;
	// begin inline asm
	cp.async.cg.shared.global [ %r38 + 0 ], [ %rd98 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r40, %rd230;
	// begin inline asm
	cp.async.cg.shared.global [ %r40 + 0 ], [ %rd99 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r42, %rd232;
	// begin inline asm
	cp.async.cg.shared.global [ %r42 + 0 ], [ %rd100 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r44, %rd234;
	// begin inline asm
	cp.async.cg.shared.global [ %r44 + 0 ], [ %rd101 + 0 ], 0x10, %r15;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	mul.wide.u32 	%rd235, %r117, 2;
	shl.b64 	%rd236, %rd138, 12;
	add.s64 	%rd237, %rd236, %rd121;
	add.s64 	%rd238, %rd237, %rd235;
	add.s64 	%rd102, %rd238, 256;
	shl.b64 	%rd239, %rd139, 12;
	add.s64 	%rd240, %rd239, %rd121;
	add.s64 	%rd241, %rd240, %rd235;
	add.s64 	%rd103, %rd241, 256;
	shl.b64 	%rd242, %rd140, 12;
	add.s64 	%rd243, %rd242, %rd121;
	add.s64 	%rd244, %rd243, %rd235;
	add.s64 	%rd104, %rd244, 256;
	shl.b64 	%rd245, %rd141, 12;
	add.s64 	%rd246, %rd245, %rd121;
	add.s64 	%rd247, %rd246, %rd235;
	add.s64 	%rd105, %rd247, 256;
	shl.b64 	%rd248, %rd142, 12;
	add.s64 	%rd249, %rd248, %rd121;
	add.s64 	%rd250, %rd249, %rd235;
	add.s64 	%rd106, %rd250, 256;
	shl.b64 	%rd251, %rd143, 12;
	add.s64 	%rd252, %rd251, %rd121;
	add.s64 	%rd253, %rd252, %rd235;
	add.s64 	%rd107, %rd253, 256;
	shl.b64 	%rd254, %rd144, 12;
	add.s64 	%rd255, %rd254, %rd121;
	add.s64 	%rd256, %rd255, %rd235;
	add.s64 	%rd108, %rd256, 256;
	shl.b64 	%rd257, %rd145, 12;
	add.s64 	%rd258, %rd257, %rd121;
	add.s64 	%rd259, %rd258, %rd235;
	add.s64 	%rd109, %rd259, 256;
	shl.b64 	%rd260, %rd146, 12;
	add.s64 	%rd261, %rd260, %rd121;
	add.s64 	%rd262, %rd261, %rd235;
	add.s64 	%rd110, %rd262, 256;
	shl.b64 	%rd263, %rd147, 12;
	add.s64 	%rd264, %rd263, %rd121;
	add.s64 	%rd265, %rd264, %rd235;
	add.s64 	%rd111, %rd265, 256;
	shl.b64 	%rd266, %rd148, 12;
	add.s64 	%rd267, %rd266, %rd121;
	add.s64 	%rd268, %rd267, %rd235;
	add.s64 	%rd112, %rd268, 256;
	shl.b64 	%rd269, %rd149, 12;
	add.s64 	%rd270, %rd269, %rd121;
	add.s64 	%rd271, %rd270, %rd235;
	add.s64 	%rd113, %rd271, 256;
	shl.b64 	%rd272, %rd150, 12;
	add.s64 	%rd273, %rd272, %rd121;
	add.s64 	%rd274, %rd273, %rd235;
	add.s64 	%rd114, %rd274, 256;
	shl.b64 	%rd275, %rd151, 12;
	add.s64 	%rd276, %rd275, %rd121;
	add.s64 	%rd277, %rd276, %rd235;
	add.s64 	%rd115, %rd277, 256;
	shl.b64 	%rd278, %rd152, 12;
	add.s64 	%rd279, %rd278, %rd121;
	add.s64 	%rd280, %rd279, %rd235;
	add.s64 	%rd116, %rd280, 256;
	shl.b64 	%rd281, %rd153, 12;
	add.s64 	%rd282, %rd281, %rd121;
	add.s64 	%rd283, %rd282, %rd235;
	add.s64 	%rd117, %rd283, 256;
	bar.sync 	0;
	add.s64 	%rd284, %rd118, 65536;
	add.s64 	%rd285, %rd284, %rd203;
	add.s64 	%rd286, %rd284, %rd205;
	add.s64 	%rd287, %rd284, %rd207;
	add.s64 	%rd288, %rd284, %rd209;
	add.s64 	%rd289, %rd284, %rd211;
	add.s64 	%rd290, %rd284, %rd213;
	add.s64 	%rd291, %rd284, %rd215;
	add.s64 	%rd292, %rd284, %rd217;
	add.s64 	%rd293, %rd284, %rd219;
	add.s64 	%rd294, %rd284, %rd221;
	add.s64 	%rd295, %rd284, %rd223;
	add.s64 	%rd296, %rd284, %rd225;
	add.s64 	%rd297, %rd284, %rd227;
	add.s64 	%rd298, %rd284, %rd229;
	add.s64 	%rd299, %rd284, %rd231;
	add.s64 	%rd300, %rd284, %rd233;
	cvt.u32.u64 	%r46, %rd285;
	// begin inline asm
	cp.async.cg.shared.global [ %r46 + 0 ], [ %rd102 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r48, %rd286;
	// begin inline asm
	cp.async.cg.shared.global [ %r48 + 0 ], [ %rd103 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r50, %rd287;
	// begin inline asm
	cp.async.cg.shared.global [ %r50 + 0 ], [ %rd104 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r52, %rd288;
	// begin inline asm
	cp.async.cg.shared.global [ %r52 + 0 ], [ %rd105 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r54, %rd289;
	// begin inline asm
	cp.async.cg.shared.global [ %r54 + 0 ], [ %rd106 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r56, %rd290;
	// begin inline asm
	cp.async.cg.shared.global [ %r56 + 0 ], [ %rd107 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r58, %rd291;
	// begin inline asm
	cp.async.cg.shared.global [ %r58 + 0 ], [ %rd108 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r60, %rd292;
	// begin inline asm
	cp.async.cg.shared.global [ %r60 + 0 ], [ %rd109 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r62, %rd293;
	// begin inline asm
	cp.async.cg.shared.global [ %r62 + 0 ], [ %rd110 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r64, %rd294;
	// begin inline asm
	cp.async.cg.shared.global [ %r64 + 0 ], [ %rd111 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r66, %rd295;
	// begin inline asm
	cp.async.cg.shared.global [ %r66 + 0 ], [ %rd112 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r68, %rd296;
	// begin inline asm
	cp.async.cg.shared.global [ %r68 + 0 ], [ %rd113 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r70, %rd297;
	// begin inline asm
	cp.async.cg.shared.global [ %r70 + 0 ], [ %rd114 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r72, %rd298;
	// begin inline asm
	cp.async.cg.shared.global [ %r72 + 0 ], [ %rd115 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r74, %rd299;
	// begin inline asm
	cp.async.cg.shared.global [ %r74 + 0 ], [ %rd116 + 0 ], 0x10, %r15;
	// end inline asm
	cvt.u32.u64 	%r76, %rd300;
	// begin inline asm
	cp.async.cg.shared.global [ %r76 + 0 ], [ %rd117 + 0 ], 0x10, %r15;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	// begin inline asm
	cp.async.wait_group 0x1;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r185, %r114, 136;
	and.b32  	%r186, %r115, 272;
	or.b32  	%r187, %r185, %r186;
	and.b32  	%r188, %r116, 544;
	shl.b32 	%r189, %r4, 7;
	and.b32  	%r190, %r189, 1024;
	or.b32  	%r191, %r188, %r190;
	or.b32  	%r192, %r191, %r187;
	shr.u32 	%r193, %r89, 1;
	xor.b32  	%r194, %r192, %r193;
	shl.b32 	%r195, %r91, 6;
	or.b32  	%r196, %r194, %r195;
	shl.b32 	%r197, %r93, 6;
	selp.b32 	%r198, 0, 8192, %p1;
	or.b32  	%r199, %r197, %r196;
	or.b32  	%r200, %r199, %r198;
	cvt.u64.u32 	%rd19, %r200;
	or.b32  	%r201, %r193, %r195;
	or.b32  	%r202, %r185, 16;
	xor.b32  	%r203, %r202, %r186;
	or.b32  	%r204, %r190, %r203;
	or.b32  	%r205, %r204, %r188;
	or.b32  	%r206, %r197, %r201;
	or.b32  	%r207, %r206, %r198;
	xor.b32  	%r208, %r207, %r205;
	cvt.u64.u32 	%rd20, %r208;
	or.b32  	%r209, %r187, 32;
	xor.b32  	%r210, %r209, %r188;
	or.b32  	%r211, %r210, %r190;
	xor.b32  	%r212, %r207, %r211;
	cvt.u64.u32 	%rd21, %r212;
	or.b32  	%r213, %r185, 48;
	or.b32  	%r214, %r188, %r186;
	xor.b32  	%r215, %r214, %r213;
	or.b32  	%r216, %r215, %r190;
	xor.b32  	%r217, %r207, %r216;
	cvt.u64.u32 	%rd22, %r217;
	or.b32  	%r218, %r192, 64;
	xor.b32  	%r219, %r207, %r218;
	cvt.u64.u32 	%rd23, %r219;
	or.b32  	%r220, %r185, 80;
	xor.b32  	%r221, %r220, %r186;
	or.b32  	%r222, %r190, %r221;
	or.b32  	%r223, %r222, %r188;
	xor.b32  	%r224, %r207, %r223;
	cvt.u64.u32 	%rd24, %r224;
	or.b32  	%r225, %r187, 96;
	xor.b32  	%r226, %r225, %r188;
	or.b32  	%r227, %r226, %r190;
	xor.b32  	%r228, %r207, %r227;
	cvt.u64.u32 	%rd25, %r228;
	or.b32  	%r229, %r185, 112;
	xor.b32  	%r230, %r214, %r229;
	or.b32  	%r231, %r230, %r190;
	xor.b32  	%r232, %r207, %r231;
	cvt.u64.u32 	%rd26, %r232;
	or.b32  	%r233, %r192, 16384;
	xor.b32  	%r234, %r207, %r233;
	cvt.u64.u32 	%rd27, %r234;
	or.b32  	%r235, %r185, 16400;
	xor.b32  	%r236, %r235, %r186;
	or.b32  	%r237, %r190, %r236;
	or.b32  	%r238, %r237, %r188;
	xor.b32  	%r239, %r207, %r238;
	cvt.u64.u32 	%rd28, %r239;
	or.b32  	%r240, %r187, 16416;
	xor.b32  	%r241, %r240, %r188;
	or.b32  	%r242, %r241, %r190;
	xor.b32  	%r243, %r207, %r242;
	cvt.u64.u32 	%rd29, %r243;
	or.b32  	%r244, %r185, 16432;
	xor.b32  	%r245, %r214, %r244;
	or.b32  	%r246, %r245, %r190;
	xor.b32  	%r247, %r207, %r246;
	cvt.u64.u32 	%rd30, %r247;
	or.b32  	%r248, %r192, 16448;
	xor.b32  	%r249, %r207, %r248;
	cvt.u64.u32 	%rd31, %r249;
	or.b32  	%r250, %r185, 16464;
	xor.b32  	%r251, %r250, %r186;
	or.b32  	%r252, %r190, %r251;
	or.b32  	%r253, %r252, %r188;
	xor.b32  	%r254, %r207, %r253;
	cvt.u64.u32 	%rd32, %r254;
	or.b32  	%r255, %r187, 16480;
	xor.b32  	%r256, %r255, %r188;
	or.b32  	%r257, %r256, %r190;
	xor.b32  	%r258, %r207, %r257;
	cvt.u64.u32 	%rd33, %r258;
	or.b32  	%r259, %r185, 16496;
	xor.b32  	%r260, %r214, %r259;
	or.b32  	%r261, %r260, %r190;
	xor.b32  	%r262, %r207, %r261;
	cvt.u64.u32 	%rd34, %r262;
	and.b32  	%r263, %r4, 15;
	mul.wide.u32 	%rd35, %r263, 16;
	add.s64 	%rd431, %rd282, 512;
	add.s64 	%rd430, %rd279, 512;
	add.s64 	%rd429, %rd276, 512;
	add.s64 	%rd428, %rd273, 512;
	add.s64 	%rd427, %rd270, 512;
	add.s64 	%rd426, %rd267, 512;
	add.s64 	%rd425, %rd264, 512;
	add.s64 	%rd424, %rd261, 512;
	add.s64 	%rd423, %rd258, 512;
	add.s64 	%rd422, %rd255, 512;
	add.s64 	%rd421, %rd252, 512;
	add.s64 	%rd420, %rd249, 512;
	add.s64 	%rd419, %rd246, 512;
	add.s64 	%rd418, %rd243, 512;
	add.s64 	%rd417, %rd240, 512;
	add.s64 	%rd416, %rd237, 512;
	mov.f32 	%f641, 0f00000000;
	mov.b32 	%r879, 1;
	mov.b32 	%r348, 0;
	mov.b32 	%r877, -128;
	shl.b64 	%rd317, %rd19, 1;
	shl.b64 	%rd319, %rd20, 1;
	shl.b64 	%rd321, %rd21, 1;
	shl.b64 	%rd323, %rd22, 1;
	shl.b64 	%rd325, %rd23, 1;
	shl.b64 	%rd327, %rd24, 1;
	shl.b64 	%rd329, %rd25, 1;
	shl.b64 	%rd331, %rd26, 1;
	shl.b64 	%rd333, %rd27, 1;
	shl.b64 	%rd335, %rd28, 1;
	shl.b64 	%rd337, %rd29, 1;
	shl.b64 	%rd339, %rd30, 1;
	shl.b64 	%rd341, %rd31, 1;
	shl.b64 	%rd343, %rd32, 1;
	shl.b64 	%rd345, %rd33, 1;
	shl.b64 	%rd347, %rd34, 1;
	shl.b64 	%rd352, %rd3, 1;
	shl.b64 	%rd354, %rd4, 1;
	shl.b64 	%rd356, %rd5, 1;
	shl.b64 	%rd358, %rd6, 1;
	shl.b64 	%rd360, %rd7, 1;
	shl.b64 	%rd362, %rd8, 1;
	shl.b64 	%rd364, %rd9, 1;
	shl.b64 	%rd366, %rd10, 1;
	shl.b64 	%rd368, %rd11, 1;
	shl.b64 	%rd370, %rd12, 1;
	shl.b64 	%rd372, %rd13, 1;
	shl.b64 	%rd374, %rd14, 1;
	shl.b64 	%rd376, %rd15, 1;
	shl.b64 	%rd378, %rd16, 1;
	shl.b64 	%rd380, %rd17, 1;
	shl.b64 	%rd382, %rd18, 1;
	mov.u64 	%rd432, %rd118;
	mov.u32 	%r878, %r348;
	mov.f32 	%f642, %f641;
	mov.f32 	%f643, %f641;
	mov.f32 	%f644, %f641;
	mov.f32 	%f645, %f641;
	mov.f32 	%f646, %f641;
	mov.f32 	%f647, %f641;
	mov.f32 	%f648, %f641;
	mov.f32 	%f649, %f641;
	mov.f32 	%f650, %f641;
	mov.f32 	%f651, %f641;
	mov.f32 	%f652, %f641;
	mov.f32 	%f653, %f641;
	mov.f32 	%f654, %f641;
	mov.f32 	%f655, %f641;
	mov.f32 	%f656, %f641;
	mov.f32 	%f657, %f641;
	mov.f32 	%f658, %f641;
	mov.f32 	%f659, %f641;
	mov.f32 	%f660, %f641;
	mov.f32 	%f661, %f641;
	mov.f32 	%f662, %f641;
	mov.f32 	%f663, %f641;
	mov.f32 	%f664, %f641;
	mov.f32 	%f665, %f641;
	mov.f32 	%f666, %f641;
	mov.f32 	%f667, %f641;
	mov.f32 	%f668, %f641;
	mov.f32 	%f669, %f641;
	mov.f32 	%f670, %f641;
	mov.f32 	%f671, %f641;
	mov.f32 	%f672, %f641;
$L__BB2_1:
	add.s32 	%r877, %r877, 128;
	setp.lt.u32 	%p2, %r877, 1792;
	add.s64 	%rd318, %rd432, %rd317;
	cvt.u32.u64 	%r268, %rd318;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r344, %r345, %r346, %r347}, [%r268];
	// end inline asm
	add.s64 	%rd320, %rd432, %rd319;
	cvt.u32.u64 	%r273, %rd320;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r392, %r393, %r394, %r395}, [%r273];
	// end inline asm
	add.s64 	%rd322, %rd432, %rd321;
	cvt.u32.u64 	%r278, %rd322;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r440, %r441, %r442, %r443}, [%r278];
	// end inline asm
	add.s64 	%rd324, %rd432, %rd323;
	cvt.u32.u64 	%r283, %rd324;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r488, %r489, %r490, %r491}, [%r283];
	// end inline asm
	add.s64 	%rd326, %rd432, %rd325;
	cvt.u32.u64 	%r288, %rd326;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r536, %r537, %r538, %r539}, [%r288];
	// end inline asm
	add.s64 	%rd328, %rd432, %rd327;
	cvt.u32.u64 	%r293, %rd328;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r584, %r585, %r586, %r587}, [%r293];
	// end inline asm
	add.s64 	%rd330, %rd432, %rd329;
	cvt.u32.u64 	%r298, %rd330;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r632, %r633, %r634, %r635}, [%r298];
	// end inline asm
	add.s64 	%rd332, %rd432, %rd331;
	cvt.u32.u64 	%r303, %rd332;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r680, %r681, %r682, %r683}, [%r303];
	// end inline asm
	add.s64 	%rd334, %rd432, %rd333;
	cvt.u32.u64 	%r308, %rd334;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r368, %r369, %r370, %r371}, [%r308];
	// end inline asm
	add.s64 	%rd336, %rd432, %rd335;
	cvt.u32.u64 	%r313, %rd336;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r416, %r417, %r418, %r419}, [%r313];
	// end inline asm
	add.s64 	%rd338, %rd432, %rd337;
	cvt.u32.u64 	%r318, %rd338;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r464, %r465, %r466, %r467}, [%r318];
	// end inline asm
	add.s64 	%rd340, %rd432, %rd339;
	cvt.u32.u64 	%r323, %rd340;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r512, %r513, %r514, %r515}, [%r323];
	// end inline asm
	add.s64 	%rd342, %rd432, %rd341;
	cvt.u32.u64 	%r328, %rd342;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r560, %r561, %r562, %r563}, [%r328];
	// end inline asm
	add.s64 	%rd344, %rd432, %rd343;
	cvt.u32.u64 	%r333, %rd344;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r608, %r609, %r610, %r611}, [%r333];
	// end inline asm
	add.s64 	%rd346, %rd432, %rd345;
	cvt.u32.u64 	%r338, %rd346;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r656, %r657, %r658, %r659}, [%r338];
	// end inline asm
	add.s64 	%rd348, %rd432, %rd347;
	cvt.u32.u64 	%r343, %rd348;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r704, %r705, %r706, %r707}, [%r343];
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f641, %f642, %f643, %f644 }, { %r344, %r345, %r346, %r347 }, { %r348, %r348 }, { %f641, %f642, %f643, %f644 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f645, %f646, %f647, %f648 }, { %r344, %r345, %r346, %r347 }, { %r348, %r348 }, { %f645, %f646, %f647, %f648 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f649, %f650, %f651, %f652 }, { %r344, %r345, %r346, %r347 }, { %r348, %r348 }, { %f649, %f650, %f651, %f652 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f653, %f654, %f655, %f656 }, { %r344, %r345, %r346, %r347 }, { %r348, %r348 }, { %f653, %f654, %f655, %f656 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f657, %f658, %f659, %f660 }, { %r368, %r369, %r370, %r371 }, { %r348, %r348 }, { %f657, %f658, %f659, %f660 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f661, %f662, %f663, %f664 }, { %r368, %r369, %r370, %r371 }, { %r348, %r348 }, { %f661, %f662, %f663, %f664 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f665, %f666, %f667, %f668 }, { %r368, %r369, %r370, %r371 }, { %r348, %r348 }, { %f665, %f666, %f667, %f668 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f669, %f670, %f671, %f672 }, { %r368, %r369, %r370, %r371 }, { %r348, %r348 }, { %f669, %f670, %f671, %f672 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f641, %f642, %f643, %f644 }, { %r392, %r393, %r394, %r395 }, { %r348, %r348 }, { %f641, %f642, %f643, %f644 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f645, %f646, %f647, %f648 }, { %r392, %r393, %r394, %r395 }, { %r348, %r348 }, { %f645, %f646, %f647, %f648 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f649, %f650, %f651, %f652 }, { %r392, %r393, %r394, %r395 }, { %r348, %r348 }, { %f649, %f650, %f651, %f652 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f653, %f654, %f655, %f656 }, { %r392, %r393, %r394, %r395 }, { %r348, %r348 }, { %f653, %f654, %f655, %f656 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f657, %f658, %f659, %f660 }, { %r416, %r417, %r418, %r419 }, { %r348, %r348 }, { %f657, %f658, %f659, %f660 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f661, %f662, %f663, %f664 }, { %r416, %r417, %r418, %r419 }, { %r348, %r348 }, { %f661, %f662, %f663, %f664 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f665, %f666, %f667, %f668 }, { %r416, %r417, %r418, %r419 }, { %r348, %r348 }, { %f665, %f666, %f667, %f668 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f669, %f670, %f671, %f672 }, { %r416, %r417, %r418, %r419 }, { %r348, %r348 }, { %f669, %f670, %f671, %f672 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f641, %f642, %f643, %f644 }, { %r440, %r441, %r442, %r443 }, { %r348, %r348 }, { %f641, %f642, %f643, %f644 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f645, %f646, %f647, %f648 }, { %r440, %r441, %r442, %r443 }, { %r348, %r348 }, { %f645, %f646, %f647, %f648 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f649, %f650, %f651, %f652 }, { %r440, %r441, %r442, %r443 }, { %r348, %r348 }, { %f649, %f650, %f651, %f652 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f653, %f654, %f655, %f656 }, { %r440, %r441, %r442, %r443 }, { %r348, %r348 }, { %f653, %f654, %f655, %f656 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f657, %f658, %f659, %f660 }, { %r464, %r465, %r466, %r467 }, { %r348, %r348 }, { %f657, %f658, %f659, %f660 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f661, %f662, %f663, %f664 }, { %r464, %r465, %r466, %r467 }, { %r348, %r348 }, { %f661, %f662, %f663, %f664 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f665, %f666, %f667, %f668 }, { %r464, %r465, %r466, %r467 }, { %r348, %r348 }, { %f665, %f666, %f667, %f668 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f669, %f670, %f671, %f672 }, { %r464, %r465, %r466, %r467 }, { %r348, %r348 }, { %f669, %f670, %f671, %f672 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f641, %f642, %f643, %f644 }, { %r488, %r489, %r490, %r491 }, { %r348, %r348 }, { %f641, %f642, %f643, %f644 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f645, %f646, %f647, %f648 }, { %r488, %r489, %r490, %r491 }, { %r348, %r348 }, { %f645, %f646, %f647, %f648 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f649, %f650, %f651, %f652 }, { %r488, %r489, %r490, %r491 }, { %r348, %r348 }, { %f649, %f650, %f651, %f652 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f653, %f654, %f655, %f656 }, { %r488, %r489, %r490, %r491 }, { %r348, %r348 }, { %f653, %f654, %f655, %f656 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f657, %f658, %f659, %f660 }, { %r512, %r513, %r514, %r515 }, { %r348, %r348 }, { %f657, %f658, %f659, %f660 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f661, %f662, %f663, %f664 }, { %r512, %r513, %r514, %r515 }, { %r348, %r348 }, { %f661, %f662, %f663, %f664 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f665, %f666, %f667, %f668 }, { %r512, %r513, %r514, %r515 }, { %r348, %r348 }, { %f665, %f666, %f667, %f668 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f669, %f670, %f671, %f672 }, { %r512, %r513, %r514, %r515 }, { %r348, %r348 }, { %f669, %f670, %f671, %f672 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f641, %f642, %f643, %f644 }, { %r536, %r537, %r538, %r539 }, { %r348, %r348 }, { %f641, %f642, %f643, %f644 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f645, %f646, %f647, %f648 }, { %r536, %r537, %r538, %r539 }, { %r348, %r348 }, { %f645, %f646, %f647, %f648 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f649, %f650, %f651, %f652 }, { %r536, %r537, %r538, %r539 }, { %r348, %r348 }, { %f649, %f650, %f651, %f652 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f653, %f654, %f655, %f656 }, { %r536, %r537, %r538, %r539 }, { %r348, %r348 }, { %f653, %f654, %f655, %f656 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f657, %f658, %f659, %f660 }, { %r560, %r561, %r562, %r563 }, { %r348, %r348 }, { %f657, %f658, %f659, %f660 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f661, %f662, %f663, %f664 }, { %r560, %r561, %r562, %r563 }, { %r348, %r348 }, { %f661, %f662, %f663, %f664 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f665, %f666, %f667, %f668 }, { %r560, %r561, %r562, %r563 }, { %r348, %r348 }, { %f665, %f666, %f667, %f668 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f669, %f670, %f671, %f672 }, { %r560, %r561, %r562, %r563 }, { %r348, %r348 }, { %f669, %f670, %f671, %f672 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f641, %f642, %f643, %f644 }, { %r584, %r585, %r586, %r587 }, { %r348, %r348 }, { %f641, %f642, %f643, %f644 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f645, %f646, %f647, %f648 }, { %r584, %r585, %r586, %r587 }, { %r348, %r348 }, { %f645, %f646, %f647, %f648 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f649, %f650, %f651, %f652 }, { %r584, %r585, %r586, %r587 }, { %r348, %r348 }, { %f649, %f650, %f651, %f652 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f653, %f654, %f655, %f656 }, { %r584, %r585, %r586, %r587 }, { %r348, %r348 }, { %f653, %f654, %f655, %f656 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f657, %f658, %f659, %f660 }, { %r608, %r609, %r610, %r611 }, { %r348, %r348 }, { %f657, %f658, %f659, %f660 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f661, %f662, %f663, %f664 }, { %r608, %r609, %r610, %r611 }, { %r348, %r348 }, { %f661, %f662, %f663, %f664 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f665, %f666, %f667, %f668 }, { %r608, %r609, %r610, %r611 }, { %r348, %r348 }, { %f665, %f666, %f667, %f668 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f669, %f670, %f671, %f672 }, { %r608, %r609, %r610, %r611 }, { %r348, %r348 }, { %f669, %f670, %f671, %f672 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f641, %f642, %f643, %f644 }, { %r632, %r633, %r634, %r635 }, { %r348, %r348 }, { %f641, %f642, %f643, %f644 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f645, %f646, %f647, %f648 }, { %r632, %r633, %r634, %r635 }, { %r348, %r348 }, { %f645, %f646, %f647, %f648 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f649, %f650, %f651, %f652 }, { %r632, %r633, %r634, %r635 }, { %r348, %r348 }, { %f649, %f650, %f651, %f652 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f653, %f654, %f655, %f656 }, { %r632, %r633, %r634, %r635 }, { %r348, %r348 }, { %f653, %f654, %f655, %f656 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f657, %f658, %f659, %f660 }, { %r656, %r657, %r658, %r659 }, { %r348, %r348 }, { %f657, %f658, %f659, %f660 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f661, %f662, %f663, %f664 }, { %r656, %r657, %r658, %r659 }, { %r348, %r348 }, { %f661, %f662, %f663, %f664 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f665, %f666, %f667, %f668 }, { %r656, %r657, %r658, %r659 }, { %r348, %r348 }, { %f665, %f666, %f667, %f668 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f669, %f670, %f671, %f672 }, { %r656, %r657, %r658, %r659 }, { %r348, %r348 }, { %f669, %f670, %f671, %f672 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f641, %f642, %f643, %f644 }, { %r680, %r681, %r682, %r683 }, { %r348, %r348 }, { %f641, %f642, %f643, %f644 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f645, %f646, %f647, %f648 }, { %r680, %r681, %r682, %r683 }, { %r348, %r348 }, { %f645, %f646, %f647, %f648 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f649, %f650, %f651, %f652 }, { %r680, %r681, %r682, %r683 }, { %r348, %r348 }, { %f649, %f650, %f651, %f652 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f653, %f654, %f655, %f656 }, { %r680, %r681, %r682, %r683 }, { %r348, %r348 }, { %f653, %f654, %f655, %f656 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f657, %f658, %f659, %f660 }, { %r704, %r705, %r706, %r707 }, { %r348, %r348 }, { %f657, %f658, %f659, %f660 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f661, %f662, %f663, %f664 }, { %r704, %r705, %r706, %r707 }, { %r348, %r348 }, { %f661, %f662, %f663, %f664 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f665, %f666, %f667, %f668 }, { %r704, %r705, %r706, %r707 }, { %r348, %r348 }, { %f665, %f666, %f667, %f668 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %f669, %f670, %f671, %f672 }, { %r704, %r705, %r706, %r707 }, { %r348, %r348 }, { %f669, %f670, %f671, %f672 };
	// end inline asm
	add.s32 	%r760, %r879, 1;
	setp.lt.s32 	%p3, %r760, 2;
	selp.b32 	%r879, %r760, 0, %p3;
	add.s64 	%rd301, %rd416, %rd35;
	add.s64 	%rd302, %rd417, %rd35;
	add.s64 	%rd303, %rd418, %rd35;
	add.s64 	%rd304, %rd419, %rd35;
	add.s64 	%rd305, %rd420, %rd35;
	add.s64 	%rd306, %rd421, %rd35;
	add.s64 	%rd307, %rd422, %rd35;
	add.s64 	%rd308, %rd423, %rd35;
	add.s64 	%rd309, %rd424, %rd35;
	add.s64 	%rd310, %rd425, %rd35;
	add.s64 	%rd311, %rd426, %rd35;
	add.s64 	%rd312, %rd427, %rd35;
	add.s64 	%rd313, %rd428, %rd35;
	add.s64 	%rd314, %rd429, %rd35;
	add.s64 	%rd315, %rd430, %rd35;
	add.s64 	%rd316, %rd431, %rd35;
	shl.b32 	%r761, %r879, 15;
	mul.wide.s32 	%rd349, %r761, 2;
	add.s64 	%rd351, %rd118, %rd349;
	bar.sync 	0;
	add.s64 	%rd353, %rd351, %rd352;
	add.s64 	%rd355, %rd351, %rd354;
	add.s64 	%rd357, %rd351, %rd356;
	add.s64 	%rd359, %rd351, %rd358;
	add.s64 	%rd361, %rd351, %rd360;
	add.s64 	%rd363, %rd351, %rd362;
	add.s64 	%rd365, %rd351, %rd364;
	add.s64 	%rd367, %rd351, %rd366;
	add.s64 	%rd369, %rd351, %rd368;
	add.s64 	%rd371, %rd351, %rd370;
	add.s64 	%rd373, %rd351, %rd372;
	add.s64 	%rd375, %rd351, %rd374;
	add.s64 	%rd377, %rd351, %rd376;
	add.s64 	%rd379, %rd351, %rd378;
	add.s64 	%rd381, %rd351, %rd380;
	add.s64 	%rd383, %rd351, %rd382;
	selp.b32 	%r729, 16, 0, %p2;
	cvt.u32.u64 	%r728, %rd353;
	// begin inline asm
	cp.async.cg.shared.global [ %r728 + 0 ], [ %rd301 + 0 ], 0x10, %r729;
	// end inline asm
	cvt.u32.u64 	%r730, %rd355;
	// begin inline asm
	cp.async.cg.shared.global [ %r730 + 0 ], [ %rd302 + 0 ], 0x10, %r729;
	// end inline asm
	cvt.u32.u64 	%r732, %rd357;
	// begin inline asm
	cp.async.cg.shared.global [ %r732 + 0 ], [ %rd303 + 0 ], 0x10, %r729;
	// end inline asm
	cvt.u32.u64 	%r734, %rd359;
	// begin inline asm
	cp.async.cg.shared.global [ %r734 + 0 ], [ %rd304 + 0 ], 0x10, %r729;
	// end inline asm
	cvt.u32.u64 	%r736, %rd361;
	// begin inline asm
	cp.async.cg.shared.global [ %r736 + 0 ], [ %rd305 + 0 ], 0x10, %r729;
	// end inline asm
	cvt.u32.u64 	%r738, %rd363;
	// begin inline asm
	cp.async.cg.shared.global [ %r738 + 0 ], [ %rd306 + 0 ], 0x10, %r729;
	// end inline asm
	cvt.u32.u64 	%r740, %rd365;
	// begin inline asm
	cp.async.cg.shared.global [ %r740 + 0 ], [ %rd307 + 0 ], 0x10, %r729;
	// end inline asm
	cvt.u32.u64 	%r742, %rd367;
	// begin inline asm
	cp.async.cg.shared.global [ %r742 + 0 ], [ %rd308 + 0 ], 0x10, %r729;
	// end inline asm
	cvt.u32.u64 	%r744, %rd369;
	// begin inline asm
	cp.async.cg.shared.global [ %r744 + 0 ], [ %rd309 + 0 ], 0x10, %r729;
	// end inline asm
	cvt.u32.u64 	%r746, %rd371;
	// begin inline asm
	cp.async.cg.shared.global [ %r746 + 0 ], [ %rd310 + 0 ], 0x10, %r729;
	// end inline asm
	cvt.u32.u64 	%r748, %rd373;
	// begin inline asm
	cp.async.cg.shared.global [ %r748 + 0 ], [ %rd311 + 0 ], 0x10, %r729;
	// end inline asm
	cvt.u32.u64 	%r750, %rd375;
	// begin inline asm
	cp.async.cg.shared.global [ %r750 + 0 ], [ %rd312 + 0 ], 0x10, %r729;
	// end inline asm
	cvt.u32.u64 	%r752, %rd377;
	// begin inline asm
	cp.async.cg.shared.global [ %r752 + 0 ], [ %rd313 + 0 ], 0x10, %r729;
	// end inline asm
	cvt.u32.u64 	%r754, %rd379;
	// begin inline asm
	cp.async.cg.shared.global [ %r754 + 0 ], [ %rd314 + 0 ], 0x10, %r729;
	// end inline asm
	cvt.u32.u64 	%r756, %rd381;
	// begin inline asm
	cp.async.cg.shared.global [ %r756 + 0 ], [ %rd315 + 0 ], 0x10, %r729;
	// end inline asm
	cvt.u32.u64 	%r758, %rd383;
	// begin inline asm
	cp.async.cg.shared.global [ %r758 + 0 ], [ %rd316 + 0 ], 0x10, %r729;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	add.s32 	%r762, %r878, 1;
	setp.lt.s32 	%p4, %r762, 2;
	selp.b32 	%r878, %r762, 0, %p4;
	// begin inline asm
	cp.async.wait_group 0x1;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r763, %r878, 15;
	mul.wide.s32 	%rd384, %r763, 2;
	add.s64 	%rd432, %rd118, %rd384;
	add.s64 	%rd431, %rd431, 256;
	add.s64 	%rd430, %rd430, 256;
	add.s64 	%rd429, %rd429, 256;
	add.s64 	%rd428, %rd428, 256;
	add.s64 	%rd427, %rd427, 256;
	add.s64 	%rd426, %rd426, 256;
	add.s64 	%rd425, %rd425, 256;
	add.s64 	%rd424, %rd424, 256;
	add.s64 	%rd423, %rd423, 256;
	add.s64 	%rd422, %rd422, 256;
	add.s64 	%rd421, %rd421, 256;
	add.s64 	%rd420, %rd420, 256;
	add.s64 	%rd419, %rd419, 256;
	add.s64 	%rd418, %rd418, 256;
	add.s64 	%rd417, %rd417, 256;
	add.s64 	%rd416, %rd416, 256;
	setp.lt.u32 	%p5, %r877, 1920;
	@%p5 bra 	$L__BB2_1;
	shl.b32 	%r844, %r2, 3;
	sub.s32 	%r845, %r13, %r844;
	div.s32 	%r846, %r845, %r3;
	// begin inline asm
	cp.async.wait_group 0x0;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r764, %f641;
	// begin inline asm
	cvt.rn.bf16.f32 %rs33, %r764;
	// end inline asm
	mov.b32 	%r765, %f642;
	// begin inline asm
	cvt.rn.bf16.f32 %rs34, %r765;
	// end inline asm
	mov.b32 	%r766, %f643;
	// begin inline asm
	cvt.rn.bf16.f32 %rs35, %r766;
	// end inline asm
	mov.b32 	%r767, %f644;
	// begin inline asm
	cvt.rn.bf16.f32 %rs36, %r767;
	// end inline asm
	mov.b32 	%r768, %f645;
	// begin inline asm
	cvt.rn.bf16.f32 %rs41, %r768;
	// end inline asm
	mov.b32 	%r769, %f646;
	// begin inline asm
	cvt.rn.bf16.f32 %rs42, %r769;
	// end inline asm
	mov.b32 	%r770, %f647;
	// begin inline asm
	cvt.rn.bf16.f32 %rs43, %r770;
	// end inline asm
	mov.b32 	%r771, %f648;
	// begin inline asm
	cvt.rn.bf16.f32 %rs44, %r771;
	// end inline asm
	mov.b32 	%r772, %f649;
	// begin inline asm
	cvt.rn.bf16.f32 %rs49, %r772;
	// end inline asm
	mov.b32 	%r773, %f650;
	// begin inline asm
	cvt.rn.bf16.f32 %rs50, %r773;
	// end inline asm
	mov.b32 	%r774, %f651;
	// begin inline asm
	cvt.rn.bf16.f32 %rs51, %r774;
	// end inline asm
	mov.b32 	%r775, %f652;
	// begin inline asm
	cvt.rn.bf16.f32 %rs52, %r775;
	// end inline asm
	mov.b32 	%r776, %f653;
	// begin inline asm
	cvt.rn.bf16.f32 %rs57, %r776;
	// end inline asm
	mov.b32 	%r777, %f654;
	// begin inline asm
	cvt.rn.bf16.f32 %rs58, %r777;
	// end inline asm
	mov.b32 	%r778, %f655;
	// begin inline asm
	cvt.rn.bf16.f32 %rs59, %r778;
	// end inline asm
	mov.b32 	%r779, %f656;
	// begin inline asm
	cvt.rn.bf16.f32 %rs60, %r779;
	// end inline asm
	mov.b32 	%r780, %f657;
	// begin inline asm
	cvt.rn.bf16.f32 %rs37, %r780;
	// end inline asm
	mov.b32 	%r781, %f658;
	// begin inline asm
	cvt.rn.bf16.f32 %rs38, %r781;
	// end inline asm
	mov.b32 	%r782, %f659;
	// begin inline asm
	cvt.rn.bf16.f32 %rs39, %r782;
	// end inline asm
	mov.b32 	%r783, %f660;
	// begin inline asm
	cvt.rn.bf16.f32 %rs40, %r783;
	// end inline asm
	mov.b32 	%r784, %f661;
	// begin inline asm
	cvt.rn.bf16.f32 %rs45, %r784;
	// end inline asm
	mov.b32 	%r785, %f662;
	// begin inline asm
	cvt.rn.bf16.f32 %rs46, %r785;
	// end inline asm
	mov.b32 	%r786, %f663;
	// begin inline asm
	cvt.rn.bf16.f32 %rs47, %r786;
	// end inline asm
	mov.b32 	%r787, %f664;
	// begin inline asm
	cvt.rn.bf16.f32 %rs48, %r787;
	// end inline asm
	mov.b32 	%r788, %f665;
	// begin inline asm
	cvt.rn.bf16.f32 %rs53, %r788;
	// end inline asm
	mov.b32 	%r789, %f666;
	// begin inline asm
	cvt.rn.bf16.f32 %rs54, %r789;
	// end inline asm
	mov.b32 	%r790, %f667;
	// begin inline asm
	cvt.rn.bf16.f32 %rs55, %r790;
	// end inline asm
	mov.b32 	%r791, %f668;
	// begin inline asm
	cvt.rn.bf16.f32 %rs56, %r791;
	// end inline asm
	mov.b32 	%r792, %f669;
	// begin inline asm
	cvt.rn.bf16.f32 %rs61, %r792;
	// end inline asm
	mov.b32 	%r793, %f670;
	// begin inline asm
	cvt.rn.bf16.f32 %rs62, %r793;
	// end inline asm
	mov.b32 	%r794, %f671;
	// begin inline asm
	cvt.rn.bf16.f32 %rs63, %r794;
	// end inline asm
	mov.b32 	%r795, %f672;
	// begin inline asm
	cvt.rn.bf16.f32 %rs64, %r795;
	// end inline asm
	shl.b32 	%r847, %r846, 5;
	cvt.s64.s32 	%rd389, %r847;
	and.b32  	%r848, %r5, 248;
	cvt.u64.u32 	%rd390, %r848;
	or.b64  	%rd391, %rd2, %rd390;
	bfe.u32 	%r849, %r4, 5, 2;
	selp.b32 	%r850, 0, 4, %p1;
	or.b32  	%r851, %r849, %r850;
	or.b32  	%r852, %r851, 8;
	or.b32  	%r853, %r851, 16;
	or.b32  	%r854, %r851, 24;
	cvt.u64.u32 	%rd392, %r851;
	cvt.u64.u32 	%rd393, %r852;
	cvt.u64.u32 	%rd394, %r853;
	cvt.u64.u32 	%rd395, %r854;
	or.b64  	%rd396, %rd389, %rd392;
	or.b64  	%rd397, %rd389, %rd393;
	or.b64  	%rd398, %rd389, %rd394;
	or.b64  	%rd399, %rd389, %rd395;
	shl.b64 	%rd400, %rd391, 1;
	add.s64 	%rd401, %rd1, %rd400;
	mad.lo.s64 	%rd385, %rd396, 53248, %rd401;
	mad.lo.s64 	%rd386, %rd397, 53248, %rd401;
	mad.lo.s64 	%rd387, %rd398, 53248, %rd401;
	mad.lo.s64 	%rd388, %rd399, 53248, %rd401;
	shl.b32 	%r855, %r4, 9;
	and.b32  	%r856, %r855, 1536;
	bfe.u32 	%r857, %r4, 2, 3;
	shr.u32 	%r858, %r4, 1;
	and.b32  	%r859, %r858, 48;
	selp.b32 	%r860, 0, 64, %p1;
	or.b32  	%r861, %r859, %r860;
	or.b32  	%r862, %r861, %r857;
	or.b32  	%r863, %r862, %r856;
	and.b32  	%r864, %r5, 1016;
	or.b32  	%r865, %r864, %r6;
	shr.u32 	%r866, %r856, 5;
	add.s32 	%r867, %r863, %r866;
	shl.b32 	%r868, %r867, 1;
	cvt.u64.u32 	%rd402, %r868;
	mov.u64 	%rd403, global_smem;
	add.s64 	%rd404, %rd403, %rd402;
	cvt.u32.u64 	%r796, %rd404;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b16 [ %r796 + 0 ], %rs33;
	// end inline asm
	or.b32  	%r869, %r863, 256;
	shr.u32 	%r870, %r869, 5;
	and.b32  	%r871, %r870, 56;
	cvt.u64.u32 	%rd405, %r863;
	cvt.u64.u32 	%rd406, %r871;
	add.s64 	%rd407, %rd406, %rd405;
	shl.b64 	%rd408, %rd407, 1;
	add.s64 	%rd409, %rd403, %rd408;
	cvt.u32.u64 	%r872, %rd409;
	add.s32 	%r805, %r872, 512;
	// begin inline asm
	@%p6 st.shared.b16 [ %r805 + 0 ], %rs34;
	// end inline asm
	cvt.u64.u32 	%rd410, %r866;
	add.s64 	%rd411, %rd410, %rd405;
	shl.b64 	%rd412, %rd411, 1;
	add.s64 	%rd413, %rd403, %rd412;
	cvt.u32.u64 	%r873, %rd413;
	add.s32 	%r806, %r873, 16;
	// begin inline asm
	@%p6 st.shared.b16 [ %r806 + 0 ], %rs35;
	// end inline asm
	add.s32 	%r807, %r872, 528;
	// begin inline asm
	@%p6 st.shared.b16 [ %r807 + 0 ], %rs36;
	// end inline asm
	add.s32 	%r808, %r873, 256;
	// begin inline asm
	@%p6 st.shared.b16 [ %r808 + 0 ], %rs37;
	// end inline asm
	add.s32 	%r809, %r872, 768;
	// begin inline asm
	@%p6 st.shared.b16 [ %r809 + 0 ], %rs38;
	// end inline asm
	add.s32 	%r810, %r873, 272;
	// begin inline asm
	@%p6 st.shared.b16 [ %r810 + 0 ], %rs39;
	// end inline asm
	add.s32 	%r811, %r872, 784;
	// begin inline asm
	@%p6 st.shared.b16 [ %r811 + 0 ], %rs40;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r874, %r865, 5;
	and.b32  	%r875, %r874, 56;
	add.s32 	%r876, %r875, %r865;
	mul.wide.u32 	%rd414, %r876, 2;
	add.s64 	%rd415, %rd403, %rd414;
	ld.shared.v4.u32 	{%r828, %r829, %r830, %r831}, [%rd415];
	bar.sync 	0;
	// begin inline asm
	@%p6 st.shared.b16 [ %r796 + 0 ], %rs41;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r805 + 0 ], %rs42;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r806 + 0 ], %rs43;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r807 + 0 ], %rs44;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r808 + 0 ], %rs45;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r809 + 0 ], %rs46;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r810 + 0 ], %rs47;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r811 + 0 ], %rs48;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r832, %r833, %r834, %r835}, [%rd415];
	bar.sync 	0;
	// begin inline asm
	@%p6 st.shared.b16 [ %r796 + 0 ], %rs49;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r805 + 0 ], %rs50;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r806 + 0 ], %rs51;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r807 + 0 ], %rs52;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r808 + 0 ], %rs53;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r809 + 0 ], %rs54;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r810 + 0 ], %rs55;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r811 + 0 ], %rs56;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r836, %r837, %r838, %r839}, [%rd415];
	bar.sync 	0;
	// begin inline asm
	@%p6 st.shared.b16 [ %r796 + 0 ], %rs57;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r805 + 0 ], %rs58;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r806 + 0 ], %rs59;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r807 + 0 ], %rs60;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r808 + 0 ], %rs61;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r809 + 0 ], %rs62;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r810 + 0 ], %rs63;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b16 [ %r811 + 0 ], %rs64;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r840, %r841, %r842, %r843}, [%rd415];
	// begin inline asm
	st.global.v4.b32 [ %rd385 + 0 ], { %r828, %r829, %r830, %r831 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd386 + 0 ], { %r832, %r833, %r834, %r835 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd387 + 0 ], { %r836, %r837, %r838, %r839 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd388 + 0 ], { %r840, %r841, %r842, %r843 };
	// end inline asm
	ret;

}
	// .globl	fusion_326
.visible .entry fusion_326(
	.param .u64 .ptr .align 16 fusion_326_param_0,
	.param .u64 .ptr .align 128 fusion_326_param_1,
	.param .u64 .ptr .align 128 fusion_326_param_2,
	.param .u64 .ptr .align 16 fusion_326_param_3,
	.param .u64 .ptr .align 128 fusion_326_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<65>;
	.reg .b32 	%r<125>;
	.reg .f32 	%f<146>;
	.reg .b64 	%rd<32>;

	ld.param.u64 	%rd10, [fusion_326_param_0];
	ld.param.u64 	%rd11, [fusion_326_param_4];
	cvta.to.global.u64 	%rd12, %rd11;
	ld.param.u64 	%rd13, [fusion_326_param_1];
	ld.param.u64 	%rd14, [fusion_326_param_3];
	cvta.to.global.u64 	%rd15, %rd14;
	ld.param.u64 	%rd16, [fusion_326_param_2];
	cvta.to.global.u64 	%rd17, %rd16;
	cvta.to.global.u64 	%rd18, %rd13;
	cvta.to.global.u64 	%rd5, %rd10;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd19, %r1, 53248;
	add.s64 	%rd20, %rd17, %rd19;
	mov.u32 	%r105, %tid.x;
	and.b32  	%r106, %r105, 31;
	shl.b32 	%r107, %r105, 3;
	and.b32  	%r108, %r107, 248;
	setp.lt.u32 	%p4, %r105, 32;
	selp.b32 	%r109, 0, 256, %p4;
	or.b32  	%r110, %r108, %r109;
	mul.wide.u32 	%rd21, %r110, 2;
	add.s64 	%rd22, %rd20, %rd21;
	add.s64 	%rd1, %rd22, 51200;
	add.s64 	%rd2, %rd22, 52224;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd23, %r1, 1024;
	shl.b64 	%rd24, %rd23, 1;
	add.s64 	%rd25, %rd18, %rd24;
	add.s64 	%rd3, %rd25, %rd21;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	add.rn.f32 	%f33, %f1, %f17;
	add.rn.f32 	%f34, %f2, %f18;
	add.rn.f32 	%f35, %f3, %f19;
	add.rn.f32 	%f36, %f4, %f20;
	add.rn.f32 	%f37, %f5, %f21;
	add.rn.f32 	%f38, %f6, %f22;
	add.rn.f32 	%f39, %f7, %f23;
	add.rn.f32 	%f40, %f8, %f24;
	add.rn.f32 	%f41, %f9, %f25;
	add.rn.f32 	%f42, %f10, %f26;
	add.rn.f32 	%f43, %f11, %f27;
	add.rn.f32 	%f44, %f12, %f28;
	add.rn.f32 	%f45, %f13, %f29;
	add.rn.f32 	%f46, %f14, %f30;
	add.rn.f32 	%f47, %f15, %f31;
	add.rn.f32 	%f48, %f16, %f32;
	mul.rn.f32 	%f49, %f33, %f33;
	mul.rn.f32 	%f50, %f34, %f34;
	mul.rn.f32 	%f51, %f35, %f35;
	mul.rn.f32 	%f52, %f36, %f36;
	mul.rn.f32 	%f53, %f37, %f37;
	mul.rn.f32 	%f54, %f38, %f38;
	mul.rn.f32 	%f55, %f39, %f39;
	mul.rn.f32 	%f56, %f40, %f40;
	mul.rn.f32 	%f57, %f41, %f41;
	mul.rn.f32 	%f58, %f42, %f42;
	mul.rn.f32 	%f59, %f43, %f43;
	mul.rn.f32 	%f60, %f44, %f44;
	mul.rn.f32 	%f61, %f45, %f45;
	mul.rn.f32 	%f62, %f46, %f46;
	mul.rn.f32 	%f63, %f47, %f47;
	mul.rn.f32 	%f64, %f48, %f48;
	add.rn.f32 	%f65, %f49, %f50;
	add.rn.f32 	%f66, %f65, %f51;
	add.rn.f32 	%f67, %f66, %f52;
	add.rn.f32 	%f68, %f67, %f53;
	add.rn.f32 	%f69, %f68, %f54;
	add.rn.f32 	%f70, %f69, %f55;
	add.rn.f32 	%f71, %f70, %f56;
	add.rn.f32 	%f72, %f71, %f57;
	add.rn.f32 	%f73, %f72, %f58;
	add.rn.f32 	%f74, %f73, %f59;
	add.rn.f32 	%f75, %f74, %f60;
	add.rn.f32 	%f76, %f75, %f61;
	add.rn.f32 	%f77, %f76, %f62;
	add.rn.f32 	%f78, %f77, %f63;
	add.rn.f32 	%f79, %f78, %f64;
	mov.b32 	%r111, %f79;
	shfl.sync.bfly.b32	%r112, %r111, 16, 31, -1;
	mov.b32 	%f80, %r112;
	add.rn.f32 	%f81, %f79, %f80;
	mov.b32 	%r113, %f81;
	shfl.sync.bfly.b32	%r114, %r113, 8, 31, -1;
	mov.b32 	%f82, %r114;
	add.rn.f32 	%f83, %f81, %f82;
	mov.b32 	%r115, %f83;
	shfl.sync.bfly.b32	%r116, %r115, 4, 31, -1;
	mov.b32 	%f84, %r116;
	add.rn.f32 	%f85, %f83, %f84;
	mov.b32 	%r117, %f85;
	shfl.sync.bfly.b32	%r118, %r117, 2, 31, -1;
	mov.b32 	%f86, %r118;
	add.rn.f32 	%f87, %f85, %f86;
	mov.b32 	%r119, %f87;
	shfl.sync.bfly.b32	%r120, %r119, 1, 31, -1;
	mov.b32 	%f88, %r120;
	add.rn.f32 	%f89, %f87, %f88;
	setp.eq.s32 	%p1, %r106, 0;
	shr.u32 	%r121, %r105, 3;
	and.b32  	%r122, %r121, 4;
	cvt.u64.u32 	%rd26, %r122;
	mov.u64 	%rd27, global_smem;
	add.s64 	%rd28, %rd27, %rd26;
	mov.b32 	%r51, %f89;
	cvt.u32.u64 	%r50, %rd28;
	// begin inline asm
	@%p1 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r105, 2;
	shl.b32 	%r123, %r105, 2;
	cvt.u64.u32 	%rd29, %r123;
	add.s64 	%rd30, %rd27, %rd29;
	cvt.u32.u64 	%r53, %rd30;
	// begin inline asm
	@%p2 ld.shared.b32 %r52, [ %r53 + 0 ];
	// end inline asm
	mov.b32 	%f90, %r52;
	shfl.sync.bfly.b32	%r124, %r52, 1, 31, -1;
	mov.b32 	%f91, %r124;
	add.rn.f32 	%f92, %f90, %f91;
	setp.eq.s32 	%p3, %r105, 0;
	mov.b32 	%r55, %f92;
	// begin inline asm
	@%p3 st.shared.b32 [ %r53 + 0 ], %r55;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f93, [global_smem];
	mul.rn.f32 	%f94, %f93, 0f3A800000;
	// begin inline asm
	mov.u32 %r56, 0x0;
	ld.global.b32 { %r56 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f95, %r56;
	add.rn.f32 	%f96, %f94, %f95;
	rsqrt.approx.f32 	%f97, %f96;
	mul.rn.f32 	%f98, %f33, %f97;
	mul.rn.f32 	%f99, %f34, %f97;
	mul.rn.f32 	%f100, %f35, %f97;
	mul.rn.f32 	%f101, %f36, %f97;
	mul.rn.f32 	%f102, %f37, %f97;
	mul.rn.f32 	%f103, %f38, %f97;
	mul.rn.f32 	%f104, %f39, %f97;
	mul.rn.f32 	%f105, %f40, %f97;
	mul.rn.f32 	%f106, %f41, %f97;
	mul.rn.f32 	%f107, %f42, %f97;
	mul.rn.f32 	%f108, %f43, %f97;
	mul.rn.f32 	%f109, %f44, %f97;
	mul.rn.f32 	%f110, %f45, %f97;
	mul.rn.f32 	%f111, %f46, %f97;
	mul.rn.f32 	%f112, %f47, %f97;
	mul.rn.f32 	%f113, %f48, %f97;
	add.s64 	%rd6, %rd15, %rd21;
	add.s64 	%rd7, %rd6, 1024;
	// begin inline asm
	mov.u32 %r57, 0x0;
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	ld.global.v4.b32 { %r57, %r58, %r59, %r60 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r57;
	mov.b32 	{%rs35, %rs36}, %r58;
	mov.b32 	{%rs37, %rs38}, %r59;
	mov.b32 	{%rs39, %rs40}, %r60;
	// begin inline asm
	mov.u32 %r61, 0x0;
	mov.u32 %r62, 0x0;
	mov.u32 %r63, 0x0;
	mov.u32 %r64, 0x0;
	ld.global.v4.b32 { %r61, %r62, %r63, %r64 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r61;
	mov.b32 	{%rs43, %rs44}, %r62;
	mov.b32 	{%rs45, %rs46}, %r63;
	mov.b32 	{%rs47, %rs48}, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs33;
	// end inline asm
	mov.b32 	%f114, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs34;
	// end inline asm
	mov.b32 	%f115, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs35;
	// end inline asm
	mov.b32 	%f116, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs36;
	// end inline asm
	mov.b32 	%f117, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs37;
	// end inline asm
	mov.b32 	%f118, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs38;
	// end inline asm
	mov.b32 	%f119, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs39;
	// end inline asm
	mov.b32 	%f120, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs40;
	// end inline asm
	mov.b32 	%f121, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs41;
	// end inline asm
	mov.b32 	%f122, %r73;
	// begin inline asm
	cvt.f32.bf16 %r74, %rs42;
	// end inline asm
	mov.b32 	%f123, %r74;
	// begin inline asm
	cvt.f32.bf16 %r75, %rs43;
	// end inline asm
	mov.b32 	%f124, %r75;
	// begin inline asm
	cvt.f32.bf16 %r76, %rs44;
	// end inline asm
	mov.b32 	%f125, %r76;
	// begin inline asm
	cvt.f32.bf16 %r77, %rs45;
	// end inline asm
	mov.b32 	%f126, %r77;
	// begin inline asm
	cvt.f32.bf16 %r78, %rs46;
	// end inline asm
	mov.b32 	%f127, %r78;
	// begin inline asm
	cvt.f32.bf16 %r79, %rs47;
	// end inline asm
	mov.b32 	%f128, %r79;
	// begin inline asm
	cvt.f32.bf16 %r80, %rs48;
	// end inline asm
	mov.b32 	%f129, %r80;
	mul.rn.f32 	%f130, %f98, %f114;
	mul.rn.f32 	%f131, %f99, %f115;
	mul.rn.f32 	%f132, %f100, %f116;
	mul.rn.f32 	%f133, %f101, %f117;
	mul.rn.f32 	%f134, %f102, %f118;
	mul.rn.f32 	%f135, %f103, %f119;
	mul.rn.f32 	%f136, %f104, %f120;
	mul.rn.f32 	%f137, %f105, %f121;
	mul.rn.f32 	%f138, %f106, %f122;
	mul.rn.f32 	%f139, %f107, %f123;
	mul.rn.f32 	%f140, %f108, %f124;
	mul.rn.f32 	%f141, %f109, %f125;
	mul.rn.f32 	%f142, %f110, %f126;
	mul.rn.f32 	%f143, %f111, %f127;
	mul.rn.f32 	%f144, %f112, %f128;
	mul.rn.f32 	%f145, %f113, %f129;
	mov.b32 	%r81, %f130;
	// begin inline asm
	cvt.rn.bf16.f32 %rs49, %r81;
	// end inline asm
	mov.b32 	%r82, %f131;
	// begin inline asm
	cvt.rn.bf16.f32 %rs50, %r82;
	// end inline asm
	mov.b32 	%r83, %f132;
	// begin inline asm
	cvt.rn.bf16.f32 %rs51, %r83;
	// end inline asm
	mov.b32 	%r84, %f133;
	// begin inline asm
	cvt.rn.bf16.f32 %rs52, %r84;
	// end inline asm
	mov.b32 	%r85, %f134;
	// begin inline asm
	cvt.rn.bf16.f32 %rs53, %r85;
	// end inline asm
	mov.b32 	%r86, %f135;
	// begin inline asm
	cvt.rn.bf16.f32 %rs54, %r86;
	// end inline asm
	mov.b32 	%r87, %f136;
	// begin inline asm
	cvt.rn.bf16.f32 %rs55, %r87;
	// end inline asm
	mov.b32 	%r88, %f137;
	// begin inline asm
	cvt.rn.bf16.f32 %rs56, %r88;
	// end inline asm
	mov.b32 	%r89, %f138;
	// begin inline asm
	cvt.rn.bf16.f32 %rs57, %r89;
	// end inline asm
	mov.b32 	%r90, %f139;
	// begin inline asm
	cvt.rn.bf16.f32 %rs58, %r90;
	// end inline asm
	mov.b32 	%r91, %f140;
	// begin inline asm
	cvt.rn.bf16.f32 %rs59, %r91;
	// end inline asm
	mov.b32 	%r92, %f141;
	// begin inline asm
	cvt.rn.bf16.f32 %rs60, %r92;
	// end inline asm
	mov.b32 	%r93, %f142;
	// begin inline asm
	cvt.rn.bf16.f32 %rs61, %r93;
	// end inline asm
	mov.b32 	%r94, %f143;
	// begin inline asm
	cvt.rn.bf16.f32 %rs62, %r94;
	// end inline asm
	mov.b32 	%r95, %f144;
	// begin inline asm
	cvt.rn.bf16.f32 %rs63, %r95;
	// end inline asm
	mov.b32 	%r96, %f145;
	// begin inline asm
	cvt.rn.bf16.f32 %rs64, %r96;
	// end inline asm
	add.s64 	%rd31, %rd12, %rd24;
	add.s64 	%rd8, %rd31, %rd21;
	add.s64 	%rd9, %rd8, 1024;
	mov.b32 	%r97, {%rs49, %rs50};
	mov.b32 	%r98, {%rs51, %rs52};
	mov.b32 	%r99, {%rs53, %rs54};
	mov.b32 	%r100, {%rs55, %rs56};
	// begin inline asm
	st.global.v4.b32 [ %rd8 + 0 ], { %r97, %r98, %r99, %r100 };
	// end inline asm
	mov.b32 	%r101, {%rs57, %rs58};
	mov.b32 	%r102, {%rs59, %rs60};
	mov.b32 	%r103, {%rs61, %rs62};
	mov.b32 	%r104, {%rs63, %rs64};
	// begin inline asm
	st.global.v4.b32 [ %rd9 + 0 ], { %r101, %r102, %r103, %r104 };
	// end inline asm
	ret;

}
	// .globl	loop_convert_fusion
.visible .entry loop_convert_fusion(
	.param .u64 .ptr .align 128 loop_convert_fusion_param_0,
	.param .u64 .ptr .align 128 loop_convert_fusion_param_1
)
.reqntid 128, 1, 1
{
	.reg .b16 	%rs<11>;
	.reg .b32 	%r<9>;
	.reg .f32 	%f<10>;
	.reg .b64 	%rd<9>;

	ld.param.u64 	%rd1, [loop_convert_fusion_param_0];
	ld.param.u64 	%rd2, [loop_convert_fusion_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	cvt.u16.u32 	%rs1, %r2;
	mul.hi.u16 	%rs2, %rs1, -21845;
	shr.u16 	%rs3, %rs2, 4;
	mul.lo.s16 	%rs4, %rs3, 24;
	sub.s16 	%rs5, %rs1, %rs4;
	shl.b16 	%rs6, %rs5, 7;
	cvt.u32.u16 	%r3, %rs6;
	or.b32  	%r4, %r1, %r3;
	mul.wide.u16 	%r5, %rs3, 6144;
	add.s32 	%r6, %r4, %r5;
	mul.wide.u32 	%rd5, %r6, 2;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.nc.u16 	%rs7, [%rd6];
	cvt.f32.bf16 	%f1, %rs7;
	mul.rn.f32 	%f2, %f1, 0fBFB8AA3B;
	ex2.approx.f32 	%f3, %f2;
	cvt.rn.bf16.f32 	%rs8, %f3;
	cvt.f32.bf16 	%f4, %rs8;
	add.rn.f32 	%f5, %f4, 0f3F800000;
	rcp.approx.f32 	%f6, %f5;
	ld.global.nc.u16 	%rs9, [%rd6+6144];
	mul.rn.f32 	%f7, %f6, %f1;
	cvt.f32.bf16 	%f8, %rs9;
	mul.rn.f32 	%f9, %f7, %f8;
	cvt.rn.bf16.f32 	%rs10, %f9;
	shl.b32 	%r7, %r2, 7;
	or.b32  	%r8, %r7, %r1;
	mul.wide.u32 	%rd7, %r8, 2;
	add.s64 	%rd8, %rd3, %rd7;
	st.global.b16 	[%rd8], %rs10;
	ret;

}
	// .globl	fusion_327
.visible .entry fusion_327(
	.param .u64 .ptr .align 16 fusion_327_param_0,
	.param .u64 .ptr .align 16 fusion_327_param_1,
	.param .u64 .ptr .align 128 fusion_327_param_2,
	.param .u64 .ptr .align 128 fusion_327_param_3,
	.param .u64 .ptr .align 128 fusion_327_param_4,
	.param .u64 .ptr .align 128 fusion_327_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<97>;
	.reg .b32 	%r<173>;
	.reg .f32 	%f<210>;
	.reg .b64 	%rd<39>;

	ld.param.u64 	%rd14, [fusion_327_param_0];
	ld.param.u64 	%rd15, [fusion_327_param_5];
	cvta.to.global.u64 	%rd16, %rd15;
	ld.param.u64 	%rd17, [fusion_327_param_1];
	ld.param.u64 	%rd18, [fusion_327_param_4];
	cvta.to.global.u64 	%rd19, %rd18;
	ld.param.u64 	%rd20, [fusion_327_param_2];
	ld.param.u64 	%rd21, [fusion_327_param_3];
	cvta.to.global.u64 	%rd22, %rd21;
	cvta.to.global.u64 	%rd23, %rd20;
	cvta.to.global.u64 	%rd24, %rd17;
	cvta.to.global.u64 	%rd9, %rd14;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd25, %r1, 53248;
	add.s64 	%rd26, %rd22, %rd25;
	mov.u32 	%r153, %tid.x;
	and.b32  	%r154, %r153, 31;
	shl.b32 	%r155, %r153, 3;
	and.b32  	%r156, %r155, 248;
	setp.lt.u32 	%p4, %r153, 32;
	selp.b32 	%r157, 0, 256, %p4;
	or.b32  	%r158, %r156, %r157;
	mul.wide.u32 	%rd27, %r158, 2;
	add.s64 	%rd28, %rd26, %rd27;
	add.s64 	%rd1, %rd28, 49152;
	add.s64 	%rd2, %rd28, 50176;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd29, %r1, 1024;
	shl.b64 	%rd30, %rd29, 1;
	add.s64 	%rd31, %rd19, %rd30;
	add.s64 	%rd3, %rd31, %rd27;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	add.s64 	%rd5, %rd28, 51200;
	add.s64 	%rd6, %rd28, 52224;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r50;
	mov.b32 	{%rs35, %rs36}, %r51;
	mov.b32 	{%rs37, %rs38}, %r52;
	mov.b32 	{%rs39, %rs40}, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r54;
	mov.b32 	{%rs43, %rs44}, %r55;
	mov.b32 	{%rs45, %rs46}, %r56;
	mov.b32 	{%rs47, %rs48}, %r57;
	// begin inline asm
	cvt.f32.bf16 %r58, %rs33;
	// end inline asm
	mov.b32 	%f33, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs34;
	// end inline asm
	mov.b32 	%f34, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs35;
	// end inline asm
	mov.b32 	%f35, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs36;
	// end inline asm
	mov.b32 	%f36, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs37;
	// end inline asm
	mov.b32 	%f37, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs38;
	// end inline asm
	mov.b32 	%f38, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs39;
	// end inline asm
	mov.b32 	%f39, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs40;
	// end inline asm
	mov.b32 	%f40, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs41;
	// end inline asm
	mov.b32 	%f41, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs42;
	// end inline asm
	mov.b32 	%f42, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs43;
	// end inline asm
	mov.b32 	%f43, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs44;
	// end inline asm
	mov.b32 	%f44, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs45;
	// end inline asm
	mov.b32 	%f45, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs46;
	// end inline asm
	mov.b32 	%f46, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs47;
	// end inline asm
	mov.b32 	%f47, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs48;
	// end inline asm
	mov.b32 	%f48, %r73;
	add.s64 	%rd32, %rd23, %rd30;
	add.s64 	%rd7, %rd32, %rd27;
	add.s64 	%rd8, %rd7, 1024;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	ld.global.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs49, %rs50}, %r74;
	mov.b32 	{%rs51, %rs52}, %r75;
	mov.b32 	{%rs53, %rs54}, %r76;
	mov.b32 	{%rs55, %rs56}, %r77;
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	ld.global.v4.b32 { %r78, %r79, %r80, %r81 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	{%rs57, %rs58}, %r78;
	mov.b32 	{%rs59, %rs60}, %r79;
	mov.b32 	{%rs61, %rs62}, %r80;
	mov.b32 	{%rs63, %rs64}, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs49;
	// end inline asm
	mov.b32 	%f49, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs50;
	// end inline asm
	mov.b32 	%f50, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs51;
	// end inline asm
	mov.b32 	%f51, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs52;
	// end inline asm
	mov.b32 	%f52, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs53;
	// end inline asm
	mov.b32 	%f53, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs54;
	// end inline asm
	mov.b32 	%f54, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs55;
	// end inline asm
	mov.b32 	%f55, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs56;
	// end inline asm
	mov.b32 	%f56, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs57;
	// end inline asm
	mov.b32 	%f57, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs58;
	// end inline asm
	mov.b32 	%f58, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs59;
	// end inline asm
	mov.b32 	%f59, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs60;
	// end inline asm
	mov.b32 	%f60, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs61;
	// end inline asm
	mov.b32 	%f61, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs62;
	// end inline asm
	mov.b32 	%f62, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs63;
	// end inline asm
	mov.b32 	%f63, %r96;
	// begin inline asm
	cvt.f32.bf16 %r97, %rs64;
	// end inline asm
	mov.b32 	%f64, %r97;
	add.rn.f32 	%f65, %f33, %f49;
	add.rn.f32 	%f66, %f34, %f50;
	add.rn.f32 	%f67, %f35, %f51;
	add.rn.f32 	%f68, %f36, %f52;
	add.rn.f32 	%f69, %f37, %f53;
	add.rn.f32 	%f70, %f38, %f54;
	add.rn.f32 	%f71, %f39, %f55;
	add.rn.f32 	%f72, %f40, %f56;
	add.rn.f32 	%f73, %f41, %f57;
	add.rn.f32 	%f74, %f42, %f58;
	add.rn.f32 	%f75, %f43, %f59;
	add.rn.f32 	%f76, %f44, %f60;
	add.rn.f32 	%f77, %f45, %f61;
	add.rn.f32 	%f78, %f46, %f62;
	add.rn.f32 	%f79, %f47, %f63;
	add.rn.f32 	%f80, %f48, %f64;
	add.rn.f32 	%f81, %f17, %f65;
	add.rn.f32 	%f82, %f18, %f66;
	add.rn.f32 	%f83, %f19, %f67;
	add.rn.f32 	%f84, %f20, %f68;
	add.rn.f32 	%f85, %f21, %f69;
	add.rn.f32 	%f86, %f22, %f70;
	add.rn.f32 	%f87, %f23, %f71;
	add.rn.f32 	%f88, %f24, %f72;
	add.rn.f32 	%f89, %f25, %f73;
	add.rn.f32 	%f90, %f26, %f74;
	add.rn.f32 	%f91, %f27, %f75;
	add.rn.f32 	%f92, %f28, %f76;
	add.rn.f32 	%f93, %f29, %f77;
	add.rn.f32 	%f94, %f30, %f78;
	add.rn.f32 	%f95, %f31, %f79;
	add.rn.f32 	%f96, %f32, %f80;
	add.rn.f32 	%f97, %f1, %f81;
	add.rn.f32 	%f98, %f2, %f82;
	add.rn.f32 	%f99, %f3, %f83;
	add.rn.f32 	%f100, %f4, %f84;
	add.rn.f32 	%f101, %f5, %f85;
	add.rn.f32 	%f102, %f6, %f86;
	add.rn.f32 	%f103, %f7, %f87;
	add.rn.f32 	%f104, %f8, %f88;
	add.rn.f32 	%f105, %f9, %f89;
	add.rn.f32 	%f106, %f10, %f90;
	add.rn.f32 	%f107, %f11, %f91;
	add.rn.f32 	%f108, %f12, %f92;
	add.rn.f32 	%f109, %f13, %f93;
	add.rn.f32 	%f110, %f14, %f94;
	add.rn.f32 	%f111, %f15, %f95;
	add.rn.f32 	%f112, %f16, %f96;
	mul.rn.f32 	%f113, %f97, %f97;
	mul.rn.f32 	%f114, %f98, %f98;
	mul.rn.f32 	%f115, %f99, %f99;
	mul.rn.f32 	%f116, %f100, %f100;
	mul.rn.f32 	%f117, %f101, %f101;
	mul.rn.f32 	%f118, %f102, %f102;
	mul.rn.f32 	%f119, %f103, %f103;
	mul.rn.f32 	%f120, %f104, %f104;
	mul.rn.f32 	%f121, %f105, %f105;
	mul.rn.f32 	%f122, %f106, %f106;
	mul.rn.f32 	%f123, %f107, %f107;
	mul.rn.f32 	%f124, %f108, %f108;
	mul.rn.f32 	%f125, %f109, %f109;
	mul.rn.f32 	%f126, %f110, %f110;
	mul.rn.f32 	%f127, %f111, %f111;
	mul.rn.f32 	%f128, %f112, %f112;
	add.rn.f32 	%f129, %f113, %f114;
	add.rn.f32 	%f130, %f129, %f115;
	add.rn.f32 	%f131, %f130, %f116;
	add.rn.f32 	%f132, %f131, %f117;
	add.rn.f32 	%f133, %f132, %f118;
	add.rn.f32 	%f134, %f133, %f119;
	add.rn.f32 	%f135, %f134, %f120;
	add.rn.f32 	%f136, %f135, %f121;
	add.rn.f32 	%f137, %f136, %f122;
	add.rn.f32 	%f138, %f137, %f123;
	add.rn.f32 	%f139, %f138, %f124;
	add.rn.f32 	%f140, %f139, %f125;
	add.rn.f32 	%f141, %f140, %f126;
	add.rn.f32 	%f142, %f141, %f127;
	add.rn.f32 	%f143, %f142, %f128;
	mov.b32 	%r159, %f143;
	shfl.sync.bfly.b32	%r160, %r159, 16, 31, -1;
	mov.b32 	%f144, %r160;
	add.rn.f32 	%f145, %f143, %f144;
	mov.b32 	%r161, %f145;
	shfl.sync.bfly.b32	%r162, %r161, 8, 31, -1;
	mov.b32 	%f146, %r162;
	add.rn.f32 	%f147, %f145, %f146;
	mov.b32 	%r163, %f147;
	shfl.sync.bfly.b32	%r164, %r163, 4, 31, -1;
	mov.b32 	%f148, %r164;
	add.rn.f32 	%f149, %f147, %f148;
	mov.b32 	%r165, %f149;
	shfl.sync.bfly.b32	%r166, %r165, 2, 31, -1;
	mov.b32 	%f150, %r166;
	add.rn.f32 	%f151, %f149, %f150;
	mov.b32 	%r167, %f151;
	shfl.sync.bfly.b32	%r168, %r167, 1, 31, -1;
	mov.b32 	%f152, %r168;
	add.rn.f32 	%f153, %f151, %f152;
	setp.eq.s32 	%p1, %r154, 0;
	shr.u32 	%r169, %r153, 3;
	and.b32  	%r170, %r169, 4;
	cvt.u64.u32 	%rd33, %r170;
	mov.u64 	%rd34, global_smem;
	add.s64 	%rd35, %rd34, %rd33;
	mov.b32 	%r99, %f153;
	cvt.u32.u64 	%r98, %rd35;
	// begin inline asm
	@%p1 st.shared.b32 [ %r98 + 0 ], %r99;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r153, 2;
	shl.b32 	%r171, %r153, 2;
	cvt.u64.u32 	%rd36, %r171;
	add.s64 	%rd37, %rd34, %rd36;
	cvt.u32.u64 	%r101, %rd37;
	// begin inline asm
	@%p2 ld.shared.b32 %r100, [ %r101 + 0 ];
	// end inline asm
	mov.b32 	%f154, %r100;
	shfl.sync.bfly.b32	%r172, %r100, 1, 31, -1;
	mov.b32 	%f155, %r172;
	add.rn.f32 	%f156, %f154, %f155;
	setp.eq.s32 	%p3, %r153, 0;
	mov.b32 	%r103, %f156;
	// begin inline asm
	@%p3 st.shared.b32 [ %r101 + 0 ], %r103;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f157, [global_smem];
	mul.rn.f32 	%f158, %f157, 0f3A800000;
	// begin inline asm
	mov.u32 %r104, 0x0;
	ld.global.b32 { %r104 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f159, %r104;
	add.rn.f32 	%f160, %f158, %f159;
	rsqrt.approx.f32 	%f161, %f160;
	mul.rn.f32 	%f162, %f97, %f161;
	mul.rn.f32 	%f163, %f98, %f161;
	mul.rn.f32 	%f164, %f99, %f161;
	mul.rn.f32 	%f165, %f100, %f161;
	mul.rn.f32 	%f166, %f101, %f161;
	mul.rn.f32 	%f167, %f102, %f161;
	mul.rn.f32 	%f168, %f103, %f161;
	mul.rn.f32 	%f169, %f104, %f161;
	mul.rn.f32 	%f170, %f105, %f161;
	mul.rn.f32 	%f171, %f106, %f161;
	mul.rn.f32 	%f172, %f107, %f161;
	mul.rn.f32 	%f173, %f108, %f161;
	mul.rn.f32 	%f174, %f109, %f161;
	mul.rn.f32 	%f175, %f110, %f161;
	mul.rn.f32 	%f176, %f111, %f161;
	mul.rn.f32 	%f177, %f112, %f161;
	add.s64 	%rd10, %rd24, %rd27;
	add.s64 	%rd11, %rd10, 1024;
	// begin inline asm
	mov.u32 %r105, 0x0;
	mov.u32 %r106, 0x0;
	mov.u32 %r107, 0x0;
	mov.u32 %r108, 0x0;
	ld.global.v4.b32 { %r105, %r106, %r107, %r108 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	{%rs65, %rs66}, %r105;
	mov.b32 	{%rs67, %rs68}, %r106;
	mov.b32 	{%rs69, %rs70}, %r107;
	mov.b32 	{%rs71, %rs72}, %r108;
	// begin inline asm
	mov.u32 %r109, 0x0;
	mov.u32 %r110, 0x0;
	mov.u32 %r111, 0x0;
	mov.u32 %r112, 0x0;
	ld.global.v4.b32 { %r109, %r110, %r111, %r112 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	{%rs73, %rs74}, %r109;
	mov.b32 	{%rs75, %rs76}, %r110;
	mov.b32 	{%rs77, %rs78}, %r111;
	mov.b32 	{%rs79, %rs80}, %r112;
	// begin inline asm
	cvt.f32.bf16 %r113, %rs65;
	// end inline asm
	mov.b32 	%f178, %r113;
	// begin inline asm
	cvt.f32.bf16 %r114, %rs66;
	// end inline asm
	mov.b32 	%f179, %r114;
	// begin inline asm
	cvt.f32.bf16 %r115, %rs67;
	// end inline asm
	mov.b32 	%f180, %r115;
	// begin inline asm
	cvt.f32.bf16 %r116, %rs68;
	// end inline asm
	mov.b32 	%f181, %r116;
	// begin inline asm
	cvt.f32.bf16 %r117, %rs69;
	// end inline asm
	mov.b32 	%f182, %r117;
	// begin inline asm
	cvt.f32.bf16 %r118, %rs70;
	// end inline asm
	mov.b32 	%f183, %r118;
	// begin inline asm
	cvt.f32.bf16 %r119, %rs71;
	// end inline asm
	mov.b32 	%f184, %r119;
	// begin inline asm
	cvt.f32.bf16 %r120, %rs72;
	// end inline asm
	mov.b32 	%f185, %r120;
	// begin inline asm
	cvt.f32.bf16 %r121, %rs73;
	// end inline asm
	mov.b32 	%f186, %r121;
	// begin inline asm
	cvt.f32.bf16 %r122, %rs74;
	// end inline asm
	mov.b32 	%f187, %r122;
	// begin inline asm
	cvt.f32.bf16 %r123, %rs75;
	// end inline asm
	mov.b32 	%f188, %r123;
	// begin inline asm
	cvt.f32.bf16 %r124, %rs76;
	// end inline asm
	mov.b32 	%f189, %r124;
	// begin inline asm
	cvt.f32.bf16 %r125, %rs77;
	// end inline asm
	mov.b32 	%f190, %r125;
	// begin inline asm
	cvt.f32.bf16 %r126, %rs78;
	// end inline asm
	mov.b32 	%f191, %r126;
	// begin inline asm
	cvt.f32.bf16 %r127, %rs79;
	// end inline asm
	mov.b32 	%f192, %r127;
	// begin inline asm
	cvt.f32.bf16 %r128, %rs80;
	// end inline asm
	mov.b32 	%f193, %r128;
	mul.rn.f32 	%f194, %f162, %f178;
	mul.rn.f32 	%f195, %f163, %f179;
	mul.rn.f32 	%f196, %f164, %f180;
	mul.rn.f32 	%f197, %f165, %f181;
	mul.rn.f32 	%f198, %f166, %f182;
	mul.rn.f32 	%f199, %f167, %f183;
	mul.rn.f32 	%f200, %f168, %f184;
	mul.rn.f32 	%f201, %f169, %f185;
	mul.rn.f32 	%f202, %f170, %f186;
	mul.rn.f32 	%f203, %f171, %f187;
	mul.rn.f32 	%f204, %f172, %f188;
	mul.rn.f32 	%f205, %f173, %f189;
	mul.rn.f32 	%f206, %f174, %f190;
	mul.rn.f32 	%f207, %f175, %f191;
	mul.rn.f32 	%f208, %f176, %f192;
	mul.rn.f32 	%f209, %f177, %f193;
	mov.b32 	%r129, %f194;
	// begin inline asm
	cvt.rn.bf16.f32 %rs81, %r129;
	// end inline asm
	mov.b32 	%r130, %f195;
	// begin inline asm
	cvt.rn.bf16.f32 %rs82, %r130;
	// end inline asm
	mov.b32 	%r131, %f196;
	// begin inline asm
	cvt.rn.bf16.f32 %rs83, %r131;
	// end inline asm
	mov.b32 	%r132, %f197;
	// begin inline asm
	cvt.rn.bf16.f32 %rs84, %r132;
	// end inline asm
	mov.b32 	%r133, %f198;
	// begin inline asm
	cvt.rn.bf16.f32 %rs85, %r133;
	// end inline asm
	mov.b32 	%r134, %f199;
	// begin inline asm
	cvt.rn.bf16.f32 %rs86, %r134;
	// end inline asm
	mov.b32 	%r135, %f200;
	// begin inline asm
	cvt.rn.bf16.f32 %rs87, %r135;
	// end inline asm
	mov.b32 	%r136, %f201;
	// begin inline asm
	cvt.rn.bf16.f32 %rs88, %r136;
	// end inline asm
	mov.b32 	%r137, %f202;
	// begin inline asm
	cvt.rn.bf16.f32 %rs89, %r137;
	// end inline asm
	mov.b32 	%r138, %f203;
	// begin inline asm
	cvt.rn.bf16.f32 %rs90, %r138;
	// end inline asm
	mov.b32 	%r139, %f204;
	// begin inline asm
	cvt.rn.bf16.f32 %rs91, %r139;
	// end inline asm
	mov.b32 	%r140, %f205;
	// begin inline asm
	cvt.rn.bf16.f32 %rs92, %r140;
	// end inline asm
	mov.b32 	%r141, %f206;
	// begin inline asm
	cvt.rn.bf16.f32 %rs93, %r141;
	// end inline asm
	mov.b32 	%r142, %f207;
	// begin inline asm
	cvt.rn.bf16.f32 %rs94, %r142;
	// end inline asm
	mov.b32 	%r143, %f208;
	// begin inline asm
	cvt.rn.bf16.f32 %rs95, %r143;
	// end inline asm
	mov.b32 	%r144, %f209;
	// begin inline asm
	cvt.rn.bf16.f32 %rs96, %r144;
	// end inline asm
	add.s64 	%rd38, %rd16, %rd30;
	add.s64 	%rd12, %rd38, %rd27;
	add.s64 	%rd13, %rd12, 1024;
	mov.b32 	%r145, {%rs81, %rs82};
	mov.b32 	%r146, {%rs83, %rs84};
	mov.b32 	%r147, {%rs85, %rs86};
	mov.b32 	%r148, {%rs87, %rs88};
	// begin inline asm
	st.global.v4.b32 [ %rd12 + 0 ], { %r145, %r146, %r147, %r148 };
	// end inline asm
	mov.b32 	%r149, {%rs89, %rs90};
	mov.b32 	%r150, {%rs91, %rs92};
	mov.b32 	%r151, {%rs93, %rs94};
	mov.b32 	%r152, {%rs95, %rs96};
	// begin inline asm
	st.global.v4.b32 [ %rd13 + 0 ], { %r149, %r150, %r151, %r152 };
	// end inline asm
	ret;

}
	// .globl	fusion_328
.visible .entry fusion_328(
	.param .u64 .ptr .align 16 fusion_328_param_0,
	.param .u64 .ptr .align 16 fusion_328_param_1,
	.param .u64 .ptr .align 128 fusion_328_param_2,
	.param .u64 .ptr .align 128 fusion_328_param_3,
	.param .u64 .ptr .align 128 fusion_328_param_4,
	.param .u64 .ptr .align 128 fusion_328_param_5,
	.param .u64 .ptr .align 128 fusion_328_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<129>;
	.reg .b32 	%r<221>;
	.reg .f32 	%f<274>;
	.reg .b64 	%rd<46>;

	ld.param.u64 	%rd18, [fusion_328_param_0];
	ld.param.u64 	%rd19, [fusion_328_param_6];
	cvta.to.global.u64 	%rd20, %rd19;
	ld.param.u64 	%rd21, [fusion_328_param_1];
	ld.param.u64 	%rd22, [fusion_328_param_5];
	cvta.to.global.u64 	%rd23, %rd22;
	ld.param.u64 	%rd24, [fusion_328_param_2];
	ld.param.u64 	%rd25, [fusion_328_param_4];
	cvta.to.global.u64 	%rd26, %rd25;
	ld.param.u64 	%rd27, [fusion_328_param_3];
	cvta.to.global.u64 	%rd28, %rd27;
	cvta.to.global.u64 	%rd29, %rd24;
	cvta.to.global.u64 	%rd30, %rd21;
	cvta.to.global.u64 	%rd13, %rd18;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd31, %r1, 53248;
	add.s64 	%rd32, %rd28, %rd31;
	mov.u32 	%r201, %tid.x;
	and.b32  	%r202, %r201, 31;
	shl.b32 	%r203, %r201, 3;
	and.b32  	%r204, %r203, 248;
	setp.lt.u32 	%p4, %r201, 32;
	selp.b32 	%r205, 0, 256, %p4;
	or.b32  	%r206, %r204, %r205;
	mul.wide.u32 	%rd33, %r206, 2;
	add.s64 	%rd34, %rd32, %rd33;
	add.s64 	%rd1, %rd34, 47104;
	add.s64 	%rd2, %rd34, 48128;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd35, %r1, 1024;
	shl.b64 	%rd36, %rd35, 1;
	add.s64 	%rd37, %rd29, %rd36;
	add.s64 	%rd3, %rd37, %rd33;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	add.s64 	%rd5, %rd34, 49152;
	add.s64 	%rd6, %rd34, 50176;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r50;
	mov.b32 	{%rs35, %rs36}, %r51;
	mov.b32 	{%rs37, %rs38}, %r52;
	mov.b32 	{%rs39, %rs40}, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r54;
	mov.b32 	{%rs43, %rs44}, %r55;
	mov.b32 	{%rs45, %rs46}, %r56;
	mov.b32 	{%rs47, %rs48}, %r57;
	// begin inline asm
	cvt.f32.bf16 %r58, %rs33;
	// end inline asm
	mov.b32 	%f33, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs34;
	// end inline asm
	mov.b32 	%f34, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs35;
	// end inline asm
	mov.b32 	%f35, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs36;
	// end inline asm
	mov.b32 	%f36, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs37;
	// end inline asm
	mov.b32 	%f37, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs38;
	// end inline asm
	mov.b32 	%f38, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs39;
	// end inline asm
	mov.b32 	%f39, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs40;
	// end inline asm
	mov.b32 	%f40, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs41;
	// end inline asm
	mov.b32 	%f41, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs42;
	// end inline asm
	mov.b32 	%f42, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs43;
	// end inline asm
	mov.b32 	%f43, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs44;
	// end inline asm
	mov.b32 	%f44, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs45;
	// end inline asm
	mov.b32 	%f45, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs46;
	// end inline asm
	mov.b32 	%f46, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs47;
	// end inline asm
	mov.b32 	%f47, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs48;
	// end inline asm
	mov.b32 	%f48, %r73;
	add.s64 	%rd38, %rd23, %rd36;
	add.s64 	%rd7, %rd38, %rd33;
	add.s64 	%rd8, %rd7, 1024;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	ld.global.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs49, %rs50}, %r74;
	mov.b32 	{%rs51, %rs52}, %r75;
	mov.b32 	{%rs53, %rs54}, %r76;
	mov.b32 	{%rs55, %rs56}, %r77;
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	ld.global.v4.b32 { %r78, %r79, %r80, %r81 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	{%rs57, %rs58}, %r78;
	mov.b32 	{%rs59, %rs60}, %r79;
	mov.b32 	{%rs61, %rs62}, %r80;
	mov.b32 	{%rs63, %rs64}, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs49;
	// end inline asm
	mov.b32 	%f49, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs50;
	// end inline asm
	mov.b32 	%f50, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs51;
	// end inline asm
	mov.b32 	%f51, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs52;
	// end inline asm
	mov.b32 	%f52, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs53;
	// end inline asm
	mov.b32 	%f53, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs54;
	// end inline asm
	mov.b32 	%f54, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs55;
	// end inline asm
	mov.b32 	%f55, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs56;
	// end inline asm
	mov.b32 	%f56, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs57;
	// end inline asm
	mov.b32 	%f57, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs58;
	// end inline asm
	mov.b32 	%f58, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs59;
	// end inline asm
	mov.b32 	%f59, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs60;
	// end inline asm
	mov.b32 	%f60, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs61;
	// end inline asm
	mov.b32 	%f61, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs62;
	// end inline asm
	mov.b32 	%f62, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs63;
	// end inline asm
	mov.b32 	%f63, %r96;
	// begin inline asm
	cvt.f32.bf16 %r97, %rs64;
	// end inline asm
	mov.b32 	%f64, %r97;
	add.s64 	%rd9, %rd34, 51200;
	add.s64 	%rd10, %rd34, 52224;
	// begin inline asm
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	ld.global.v4.b32 { %r98, %r99, %r100, %r101 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	{%rs65, %rs66}, %r98;
	mov.b32 	{%rs67, %rs68}, %r99;
	mov.b32 	{%rs69, %rs70}, %r100;
	mov.b32 	{%rs71, %rs72}, %r101;
	// begin inline asm
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	ld.global.v4.b32 { %r102, %r103, %r104, %r105 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	{%rs73, %rs74}, %r102;
	mov.b32 	{%rs75, %rs76}, %r103;
	mov.b32 	{%rs77, %rs78}, %r104;
	mov.b32 	{%rs79, %rs80}, %r105;
	// begin inline asm
	cvt.f32.bf16 %r106, %rs65;
	// end inline asm
	mov.b32 	%f65, %r106;
	// begin inline asm
	cvt.f32.bf16 %r107, %rs66;
	// end inline asm
	mov.b32 	%f66, %r107;
	// begin inline asm
	cvt.f32.bf16 %r108, %rs67;
	// end inline asm
	mov.b32 	%f67, %r108;
	// begin inline asm
	cvt.f32.bf16 %r109, %rs68;
	// end inline asm
	mov.b32 	%f68, %r109;
	// begin inline asm
	cvt.f32.bf16 %r110, %rs69;
	// end inline asm
	mov.b32 	%f69, %r110;
	// begin inline asm
	cvt.f32.bf16 %r111, %rs70;
	// end inline asm
	mov.b32 	%f70, %r111;
	// begin inline asm
	cvt.f32.bf16 %r112, %rs71;
	// end inline asm
	mov.b32 	%f71, %r112;
	// begin inline asm
	cvt.f32.bf16 %r113, %rs72;
	// end inline asm
	mov.b32 	%f72, %r113;
	// begin inline asm
	cvt.f32.bf16 %r114, %rs73;
	// end inline asm
	mov.b32 	%f73, %r114;
	// begin inline asm
	cvt.f32.bf16 %r115, %rs74;
	// end inline asm
	mov.b32 	%f74, %r115;
	// begin inline asm
	cvt.f32.bf16 %r116, %rs75;
	// end inline asm
	mov.b32 	%f75, %r116;
	// begin inline asm
	cvt.f32.bf16 %r117, %rs76;
	// end inline asm
	mov.b32 	%f76, %r117;
	// begin inline asm
	cvt.f32.bf16 %r118, %rs77;
	// end inline asm
	mov.b32 	%f77, %r118;
	// begin inline asm
	cvt.f32.bf16 %r119, %rs78;
	// end inline asm
	mov.b32 	%f78, %r119;
	// begin inline asm
	cvt.f32.bf16 %r120, %rs79;
	// end inline asm
	mov.b32 	%f79, %r120;
	// begin inline asm
	cvt.f32.bf16 %r121, %rs80;
	// end inline asm
	mov.b32 	%f80, %r121;
	add.s64 	%rd39, %rd26, %rd36;
	add.s64 	%rd11, %rd39, %rd33;
	add.s64 	%rd12, %rd11, 1024;
	// begin inline asm
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	mov.u32 %r125, 0x0;
	ld.global.v4.b32 { %r122, %r123, %r124, %r125 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	{%rs81, %rs82}, %r122;
	mov.b32 	{%rs83, %rs84}, %r123;
	mov.b32 	{%rs85, %rs86}, %r124;
	mov.b32 	{%rs87, %rs88}, %r125;
	// begin inline asm
	mov.u32 %r126, 0x0;
	mov.u32 %r127, 0x0;
	mov.u32 %r128, 0x0;
	mov.u32 %r129, 0x0;
	ld.global.v4.b32 { %r126, %r127, %r128, %r129 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	{%rs89, %rs90}, %r126;
	mov.b32 	{%rs91, %rs92}, %r127;
	mov.b32 	{%rs93, %rs94}, %r128;
	mov.b32 	{%rs95, %rs96}, %r129;
	// begin inline asm
	cvt.f32.bf16 %r130, %rs81;
	// end inline asm
	mov.b32 	%f81, %r130;
	// begin inline asm
	cvt.f32.bf16 %r131, %rs82;
	// end inline asm
	mov.b32 	%f82, %r131;
	// begin inline asm
	cvt.f32.bf16 %r132, %rs83;
	// end inline asm
	mov.b32 	%f83, %r132;
	// begin inline asm
	cvt.f32.bf16 %r133, %rs84;
	// end inline asm
	mov.b32 	%f84, %r133;
	// begin inline asm
	cvt.f32.bf16 %r134, %rs85;
	// end inline asm
	mov.b32 	%f85, %r134;
	// begin inline asm
	cvt.f32.bf16 %r135, %rs86;
	// end inline asm
	mov.b32 	%f86, %r135;
	// begin inline asm
	cvt.f32.bf16 %r136, %rs87;
	// end inline asm
	mov.b32 	%f87, %r136;
	// begin inline asm
	cvt.f32.bf16 %r137, %rs88;
	// end inline asm
	mov.b32 	%f88, %r137;
	// begin inline asm
	cvt.f32.bf16 %r138, %rs89;
	// end inline asm
	mov.b32 	%f89, %r138;
	// begin inline asm
	cvt.f32.bf16 %r139, %rs90;
	// end inline asm
	mov.b32 	%f90, %r139;
	// begin inline asm
	cvt.f32.bf16 %r140, %rs91;
	// end inline asm
	mov.b32 	%f91, %r140;
	// begin inline asm
	cvt.f32.bf16 %r141, %rs92;
	// end inline asm
	mov.b32 	%f92, %r141;
	// begin inline asm
	cvt.f32.bf16 %r142, %rs93;
	// end inline asm
	mov.b32 	%f93, %r142;
	// begin inline asm
	cvt.f32.bf16 %r143, %rs94;
	// end inline asm
	mov.b32 	%f94, %r143;
	// begin inline asm
	cvt.f32.bf16 %r144, %rs95;
	// end inline asm
	mov.b32 	%f95, %r144;
	// begin inline asm
	cvt.f32.bf16 %r145, %rs96;
	// end inline asm
	mov.b32 	%f96, %r145;
	add.rn.f32 	%f97, %f65, %f81;
	add.rn.f32 	%f98, %f66, %f82;
	add.rn.f32 	%f99, %f67, %f83;
	add.rn.f32 	%f100, %f68, %f84;
	add.rn.f32 	%f101, %f69, %f85;
	add.rn.f32 	%f102, %f70, %f86;
	add.rn.f32 	%f103, %f71, %f87;
	add.rn.f32 	%f104, %f72, %f88;
	add.rn.f32 	%f105, %f73, %f89;
	add.rn.f32 	%f106, %f74, %f90;
	add.rn.f32 	%f107, %f75, %f91;
	add.rn.f32 	%f108, %f76, %f92;
	add.rn.f32 	%f109, %f77, %f93;
	add.rn.f32 	%f110, %f78, %f94;
	add.rn.f32 	%f111, %f79, %f95;
	add.rn.f32 	%f112, %f80, %f96;
	add.rn.f32 	%f113, %f49, %f97;
	add.rn.f32 	%f114, %f50, %f98;
	add.rn.f32 	%f115, %f51, %f99;
	add.rn.f32 	%f116, %f52, %f100;
	add.rn.f32 	%f117, %f53, %f101;
	add.rn.f32 	%f118, %f54, %f102;
	add.rn.f32 	%f119, %f55, %f103;
	add.rn.f32 	%f120, %f56, %f104;
	add.rn.f32 	%f121, %f57, %f105;
	add.rn.f32 	%f122, %f58, %f106;
	add.rn.f32 	%f123, %f59, %f107;
	add.rn.f32 	%f124, %f60, %f108;
	add.rn.f32 	%f125, %f61, %f109;
	add.rn.f32 	%f126, %f62, %f110;
	add.rn.f32 	%f127, %f63, %f111;
	add.rn.f32 	%f128, %f64, %f112;
	add.rn.f32 	%f129, %f33, %f113;
	add.rn.f32 	%f130, %f34, %f114;
	add.rn.f32 	%f131, %f35, %f115;
	add.rn.f32 	%f132, %f36, %f116;
	add.rn.f32 	%f133, %f37, %f117;
	add.rn.f32 	%f134, %f38, %f118;
	add.rn.f32 	%f135, %f39, %f119;
	add.rn.f32 	%f136, %f40, %f120;
	add.rn.f32 	%f137, %f41, %f121;
	add.rn.f32 	%f138, %f42, %f122;
	add.rn.f32 	%f139, %f43, %f123;
	add.rn.f32 	%f140, %f44, %f124;
	add.rn.f32 	%f141, %f45, %f125;
	add.rn.f32 	%f142, %f46, %f126;
	add.rn.f32 	%f143, %f47, %f127;
	add.rn.f32 	%f144, %f48, %f128;
	add.rn.f32 	%f145, %f17, %f129;
	add.rn.f32 	%f146, %f18, %f130;
	add.rn.f32 	%f147, %f19, %f131;
	add.rn.f32 	%f148, %f20, %f132;
	add.rn.f32 	%f149, %f21, %f133;
	add.rn.f32 	%f150, %f22, %f134;
	add.rn.f32 	%f151, %f23, %f135;
	add.rn.f32 	%f152, %f24, %f136;
	add.rn.f32 	%f153, %f25, %f137;
	add.rn.f32 	%f154, %f26, %f138;
	add.rn.f32 	%f155, %f27, %f139;
	add.rn.f32 	%f156, %f28, %f140;
	add.rn.f32 	%f157, %f29, %f141;
	add.rn.f32 	%f158, %f30, %f142;
	add.rn.f32 	%f159, %f31, %f143;
	add.rn.f32 	%f160, %f32, %f144;
	add.rn.f32 	%f161, %f1, %f145;
	add.rn.f32 	%f162, %f2, %f146;
	add.rn.f32 	%f163, %f3, %f147;
	add.rn.f32 	%f164, %f4, %f148;
	add.rn.f32 	%f165, %f5, %f149;
	add.rn.f32 	%f166, %f6, %f150;
	add.rn.f32 	%f167, %f7, %f151;
	add.rn.f32 	%f168, %f8, %f152;
	add.rn.f32 	%f169, %f9, %f153;
	add.rn.f32 	%f170, %f10, %f154;
	add.rn.f32 	%f171, %f11, %f155;
	add.rn.f32 	%f172, %f12, %f156;
	add.rn.f32 	%f173, %f13, %f157;
	add.rn.f32 	%f174, %f14, %f158;
	add.rn.f32 	%f175, %f15, %f159;
	add.rn.f32 	%f176, %f16, %f160;
	mul.rn.f32 	%f177, %f161, %f161;
	mul.rn.f32 	%f178, %f162, %f162;
	mul.rn.f32 	%f179, %f163, %f163;
	mul.rn.f32 	%f180, %f164, %f164;
	mul.rn.f32 	%f181, %f165, %f165;
	mul.rn.f32 	%f182, %f166, %f166;
	mul.rn.f32 	%f183, %f167, %f167;
	mul.rn.f32 	%f184, %f168, %f168;
	mul.rn.f32 	%f185, %f169, %f169;
	mul.rn.f32 	%f186, %f170, %f170;
	mul.rn.f32 	%f187, %f171, %f171;
	mul.rn.f32 	%f188, %f172, %f172;
	mul.rn.f32 	%f189, %f173, %f173;
	mul.rn.f32 	%f190, %f174, %f174;
	mul.rn.f32 	%f191, %f175, %f175;
	mul.rn.f32 	%f192, %f176, %f176;
	add.rn.f32 	%f193, %f177, %f178;
	add.rn.f32 	%f194, %f193, %f179;
	add.rn.f32 	%f195, %f194, %f180;
	add.rn.f32 	%f196, %f195, %f181;
	add.rn.f32 	%f197, %f196, %f182;
	add.rn.f32 	%f198, %f197, %f183;
	add.rn.f32 	%f199, %f198, %f184;
	add.rn.f32 	%f200, %f199, %f185;
	add.rn.f32 	%f201, %f200, %f186;
	add.rn.f32 	%f202, %f201, %f187;
	add.rn.f32 	%f203, %f202, %f188;
	add.rn.f32 	%f204, %f203, %f189;
	add.rn.f32 	%f205, %f204, %f190;
	add.rn.f32 	%f206, %f205, %f191;
	add.rn.f32 	%f207, %f206, %f192;
	mov.b32 	%r207, %f207;
	shfl.sync.bfly.b32	%r208, %r207, 16, 31, -1;
	mov.b32 	%f208, %r208;
	add.rn.f32 	%f209, %f207, %f208;
	mov.b32 	%r209, %f209;
	shfl.sync.bfly.b32	%r210, %r209, 8, 31, -1;
	mov.b32 	%f210, %r210;
	add.rn.f32 	%f211, %f209, %f210;
	mov.b32 	%r211, %f211;
	shfl.sync.bfly.b32	%r212, %r211, 4, 31, -1;
	mov.b32 	%f212, %r212;
	add.rn.f32 	%f213, %f211, %f212;
	mov.b32 	%r213, %f213;
	shfl.sync.bfly.b32	%r214, %r213, 2, 31, -1;
	mov.b32 	%f214, %r214;
	add.rn.f32 	%f215, %f213, %f214;
	mov.b32 	%r215, %f215;
	shfl.sync.bfly.b32	%r216, %r215, 1, 31, -1;
	mov.b32 	%f216, %r216;
	add.rn.f32 	%f217, %f215, %f216;
	setp.eq.s32 	%p1, %r202, 0;
	shr.u32 	%r217, %r201, 3;
	and.b32  	%r218, %r217, 4;
	cvt.u64.u32 	%rd40, %r218;
	mov.u64 	%rd41, global_smem;
	add.s64 	%rd42, %rd41, %rd40;
	mov.b32 	%r147, %f217;
	cvt.u32.u64 	%r146, %rd42;
	// begin inline asm
	@%p1 st.shared.b32 [ %r146 + 0 ], %r147;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r201, 2;
	shl.b32 	%r219, %r201, 2;
	cvt.u64.u32 	%rd43, %r219;
	add.s64 	%rd44, %rd41, %rd43;
	cvt.u32.u64 	%r149, %rd44;
	// begin inline asm
	@%p2 ld.shared.b32 %r148, [ %r149 + 0 ];
	// end inline asm
	mov.b32 	%f218, %r148;
	shfl.sync.bfly.b32	%r220, %r148, 1, 31, -1;
	mov.b32 	%f219, %r220;
	add.rn.f32 	%f220, %f218, %f219;
	setp.eq.s32 	%p3, %r201, 0;
	mov.b32 	%r151, %f220;
	// begin inline asm
	@%p3 st.shared.b32 [ %r149 + 0 ], %r151;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f221, [global_smem];
	mul.rn.f32 	%f222, %f221, 0f3A800000;
	// begin inline asm
	mov.u32 %r152, 0x0;
	ld.global.b32 { %r152 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f223, %r152;
	add.rn.f32 	%f224, %f222, %f223;
	rsqrt.approx.f32 	%f225, %f224;
	mul.rn.f32 	%f226, %f161, %f225;
	mul.rn.f32 	%f227, %f162, %f225;
	mul.rn.f32 	%f228, %f163, %f225;
	mul.rn.f32 	%f229, %f164, %f225;
	mul.rn.f32 	%f230, %f165, %f225;
	mul.rn.f32 	%f231, %f166, %f225;
	mul.rn.f32 	%f232, %f167, %f225;
	mul.rn.f32 	%f233, %f168, %f225;
	mul.rn.f32 	%f234, %f169, %f225;
	mul.rn.f32 	%f235, %f170, %f225;
	mul.rn.f32 	%f236, %f171, %f225;
	mul.rn.f32 	%f237, %f172, %f225;
	mul.rn.f32 	%f238, %f173, %f225;
	mul.rn.f32 	%f239, %f174, %f225;
	mul.rn.f32 	%f240, %f175, %f225;
	mul.rn.f32 	%f241, %f176, %f225;
	add.s64 	%rd14, %rd30, %rd33;
	add.s64 	%rd15, %rd14, 1024;
	// begin inline asm
	mov.u32 %r153, 0x0;
	mov.u32 %r154, 0x0;
	mov.u32 %r155, 0x0;
	mov.u32 %r156, 0x0;
	ld.global.v4.b32 { %r153, %r154, %r155, %r156 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	{%rs97, %rs98}, %r153;
	mov.b32 	{%rs99, %rs100}, %r154;
	mov.b32 	{%rs101, %rs102}, %r155;
	mov.b32 	{%rs103, %rs104}, %r156;
	// begin inline asm
	mov.u32 %r157, 0x0;
	mov.u32 %r158, 0x0;
	mov.u32 %r159, 0x0;
	mov.u32 %r160, 0x0;
	ld.global.v4.b32 { %r157, %r158, %r159, %r160 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	{%rs105, %rs106}, %r157;
	mov.b32 	{%rs107, %rs108}, %r158;
	mov.b32 	{%rs109, %rs110}, %r159;
	mov.b32 	{%rs111, %rs112}, %r160;
	// begin inline asm
	cvt.f32.bf16 %r161, %rs97;
	// end inline asm
	mov.b32 	%f242, %r161;
	// begin inline asm
	cvt.f32.bf16 %r162, %rs98;
	// end inline asm
	mov.b32 	%f243, %r162;
	// begin inline asm
	cvt.f32.bf16 %r163, %rs99;
	// end inline asm
	mov.b32 	%f244, %r163;
	// begin inline asm
	cvt.f32.bf16 %r164, %rs100;
	// end inline asm
	mov.b32 	%f245, %r164;
	// begin inline asm
	cvt.f32.bf16 %r165, %rs101;
	// end inline asm
	mov.b32 	%f246, %r165;
	// begin inline asm
	cvt.f32.bf16 %r166, %rs102;
	// end inline asm
	mov.b32 	%f247, %r166;
	// begin inline asm
	cvt.f32.bf16 %r167, %rs103;
	// end inline asm
	mov.b32 	%f248, %r167;
	// begin inline asm
	cvt.f32.bf16 %r168, %rs104;
	// end inline asm
	mov.b32 	%f249, %r168;
	// begin inline asm
	cvt.f32.bf16 %r169, %rs105;
	// end inline asm
	mov.b32 	%f250, %r169;
	// begin inline asm
	cvt.f32.bf16 %r170, %rs106;
	// end inline asm
	mov.b32 	%f251, %r170;
	// begin inline asm
	cvt.f32.bf16 %r171, %rs107;
	// end inline asm
	mov.b32 	%f252, %r171;
	// begin inline asm
	cvt.f32.bf16 %r172, %rs108;
	// end inline asm
	mov.b32 	%f253, %r172;
	// begin inline asm
	cvt.f32.bf16 %r173, %rs109;
	// end inline asm
	mov.b32 	%f254, %r173;
	// begin inline asm
	cvt.f32.bf16 %r174, %rs110;
	// end inline asm
	mov.b32 	%f255, %r174;
	// begin inline asm
	cvt.f32.bf16 %r175, %rs111;
	// end inline asm
	mov.b32 	%f256, %r175;
	// begin inline asm
	cvt.f32.bf16 %r176, %rs112;
	// end inline asm
	mov.b32 	%f257, %r176;
	mul.rn.f32 	%f258, %f226, %f242;
	mul.rn.f32 	%f259, %f227, %f243;
	mul.rn.f32 	%f260, %f228, %f244;
	mul.rn.f32 	%f261, %f229, %f245;
	mul.rn.f32 	%f262, %f230, %f246;
	mul.rn.f32 	%f263, %f231, %f247;
	mul.rn.f32 	%f264, %f232, %f248;
	mul.rn.f32 	%f265, %f233, %f249;
	mul.rn.f32 	%f266, %f234, %f250;
	mul.rn.f32 	%f267, %f235, %f251;
	mul.rn.f32 	%f268, %f236, %f252;
	mul.rn.f32 	%f269, %f237, %f253;
	mul.rn.f32 	%f270, %f238, %f254;
	mul.rn.f32 	%f271, %f239, %f255;
	mul.rn.f32 	%f272, %f240, %f256;
	mul.rn.f32 	%f273, %f241, %f257;
	mov.b32 	%r177, %f258;
	// begin inline asm
	cvt.rn.bf16.f32 %rs113, %r177;
	// end inline asm
	mov.b32 	%r178, %f259;
	// begin inline asm
	cvt.rn.bf16.f32 %rs114, %r178;
	// end inline asm
	mov.b32 	%r179, %f260;
	// begin inline asm
	cvt.rn.bf16.f32 %rs115, %r179;
	// end inline asm
	mov.b32 	%r180, %f261;
	// begin inline asm
	cvt.rn.bf16.f32 %rs116, %r180;
	// end inline asm
	mov.b32 	%r181, %f262;
	// begin inline asm
	cvt.rn.bf16.f32 %rs117, %r181;
	// end inline asm
	mov.b32 	%r182, %f263;
	// begin inline asm
	cvt.rn.bf16.f32 %rs118, %r182;
	// end inline asm
	mov.b32 	%r183, %f264;
	// begin inline asm
	cvt.rn.bf16.f32 %rs119, %r183;
	// end inline asm
	mov.b32 	%r184, %f265;
	// begin inline asm
	cvt.rn.bf16.f32 %rs120, %r184;
	// end inline asm
	mov.b32 	%r185, %f266;
	// begin inline asm
	cvt.rn.bf16.f32 %rs121, %r185;
	// end inline asm
	mov.b32 	%r186, %f267;
	// begin inline asm
	cvt.rn.bf16.f32 %rs122, %r186;
	// end inline asm
	mov.b32 	%r187, %f268;
	// begin inline asm
	cvt.rn.bf16.f32 %rs123, %r187;
	// end inline asm
	mov.b32 	%r188, %f269;
	// begin inline asm
	cvt.rn.bf16.f32 %rs124, %r188;
	// end inline asm
	mov.b32 	%r189, %f270;
	// begin inline asm
	cvt.rn.bf16.f32 %rs125, %r189;
	// end inline asm
	mov.b32 	%r190, %f271;
	// begin inline asm
	cvt.rn.bf16.f32 %rs126, %r190;
	// end inline asm
	mov.b32 	%r191, %f272;
	// begin inline asm
	cvt.rn.bf16.f32 %rs127, %r191;
	// end inline asm
	mov.b32 	%r192, %f273;
	// begin inline asm
	cvt.rn.bf16.f32 %rs128, %r192;
	// end inline asm
	add.s64 	%rd45, %rd20, %rd36;
	add.s64 	%rd16, %rd45, %rd33;
	add.s64 	%rd17, %rd16, 1024;
	mov.b32 	%r193, {%rs113, %rs114};
	mov.b32 	%r194, {%rs115, %rs116};
	mov.b32 	%r195, {%rs117, %rs118};
	mov.b32 	%r196, {%rs119, %rs120};
	// begin inline asm
	st.global.v4.b32 [ %rd16 + 0 ], { %r193, %r194, %r195, %r196 };
	// end inline asm
	mov.b32 	%r197, {%rs121, %rs122};
	mov.b32 	%r198, {%rs123, %rs124};
	mov.b32 	%r199, {%rs125, %rs126};
	mov.b32 	%r200, {%rs127, %rs128};
	// begin inline asm
	st.global.v4.b32 [ %rd17 + 0 ], { %r197, %r198, %r199, %r200 };
	// end inline asm
	ret;

}
	// .globl	loop_add_fusion
.visible .entry loop_add_fusion(
	.param .u64 .ptr .align 128 loop_add_fusion_param_0,
	.param .u64 .ptr .align 128 loop_add_fusion_param_1,
	.param .u64 .ptr .align 128 loop_add_fusion_param_2,
	.param .u64 .ptr .align 128 loop_add_fusion_param_3,
	.param .u64 .ptr .align 128 loop_add_fusion_param_4,
	.param .u64 .ptr .align 128 loop_add_fusion_param_5
)
.reqntid 128, 1, 1
{
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<9>;
	.reg .f32 	%f<16>;
	.reg .b64 	%rd<25>;

	ld.param.u64 	%rd1, [loop_add_fusion_param_0];
	ld.param.u64 	%rd2, [loop_add_fusion_param_5];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.param.u64 	%rd4, [loop_add_fusion_param_1];
	ld.param.u64 	%rd5, [loop_add_fusion_param_4];
	cvta.to.global.u64 	%rd6, %rd5;
	ld.param.u64 	%rd7, [loop_add_fusion_param_2];
	ld.param.u64 	%rd8, [loop_add_fusion_param_3];
	cvta.to.global.u64 	%rd9, %rd8;
	cvta.to.global.u64 	%rd10, %rd7;
	cvta.to.global.u64 	%rd11, %rd4;
	cvta.to.global.u64 	%rd12, %rd1;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shr.u32 	%r3, %r2, 3;
	shl.b32 	%r4, %r2, 7;
	and.b32  	%r5, %r4, 896;
	or.b32  	%r6, %r5, %r1;
	or.b32  	%r7, %r4, %r1;
	mul.wide.u32 	%rd13, %r7, 2;
	add.s64 	%rd14, %rd9, %rd13;
	ld.global.nc.u16 	%rs1, [%rd14];
	add.s64 	%rd15, %rd6, %rd13;
	ld.global.nc.u16 	%rs2, [%rd15];
	mul.lo.s32 	%r8, %r3, 26624;
	cvt.u64.u32 	%rd16, %r6;
	cvt.u64.u32 	%rd17, %r8;
	add.s64 	%rd18, %rd17, %rd16;
	shl.b64 	%rd19, %rd18, 1;
	add.s64 	%rd20, %rd12, %rd19;
	ld.global.nc.u16 	%rs3, [%rd20+51200];
	cvt.f32.bf16 	%f1, %rs3;
	cvt.f32.bf16 	%f2, %rs1;
	cvt.f32.bf16 	%f3, %rs2;
	add.rn.f32 	%f4, %f2, %f1;
	add.s64 	%rd21, %rd10, %rd13;
	ld.global.nc.u16 	%rs4, [%rd21];
	ld.global.nc.u16 	%rs5, [%rd20+49152];
	cvt.f32.bf16 	%f5, %rs5;
	add.rn.f32 	%f6, %f4, %f3;
	cvt.f32.bf16 	%f7, %rs4;
	add.rn.f32 	%f8, %f6, %f5;
	add.s64 	%rd22, %rd11, %rd13;
	ld.global.nc.u16 	%rs6, [%rd22];
	ld.global.nc.u16 	%rs7, [%rd20+47104];
	cvt.f32.bf16 	%f9, %rs7;
	add.rn.f32 	%f10, %f8, %f7;
	cvt.f32.bf16 	%f11, %rs6;
	add.rn.f32 	%f12, %f10, %f9;
	ld.global.nc.u16 	%rs8, [%rd20+45056];
	cvt.f32.bf16 	%f13, %rs8;
	add.rn.f32 	%f14, %f12, %f11;
	add.rn.f32 	%f15, %f14, %f13;
	mul.wide.u32 	%rd23, %r7, 4;
	add.s64 	%rd24, %rd3, %rd23;
	st.global.f32 	[%rd24], %f15;
	ret;

}
	// .globl	fusion_329
.visible .entry fusion_329(
	.param .u64 .ptr .align 128 fusion_329_param_0,
	.param .u64 .ptr .align 16 fusion_329_param_1,
	.param .u64 .ptr .align 16 fusion_329_param_2,
	.param .u64 .ptr .align 128 fusion_329_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<93>;
	.reg .f32 	%f<114>;
	.reg .b64 	%rd<29>;

	ld.param.u64 	%rd10, [fusion_329_param_0];
	ld.param.u64 	%rd11, [fusion_329_param_3];
	cvta.to.global.u64 	%rd12, %rd11;
	ld.param.u64 	%rd13, [fusion_329_param_1];
	ld.param.u64 	%rd14, [fusion_329_param_2];
	cvta.to.global.u64 	%rd15, %rd14;
	cvta.to.global.u64 	%rd5, %rd13;
	cvta.to.global.u64 	%rd16, %rd10;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd17, %r1, 1024;
	shl.b64 	%rd18, %rd17, 2;
	add.s64 	%rd19, %rd16, %rd18;
	mov.u32 	%r73, %tid.x;
	and.b32  	%r74, %r73, 31;
	shl.b32 	%r75, %r73, 3;
	and.b32  	%r76, %r75, 248;
	setp.lt.u32 	%p4, %r73, 32;
	selp.b32 	%r77, 0, 256, %p4;
	or.b32  	%r78, %r76, %r77;
	mul.wide.u32 	%rd20, %r78, 4;
	add.s64 	%rd1, %rd19, %rd20;
	add.s64 	%rd2, %rd1, 16;
	add.s64 	%rd3, %rd1, 2048;
	add.s64 	%rd4, %rd1, 2064;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r7;
	mov.b32 	%f7, %r8;
	mov.b32 	%f8, %r9;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r10;
	mov.b32 	%f10, %r11;
	mov.b32 	%f11, %r12;
	mov.b32 	%f12, %r13;
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	ld.global.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r14;
	mov.b32 	%f14, %r15;
	mov.b32 	%f15, %r16;
	mov.b32 	%f16, %r17;
	mul.rn.f32 	%f17, %f1, %f1;
	mul.rn.f32 	%f18, %f2, %f2;
	mul.rn.f32 	%f19, %f3, %f3;
	mul.rn.f32 	%f20, %f4, %f4;
	mul.rn.f32 	%f21, %f5, %f5;
	mul.rn.f32 	%f22, %f6, %f6;
	mul.rn.f32 	%f23, %f7, %f7;
	mul.rn.f32 	%f24, %f8, %f8;
	mul.rn.f32 	%f25, %f9, %f9;
	mul.rn.f32 	%f26, %f10, %f10;
	mul.rn.f32 	%f27, %f11, %f11;
	mul.rn.f32 	%f28, %f12, %f12;
	mul.rn.f32 	%f29, %f13, %f13;
	mul.rn.f32 	%f30, %f14, %f14;
	mul.rn.f32 	%f31, %f15, %f15;
	mul.rn.f32 	%f32, %f16, %f16;
	add.rn.f32 	%f33, %f17, %f18;
	add.rn.f32 	%f34, %f19, %f33;
	add.rn.f32 	%f35, %f20, %f34;
	add.rn.f32 	%f36, %f21, %f35;
	add.rn.f32 	%f37, %f22, %f36;
	add.rn.f32 	%f38, %f23, %f37;
	add.rn.f32 	%f39, %f24, %f38;
	add.rn.f32 	%f40, %f25, %f39;
	add.rn.f32 	%f41, %f26, %f40;
	add.rn.f32 	%f42, %f27, %f41;
	add.rn.f32 	%f43, %f28, %f42;
	add.rn.f32 	%f44, %f29, %f43;
	add.rn.f32 	%f45, %f30, %f44;
	add.rn.f32 	%f46, %f31, %f45;
	add.rn.f32 	%f47, %f32, %f46;
	mov.b32 	%r79, %f47;
	shfl.sync.bfly.b32	%r80, %r79, 16, 31, -1;
	mov.b32 	%f48, %r80;
	add.rn.f32 	%f49, %f47, %f48;
	mov.b32 	%r81, %f49;
	shfl.sync.bfly.b32	%r82, %r81, 8, 31, -1;
	mov.b32 	%f50, %r82;
	add.rn.f32 	%f51, %f49, %f50;
	mov.b32 	%r83, %f51;
	shfl.sync.bfly.b32	%r84, %r83, 4, 31, -1;
	mov.b32 	%f52, %r84;
	add.rn.f32 	%f53, %f51, %f52;
	mov.b32 	%r85, %f53;
	shfl.sync.bfly.b32	%r86, %r85, 2, 31, -1;
	mov.b32 	%f54, %r86;
	add.rn.f32 	%f55, %f53, %f54;
	mov.b32 	%r87, %f55;
	shfl.sync.bfly.b32	%r88, %r87, 1, 31, -1;
	mov.b32 	%f56, %r88;
	add.rn.f32 	%f57, %f55, %f56;
	setp.eq.s32 	%p1, %r74, 0;
	shr.u32 	%r89, %r73, 3;
	and.b32  	%r90, %r89, 4;
	cvt.u64.u32 	%rd21, %r90;
	mov.u64 	%rd22, global_smem;
	add.s64 	%rd23, %rd22, %rd21;
	mov.b32 	%r19, %f57;
	cvt.u32.u64 	%r18, %rd23;
	// begin inline asm
	@%p1 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r73, 2;
	shl.b32 	%r91, %r73, 2;
	cvt.u64.u32 	%rd24, %r91;
	add.s64 	%rd25, %rd22, %rd24;
	cvt.u32.u64 	%r21, %rd25;
	// begin inline asm
	@%p2 ld.shared.b32 %r20, [ %r21 + 0 ];
	// end inline asm
	mov.b32 	%f58, %r20;
	shfl.sync.bfly.b32	%r92, %r20, 1, 31, -1;
	mov.b32 	%f59, %r92;
	add.rn.f32 	%f60, %f58, %f59;
	setp.eq.s32 	%p3, %r73, 0;
	mov.b32 	%r23, %f60;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r23;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f61, [global_smem];
	mul.rn.f32 	%f62, %f61, 0f3A800000;
	// begin inline asm
	mov.u32 %r24, 0x0;
	ld.global.b32 { %r24 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f63, %r24;
	add.rn.f32 	%f64, %f62, %f63;
	rsqrt.approx.f32 	%f65, %f64;
	mul.rn.f32 	%f66, %f65, %f1;
	mul.rn.f32 	%f67, %f65, %f2;
	mul.rn.f32 	%f68, %f65, %f3;
	mul.rn.f32 	%f69, %f65, %f4;
	mul.rn.f32 	%f70, %f65, %f5;
	mul.rn.f32 	%f71, %f65, %f6;
	mul.rn.f32 	%f72, %f65, %f7;
	mul.rn.f32 	%f73, %f65, %f8;
	mul.rn.f32 	%f74, %f65, %f9;
	mul.rn.f32 	%f75, %f65, %f10;
	mul.rn.f32 	%f76, %f65, %f11;
	mul.rn.f32 	%f77, %f65, %f12;
	mul.rn.f32 	%f78, %f65, %f13;
	mul.rn.f32 	%f79, %f65, %f14;
	mul.rn.f32 	%f80, %f65, %f15;
	mul.rn.f32 	%f81, %f65, %f16;
	mul.wide.u32 	%rd26, %r78, 2;
	add.s64 	%rd6, %rd15, %rd26;
	add.s64 	%rd7, %rd6, 1024;
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	ld.global.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r25;
	mov.b32 	{%rs3, %rs4}, %r26;
	mov.b32 	{%rs5, %rs6}, %r27;
	mov.b32 	{%rs7, %rs8}, %r28;
	// begin inline asm
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	ld.global.v4.b32 { %r29, %r30, %r31, %r32 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r29;
	mov.b32 	{%rs11, %rs12}, %r30;
	mov.b32 	{%rs13, %rs14}, %r31;
	mov.b32 	{%rs15, %rs16}, %r32;
	// begin inline asm
	cvt.f32.bf16 %r33, %rs1;
	// end inline asm
	mov.b32 	%f82, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs2;
	// end inline asm
	mov.b32 	%f83, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs3;
	// end inline asm
	mov.b32 	%f84, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs4;
	// end inline asm
	mov.b32 	%f85, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs5;
	// end inline asm
	mov.b32 	%f86, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs6;
	// end inline asm
	mov.b32 	%f87, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs7;
	// end inline asm
	mov.b32 	%f88, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs8;
	// end inline asm
	mov.b32 	%f89, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs9;
	// end inline asm
	mov.b32 	%f90, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs10;
	// end inline asm
	mov.b32 	%f91, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs11;
	// end inline asm
	mov.b32 	%f92, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs12;
	// end inline asm
	mov.b32 	%f93, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs13;
	// end inline asm
	mov.b32 	%f94, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs14;
	// end inline asm
	mov.b32 	%f95, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs15;
	// end inline asm
	mov.b32 	%f96, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs16;
	// end inline asm
	mov.b32 	%f97, %r48;
	mul.rn.f32 	%f98, %f66, %f82;
	mul.rn.f32 	%f99, %f67, %f83;
	mul.rn.f32 	%f100, %f68, %f84;
	mul.rn.f32 	%f101, %f69, %f85;
	mul.rn.f32 	%f102, %f70, %f86;
	mul.rn.f32 	%f103, %f71, %f87;
	mul.rn.f32 	%f104, %f72, %f88;
	mul.rn.f32 	%f105, %f73, %f89;
	mul.rn.f32 	%f106, %f74, %f90;
	mul.rn.f32 	%f107, %f75, %f91;
	mul.rn.f32 	%f108, %f76, %f92;
	mul.rn.f32 	%f109, %f77, %f93;
	mul.rn.f32 	%f110, %f78, %f94;
	mul.rn.f32 	%f111, %f79, %f95;
	mul.rn.f32 	%f112, %f80, %f96;
	mul.rn.f32 	%f113, %f81, %f97;
	mov.b32 	%r49, %f98;
	// begin inline asm
	cvt.rn.bf16.f32 %rs17, %r49;
	// end inline asm
	mov.b32 	%r50, %f99;
	// begin inline asm
	cvt.rn.bf16.f32 %rs18, %r50;
	// end inline asm
	mov.b32 	%r51, %f100;
	// begin inline asm
	cvt.rn.bf16.f32 %rs19, %r51;
	// end inline asm
	mov.b32 	%r52, %f101;
	// begin inline asm
	cvt.rn.bf16.f32 %rs20, %r52;
	// end inline asm
	mov.b32 	%r53, %f102;
	// begin inline asm
	cvt.rn.bf16.f32 %rs21, %r53;
	// end inline asm
	mov.b32 	%r54, %f103;
	// begin inline asm
	cvt.rn.bf16.f32 %rs22, %r54;
	// end inline asm
	mov.b32 	%r55, %f104;
	// begin inline asm
	cvt.rn.bf16.f32 %rs23, %r55;
	// end inline asm
	mov.b32 	%r56, %f105;
	// begin inline asm
	cvt.rn.bf16.f32 %rs24, %r56;
	// end inline asm
	mov.b32 	%r57, %f106;
	// begin inline asm
	cvt.rn.bf16.f32 %rs25, %r57;
	// end inline asm
	mov.b32 	%r58, %f107;
	// begin inline asm
	cvt.rn.bf16.f32 %rs26, %r58;
	// end inline asm
	mov.b32 	%r59, %f108;
	// begin inline asm
	cvt.rn.bf16.f32 %rs27, %r59;
	// end inline asm
	mov.b32 	%r60, %f109;
	// begin inline asm
	cvt.rn.bf16.f32 %rs28, %r60;
	// end inline asm
	mov.b32 	%r61, %f110;
	// begin inline asm
	cvt.rn.bf16.f32 %rs29, %r61;
	// end inline asm
	mov.b32 	%r62, %f111;
	// begin inline asm
	cvt.rn.bf16.f32 %rs30, %r62;
	// end inline asm
	mov.b32 	%r63, %f112;
	// begin inline asm
	cvt.rn.bf16.f32 %rs31, %r63;
	// end inline asm
	mov.b32 	%r64, %f113;
	// begin inline asm
	cvt.rn.bf16.f32 %rs32, %r64;
	// end inline asm
	shl.b64 	%rd27, %rd17, 1;
	add.s64 	%rd28, %rd12, %rd27;
	add.s64 	%rd8, %rd28, %rd26;
	add.s64 	%rd9, %rd8, 1024;
	mov.b32 	%r65, {%rs17, %rs18};
	mov.b32 	%r66, {%rs19, %rs20};
	mov.b32 	%r67, {%rs21, %rs22};
	mov.b32 	%r68, {%rs23, %rs24};
	// begin inline asm
	st.global.v4.b32 [ %rd8 + 0 ], { %r65, %r66, %r67, %r68 };
	// end inline asm
	mov.b32 	%r69, {%rs25, %rs26};
	mov.b32 	%r70, {%rs27, %rs28};
	mov.b32 	%r71, {%rs29, %rs30};
	mov.b32 	%r72, {%rs31, %rs32};
	// begin inline asm
	st.global.v4.b32 [ %rd9 + 0 ], { %r69, %r70, %r71, %r72 };
	// end inline asm
	ret;

}
	// .globl	fusion_330
.visible .entry fusion_330(
	.param .u64 .ptr .align 16 fusion_330_param_0,
	.param .u64 .ptr .align 16 fusion_330_param_1,
	.param .u64 .ptr .align 128 fusion_330_param_2,
	.param .u64 .ptr .align 128 fusion_330_param_3,
	.param .u64 .ptr .align 128 fusion_330_param_4,
	.param .u64 .ptr .align 128 fusion_330_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<65>;
	.reg .b32 	%r<141>;
	.reg .f32 	%f<178>;
	.reg .b64 	%rd<41>;

	ld.param.u64 	%rd14, [fusion_330_param_0];
	ld.param.u64 	%rd15, [fusion_330_param_5];
	cvta.to.global.u64 	%rd16, %rd15;
	ld.param.u64 	%rd17, [fusion_330_param_1];
	ld.param.u64 	%rd18, [fusion_330_param_4];
	cvta.to.global.u64 	%rd19, %rd18;
	ld.param.u64 	%rd20, [fusion_330_param_2];
	ld.param.u64 	%rd21, [fusion_330_param_3];
	cvta.to.global.u64 	%rd22, %rd21;
	cvta.to.global.u64 	%rd23, %rd20;
	cvta.to.global.u64 	%rd24, %rd17;
	cvta.to.global.u64 	%rd9, %rd14;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd25, %r1, 53248;
	add.s64 	%rd26, %rd19, %rd25;
	mov.u32 	%r121, %tid.x;
	and.b32  	%r122, %r121, 31;
	shl.b32 	%r123, %r121, 3;
	and.b32  	%r124, %r123, 248;
	setp.lt.u32 	%p4, %r121, 32;
	selp.b32 	%r125, 0, 256, %p4;
	or.b32  	%r126, %r124, %r125;
	mul.wide.u32 	%rd27, %r126, 2;
	add.s64 	%rd28, %rd26, %rd27;
	add.s64 	%rd1, %rd28, 43008;
	add.s64 	%rd2, %rd28, 44032;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd29, %r1, 1024;
	shl.b64 	%rd30, %rd29, 1;
	add.s64 	%rd31, %rd22, %rd30;
	add.s64 	%rd3, %rd31, %rd27;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	shl.b64 	%rd32, %rd29, 2;
	add.s64 	%rd33, %rd23, %rd32;
	mul.wide.u32 	%rd34, %r126, 4;
	add.s64 	%rd5, %rd33, %rd34;
	add.s64 	%rd6, %rd5, 16;
	add.s64 	%rd7, %rd5, 2048;
	add.s64 	%rd8, %rd5, 2064;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r50;
	mov.b32 	%f34, %r51;
	mov.b32 	%f35, %r52;
	mov.b32 	%f36, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f37, %r54;
	mov.b32 	%f38, %r55;
	mov.b32 	%f39, %r56;
	mov.b32 	%f40, %r57;
	// begin inline asm
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	ld.global.v4.b32 { %r58, %r59, %r60, %r61 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r58;
	mov.b32 	%f42, %r59;
	mov.b32 	%f43, %r60;
	mov.b32 	%f44, %r61;
	// begin inline asm
	mov.u32 %r62, 0x0;
	mov.u32 %r63, 0x0;
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	ld.global.v4.b32 { %r62, %r63, %r64, %r65 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f45, %r62;
	mov.b32 	%f46, %r63;
	mov.b32 	%f47, %r64;
	mov.b32 	%f48, %r65;
	add.rn.f32 	%f49, %f17, %f33;
	add.rn.f32 	%f50, %f18, %f34;
	add.rn.f32 	%f51, %f19, %f35;
	add.rn.f32 	%f52, %f20, %f36;
	add.rn.f32 	%f53, %f21, %f37;
	add.rn.f32 	%f54, %f22, %f38;
	add.rn.f32 	%f55, %f23, %f39;
	add.rn.f32 	%f56, %f24, %f40;
	add.rn.f32 	%f57, %f25, %f41;
	add.rn.f32 	%f58, %f26, %f42;
	add.rn.f32 	%f59, %f27, %f43;
	add.rn.f32 	%f60, %f28, %f44;
	add.rn.f32 	%f61, %f29, %f45;
	add.rn.f32 	%f62, %f30, %f46;
	add.rn.f32 	%f63, %f31, %f47;
	add.rn.f32 	%f64, %f32, %f48;
	add.rn.f32 	%f65, %f1, %f49;
	add.rn.f32 	%f66, %f2, %f50;
	add.rn.f32 	%f67, %f3, %f51;
	add.rn.f32 	%f68, %f4, %f52;
	add.rn.f32 	%f69, %f5, %f53;
	add.rn.f32 	%f70, %f6, %f54;
	add.rn.f32 	%f71, %f7, %f55;
	add.rn.f32 	%f72, %f8, %f56;
	add.rn.f32 	%f73, %f9, %f57;
	add.rn.f32 	%f74, %f10, %f58;
	add.rn.f32 	%f75, %f11, %f59;
	add.rn.f32 	%f76, %f12, %f60;
	add.rn.f32 	%f77, %f13, %f61;
	add.rn.f32 	%f78, %f14, %f62;
	add.rn.f32 	%f79, %f15, %f63;
	add.rn.f32 	%f80, %f16, %f64;
	mul.rn.f32 	%f81, %f65, %f65;
	mul.rn.f32 	%f82, %f66, %f66;
	mul.rn.f32 	%f83, %f67, %f67;
	mul.rn.f32 	%f84, %f68, %f68;
	mul.rn.f32 	%f85, %f69, %f69;
	mul.rn.f32 	%f86, %f70, %f70;
	mul.rn.f32 	%f87, %f71, %f71;
	mul.rn.f32 	%f88, %f72, %f72;
	mul.rn.f32 	%f89, %f73, %f73;
	mul.rn.f32 	%f90, %f74, %f74;
	mul.rn.f32 	%f91, %f75, %f75;
	mul.rn.f32 	%f92, %f76, %f76;
	mul.rn.f32 	%f93, %f77, %f77;
	mul.rn.f32 	%f94, %f78, %f78;
	mul.rn.f32 	%f95, %f79, %f79;
	mul.rn.f32 	%f96, %f80, %f80;
	add.rn.f32 	%f97, %f81, %f82;
	add.rn.f32 	%f98, %f83, %f97;
	add.rn.f32 	%f99, %f84, %f98;
	add.rn.f32 	%f100, %f85, %f99;
	add.rn.f32 	%f101, %f86, %f100;
	add.rn.f32 	%f102, %f87, %f101;
	add.rn.f32 	%f103, %f88, %f102;
	add.rn.f32 	%f104, %f89, %f103;
	add.rn.f32 	%f105, %f90, %f104;
	add.rn.f32 	%f106, %f91, %f105;
	add.rn.f32 	%f107, %f92, %f106;
	add.rn.f32 	%f108, %f93, %f107;
	add.rn.f32 	%f109, %f94, %f108;
	add.rn.f32 	%f110, %f95, %f109;
	add.rn.f32 	%f111, %f96, %f110;
	mov.b32 	%r127, %f111;
	shfl.sync.bfly.b32	%r128, %r127, 16, 31, -1;
	mov.b32 	%f112, %r128;
	add.rn.f32 	%f113, %f111, %f112;
	mov.b32 	%r129, %f113;
	shfl.sync.bfly.b32	%r130, %r129, 8, 31, -1;
	mov.b32 	%f114, %r130;
	add.rn.f32 	%f115, %f113, %f114;
	mov.b32 	%r131, %f115;
	shfl.sync.bfly.b32	%r132, %r131, 4, 31, -1;
	mov.b32 	%f116, %r132;
	add.rn.f32 	%f117, %f115, %f116;
	mov.b32 	%r133, %f117;
	shfl.sync.bfly.b32	%r134, %r133, 2, 31, -1;
	mov.b32 	%f118, %r134;
	add.rn.f32 	%f119, %f117, %f118;
	mov.b32 	%r135, %f119;
	shfl.sync.bfly.b32	%r136, %r135, 1, 31, -1;
	mov.b32 	%f120, %r136;
	add.rn.f32 	%f121, %f119, %f120;
	setp.eq.s32 	%p1, %r122, 0;
	shr.u32 	%r137, %r121, 3;
	and.b32  	%r138, %r137, 4;
	cvt.u64.u32 	%rd35, %r138;
	mov.u64 	%rd36, global_smem;
	add.s64 	%rd37, %rd36, %rd35;
	mov.b32 	%r67, %f121;
	cvt.u32.u64 	%r66, %rd37;
	// begin inline asm
	@%p1 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r121, 2;
	shl.b32 	%r139, %r121, 2;
	cvt.u64.u32 	%rd38, %r139;
	add.s64 	%rd39, %rd36, %rd38;
	cvt.u32.u64 	%r69, %rd39;
	// begin inline asm
	@%p2 ld.shared.b32 %r68, [ %r69 + 0 ];
	// end inline asm
	mov.b32 	%f122, %r68;
	shfl.sync.bfly.b32	%r140, %r68, 1, 31, -1;
	mov.b32 	%f123, %r140;
	add.rn.f32 	%f124, %f122, %f123;
	setp.eq.s32 	%p3, %r121, 0;
	mov.b32 	%r71, %f124;
	// begin inline asm
	@%p3 st.shared.b32 [ %r69 + 0 ], %r71;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f125, [global_smem];
	mul.rn.f32 	%f126, %f125, 0f3A800000;
	// begin inline asm
	mov.u32 %r72, 0x0;
	ld.global.b32 { %r72 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f127, %r72;
	add.rn.f32 	%f128, %f126, %f127;
	rsqrt.approx.f32 	%f129, %f128;
	mul.rn.f32 	%f130, %f65, %f129;
	mul.rn.f32 	%f131, %f66, %f129;
	mul.rn.f32 	%f132, %f67, %f129;
	mul.rn.f32 	%f133, %f68, %f129;
	mul.rn.f32 	%f134, %f69, %f129;
	mul.rn.f32 	%f135, %f70, %f129;
	mul.rn.f32 	%f136, %f71, %f129;
	mul.rn.f32 	%f137, %f72, %f129;
	mul.rn.f32 	%f138, %f73, %f129;
	mul.rn.f32 	%f139, %f74, %f129;
	mul.rn.f32 	%f140, %f75, %f129;
	mul.rn.f32 	%f141, %f76, %f129;
	mul.rn.f32 	%f142, %f77, %f129;
	mul.rn.f32 	%f143, %f78, %f129;
	mul.rn.f32 	%f144, %f79, %f129;
	mul.rn.f32 	%f145, %f80, %f129;
	add.s64 	%rd10, %rd24, %rd27;
	add.s64 	%rd11, %rd10, 1024;
	// begin inline asm
	mov.u32 %r73, 0x0;
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	ld.global.v4.b32 { %r73, %r74, %r75, %r76 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r73;
	mov.b32 	{%rs35, %rs36}, %r74;
	mov.b32 	{%rs37, %rs38}, %r75;
	mov.b32 	{%rs39, %rs40}, %r76;
	// begin inline asm
	mov.u32 %r77, 0x0;
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	ld.global.v4.b32 { %r77, %r78, %r79, %r80 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r77;
	mov.b32 	{%rs43, %rs44}, %r78;
	mov.b32 	{%rs45, %rs46}, %r79;
	mov.b32 	{%rs47, %rs48}, %r80;
	// begin inline asm
	cvt.f32.bf16 %r81, %rs33;
	// end inline asm
	mov.b32 	%f146, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs34;
	// end inline asm
	mov.b32 	%f147, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs35;
	// end inline asm
	mov.b32 	%f148, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs36;
	// end inline asm
	mov.b32 	%f149, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs37;
	// end inline asm
	mov.b32 	%f150, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs38;
	// end inline asm
	mov.b32 	%f151, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs39;
	// end inline asm
	mov.b32 	%f152, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs40;
	// end inline asm
	mov.b32 	%f153, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs41;
	// end inline asm
	mov.b32 	%f154, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs42;
	// end inline asm
	mov.b32 	%f155, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs43;
	// end inline asm
	mov.b32 	%f156, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs44;
	// end inline asm
	mov.b32 	%f157, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs45;
	// end inline asm
	mov.b32 	%f158, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs46;
	// end inline asm
	mov.b32 	%f159, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs47;
	// end inline asm
	mov.b32 	%f160, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs48;
	// end inline asm
	mov.b32 	%f161, %r96;
	mul.rn.f32 	%f162, %f130, %f146;
	mul.rn.f32 	%f163, %f131, %f147;
	mul.rn.f32 	%f164, %f132, %f148;
	mul.rn.f32 	%f165, %f133, %f149;
	mul.rn.f32 	%f166, %f134, %f150;
	mul.rn.f32 	%f167, %f135, %f151;
	mul.rn.f32 	%f168, %f136, %f152;
	mul.rn.f32 	%f169, %f137, %f153;
	mul.rn.f32 	%f170, %f138, %f154;
	mul.rn.f32 	%f171, %f139, %f155;
	mul.rn.f32 	%f172, %f140, %f156;
	mul.rn.f32 	%f173, %f141, %f157;
	mul.rn.f32 	%f174, %f142, %f158;
	mul.rn.f32 	%f175, %f143, %f159;
	mul.rn.f32 	%f176, %f144, %f160;
	mul.rn.f32 	%f177, %f145, %f161;
	mov.b32 	%r97, %f162;
	// begin inline asm
	cvt.rn.bf16.f32 %rs49, %r97;
	// end inline asm
	mov.b32 	%r98, %f163;
	// begin inline asm
	cvt.rn.bf16.f32 %rs50, %r98;
	// end inline asm
	mov.b32 	%r99, %f164;
	// begin inline asm
	cvt.rn.bf16.f32 %rs51, %r99;
	// end inline asm
	mov.b32 	%r100, %f165;
	// begin inline asm
	cvt.rn.bf16.f32 %rs52, %r100;
	// end inline asm
	mov.b32 	%r101, %f166;
	// begin inline asm
	cvt.rn.bf16.f32 %rs53, %r101;
	// end inline asm
	mov.b32 	%r102, %f167;
	// begin inline asm
	cvt.rn.bf16.f32 %rs54, %r102;
	// end inline asm
	mov.b32 	%r103, %f168;
	// begin inline asm
	cvt.rn.bf16.f32 %rs55, %r103;
	// end inline asm
	mov.b32 	%r104, %f169;
	// begin inline asm
	cvt.rn.bf16.f32 %rs56, %r104;
	// end inline asm
	mov.b32 	%r105, %f170;
	// begin inline asm
	cvt.rn.bf16.f32 %rs57, %r105;
	// end inline asm
	mov.b32 	%r106, %f171;
	// begin inline asm
	cvt.rn.bf16.f32 %rs58, %r106;
	// end inline asm
	mov.b32 	%r107, %f172;
	// begin inline asm
	cvt.rn.bf16.f32 %rs59, %r107;
	// end inline asm
	mov.b32 	%r108, %f173;
	// begin inline asm
	cvt.rn.bf16.f32 %rs60, %r108;
	// end inline asm
	mov.b32 	%r109, %f174;
	// begin inline asm
	cvt.rn.bf16.f32 %rs61, %r109;
	// end inline asm
	mov.b32 	%r110, %f175;
	// begin inline asm
	cvt.rn.bf16.f32 %rs62, %r110;
	// end inline asm
	mov.b32 	%r111, %f176;
	// begin inline asm
	cvt.rn.bf16.f32 %rs63, %r111;
	// end inline asm
	mov.b32 	%r112, %f177;
	// begin inline asm
	cvt.rn.bf16.f32 %rs64, %r112;
	// end inline asm
	add.s64 	%rd40, %rd16, %rd30;
	add.s64 	%rd12, %rd40, %rd27;
	add.s64 	%rd13, %rd12, 1024;
	mov.b32 	%r113, {%rs49, %rs50};
	mov.b32 	%r114, {%rs51, %rs52};
	mov.b32 	%r115, {%rs53, %rs54};
	mov.b32 	%r116, {%rs55, %rs56};
	// begin inline asm
	st.global.v4.b32 [ %rd12 + 0 ], { %r113, %r114, %r115, %r116 };
	// end inline asm
	mov.b32 	%r117, {%rs57, %rs58};
	mov.b32 	%r118, {%rs59, %rs60};
	mov.b32 	%r119, {%rs61, %rs62};
	mov.b32 	%r120, {%rs63, %rs64};
	// begin inline asm
	st.global.v4.b32 [ %rd13 + 0 ], { %r117, %r118, %r119, %r120 };
	// end inline asm
	ret;

}
	// .globl	fusion_331
.visible .entry fusion_331(
	.param .u64 .ptr .align 16 fusion_331_param_0,
	.param .u64 .ptr .align 16 fusion_331_param_1,
	.param .u64 .ptr .align 128 fusion_331_param_2,
	.param .u64 .ptr .align 128 fusion_331_param_3,
	.param .u64 .ptr .align 128 fusion_331_param_4,
	.param .u64 .ptr .align 128 fusion_331_param_5,
	.param .u64 .ptr .align 128 fusion_331_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<97>;
	.reg .b32 	%r<189>;
	.reg .f32 	%f<242>;
	.reg .b64 	%rd<48>;

	ld.param.u64 	%rd18, [fusion_331_param_0];
	ld.param.u64 	%rd19, [fusion_331_param_6];
	cvta.to.global.u64 	%rd20, %rd19;
	ld.param.u64 	%rd21, [fusion_331_param_1];
	ld.param.u64 	%rd22, [fusion_331_param_5];
	cvta.to.global.u64 	%rd23, %rd22;
	ld.param.u64 	%rd24, [fusion_331_param_2];
	ld.param.u64 	%rd25, [fusion_331_param_4];
	cvta.to.global.u64 	%rd26, %rd25;
	ld.param.u64 	%rd27, [fusion_331_param_3];
	cvta.to.global.u64 	%rd28, %rd27;
	cvta.to.global.u64 	%rd29, %rd24;
	cvta.to.global.u64 	%rd30, %rd21;
	cvta.to.global.u64 	%rd13, %rd18;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd31, %r1, 53248;
	add.s64 	%rd32, %rd26, %rd31;
	mov.u32 	%r169, %tid.x;
	and.b32  	%r170, %r169, 31;
	shl.b32 	%r171, %r169, 3;
	and.b32  	%r172, %r171, 248;
	setp.lt.u32 	%p4, %r169, 32;
	selp.b32 	%r173, 0, 256, %p4;
	or.b32  	%r174, %r172, %r173;
	mul.wide.u32 	%rd33, %r174, 2;
	add.s64 	%rd34, %rd32, %rd33;
	add.s64 	%rd1, %rd34, 40960;
	add.s64 	%rd2, %rd34, 41984;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd35, %r1, 1024;
	shl.b64 	%rd36, %rd35, 1;
	add.s64 	%rd37, %rd23, %rd36;
	add.s64 	%rd3, %rd37, %rd33;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	add.s64 	%rd5, %rd34, 43008;
	add.s64 	%rd6, %rd34, 44032;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r50;
	mov.b32 	{%rs35, %rs36}, %r51;
	mov.b32 	{%rs37, %rs38}, %r52;
	mov.b32 	{%rs39, %rs40}, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r54;
	mov.b32 	{%rs43, %rs44}, %r55;
	mov.b32 	{%rs45, %rs46}, %r56;
	mov.b32 	{%rs47, %rs48}, %r57;
	// begin inline asm
	cvt.f32.bf16 %r58, %rs33;
	// end inline asm
	mov.b32 	%f33, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs34;
	// end inline asm
	mov.b32 	%f34, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs35;
	// end inline asm
	mov.b32 	%f35, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs36;
	// end inline asm
	mov.b32 	%f36, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs37;
	// end inline asm
	mov.b32 	%f37, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs38;
	// end inline asm
	mov.b32 	%f38, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs39;
	// end inline asm
	mov.b32 	%f39, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs40;
	// end inline asm
	mov.b32 	%f40, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs41;
	// end inline asm
	mov.b32 	%f41, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs42;
	// end inline asm
	mov.b32 	%f42, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs43;
	// end inline asm
	mov.b32 	%f43, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs44;
	// end inline asm
	mov.b32 	%f44, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs45;
	// end inline asm
	mov.b32 	%f45, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs46;
	// end inline asm
	mov.b32 	%f46, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs47;
	// end inline asm
	mov.b32 	%f47, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs48;
	// end inline asm
	mov.b32 	%f48, %r73;
	add.s64 	%rd38, %rd28, %rd36;
	add.s64 	%rd7, %rd38, %rd33;
	add.s64 	%rd8, %rd7, 1024;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	ld.global.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs49, %rs50}, %r74;
	mov.b32 	{%rs51, %rs52}, %r75;
	mov.b32 	{%rs53, %rs54}, %r76;
	mov.b32 	{%rs55, %rs56}, %r77;
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	ld.global.v4.b32 { %r78, %r79, %r80, %r81 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	{%rs57, %rs58}, %r78;
	mov.b32 	{%rs59, %rs60}, %r79;
	mov.b32 	{%rs61, %rs62}, %r80;
	mov.b32 	{%rs63, %rs64}, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs49;
	// end inline asm
	mov.b32 	%f49, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs50;
	// end inline asm
	mov.b32 	%f50, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs51;
	// end inline asm
	mov.b32 	%f51, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs52;
	// end inline asm
	mov.b32 	%f52, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs53;
	// end inline asm
	mov.b32 	%f53, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs54;
	// end inline asm
	mov.b32 	%f54, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs55;
	// end inline asm
	mov.b32 	%f55, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs56;
	// end inline asm
	mov.b32 	%f56, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs57;
	// end inline asm
	mov.b32 	%f57, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs58;
	// end inline asm
	mov.b32 	%f58, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs59;
	// end inline asm
	mov.b32 	%f59, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs60;
	// end inline asm
	mov.b32 	%f60, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs61;
	// end inline asm
	mov.b32 	%f61, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs62;
	// end inline asm
	mov.b32 	%f62, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs63;
	// end inline asm
	mov.b32 	%f63, %r96;
	// begin inline asm
	cvt.f32.bf16 %r97, %rs64;
	// end inline asm
	mov.b32 	%f64, %r97;
	shl.b64 	%rd39, %rd35, 2;
	add.s64 	%rd40, %rd29, %rd39;
	mul.wide.u32 	%rd41, %r174, 4;
	add.s64 	%rd9, %rd40, %rd41;
	add.s64 	%rd10, %rd9, 16;
	add.s64 	%rd11, %rd9, 2048;
	add.s64 	%rd12, %rd9, 2064;
	// begin inline asm
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	ld.global.v4.b32 { %r98, %r99, %r100, %r101 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f65, %r98;
	mov.b32 	%f66, %r99;
	mov.b32 	%f67, %r100;
	mov.b32 	%f68, %r101;
	// begin inline asm
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	ld.global.v4.b32 { %r102, %r103, %r104, %r105 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f69, %r102;
	mov.b32 	%f70, %r103;
	mov.b32 	%f71, %r104;
	mov.b32 	%f72, %r105;
	// begin inline asm
	mov.u32 %r106, 0x0;
	mov.u32 %r107, 0x0;
	mov.u32 %r108, 0x0;
	mov.u32 %r109, 0x0;
	ld.global.v4.b32 { %r106, %r107, %r108, %r109 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f73, %r106;
	mov.b32 	%f74, %r107;
	mov.b32 	%f75, %r108;
	mov.b32 	%f76, %r109;
	// begin inline asm
	mov.u32 %r110, 0x0;
	mov.u32 %r111, 0x0;
	mov.u32 %r112, 0x0;
	mov.u32 %r113, 0x0;
	ld.global.v4.b32 { %r110, %r111, %r112, %r113 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f77, %r110;
	mov.b32 	%f78, %r111;
	mov.b32 	%f79, %r112;
	mov.b32 	%f80, %r113;
	add.rn.f32 	%f81, %f49, %f65;
	add.rn.f32 	%f82, %f50, %f66;
	add.rn.f32 	%f83, %f51, %f67;
	add.rn.f32 	%f84, %f52, %f68;
	add.rn.f32 	%f85, %f53, %f69;
	add.rn.f32 	%f86, %f54, %f70;
	add.rn.f32 	%f87, %f55, %f71;
	add.rn.f32 	%f88, %f56, %f72;
	add.rn.f32 	%f89, %f57, %f73;
	add.rn.f32 	%f90, %f58, %f74;
	add.rn.f32 	%f91, %f59, %f75;
	add.rn.f32 	%f92, %f60, %f76;
	add.rn.f32 	%f93, %f61, %f77;
	add.rn.f32 	%f94, %f62, %f78;
	add.rn.f32 	%f95, %f63, %f79;
	add.rn.f32 	%f96, %f64, %f80;
	add.rn.f32 	%f97, %f33, %f81;
	add.rn.f32 	%f98, %f34, %f82;
	add.rn.f32 	%f99, %f35, %f83;
	add.rn.f32 	%f100, %f36, %f84;
	add.rn.f32 	%f101, %f37, %f85;
	add.rn.f32 	%f102, %f38, %f86;
	add.rn.f32 	%f103, %f39, %f87;
	add.rn.f32 	%f104, %f40, %f88;
	add.rn.f32 	%f105, %f41, %f89;
	add.rn.f32 	%f106, %f42, %f90;
	add.rn.f32 	%f107, %f43, %f91;
	add.rn.f32 	%f108, %f44, %f92;
	add.rn.f32 	%f109, %f45, %f93;
	add.rn.f32 	%f110, %f46, %f94;
	add.rn.f32 	%f111, %f47, %f95;
	add.rn.f32 	%f112, %f48, %f96;
	add.rn.f32 	%f113, %f17, %f97;
	add.rn.f32 	%f114, %f18, %f98;
	add.rn.f32 	%f115, %f19, %f99;
	add.rn.f32 	%f116, %f20, %f100;
	add.rn.f32 	%f117, %f21, %f101;
	add.rn.f32 	%f118, %f22, %f102;
	add.rn.f32 	%f119, %f23, %f103;
	add.rn.f32 	%f120, %f24, %f104;
	add.rn.f32 	%f121, %f25, %f105;
	add.rn.f32 	%f122, %f26, %f106;
	add.rn.f32 	%f123, %f27, %f107;
	add.rn.f32 	%f124, %f28, %f108;
	add.rn.f32 	%f125, %f29, %f109;
	add.rn.f32 	%f126, %f30, %f110;
	add.rn.f32 	%f127, %f31, %f111;
	add.rn.f32 	%f128, %f32, %f112;
	add.rn.f32 	%f129, %f1, %f113;
	add.rn.f32 	%f130, %f2, %f114;
	add.rn.f32 	%f131, %f3, %f115;
	add.rn.f32 	%f132, %f4, %f116;
	add.rn.f32 	%f133, %f5, %f117;
	add.rn.f32 	%f134, %f6, %f118;
	add.rn.f32 	%f135, %f7, %f119;
	add.rn.f32 	%f136, %f8, %f120;
	add.rn.f32 	%f137, %f9, %f121;
	add.rn.f32 	%f138, %f10, %f122;
	add.rn.f32 	%f139, %f11, %f123;
	add.rn.f32 	%f140, %f12, %f124;
	add.rn.f32 	%f141, %f13, %f125;
	add.rn.f32 	%f142, %f14, %f126;
	add.rn.f32 	%f143, %f15, %f127;
	add.rn.f32 	%f144, %f16, %f128;
	mul.rn.f32 	%f145, %f129, %f129;
	mul.rn.f32 	%f146, %f130, %f130;
	mul.rn.f32 	%f147, %f131, %f131;
	mul.rn.f32 	%f148, %f132, %f132;
	mul.rn.f32 	%f149, %f133, %f133;
	mul.rn.f32 	%f150, %f134, %f134;
	mul.rn.f32 	%f151, %f135, %f135;
	mul.rn.f32 	%f152, %f136, %f136;
	mul.rn.f32 	%f153, %f137, %f137;
	mul.rn.f32 	%f154, %f138, %f138;
	mul.rn.f32 	%f155, %f139, %f139;
	mul.rn.f32 	%f156, %f140, %f140;
	mul.rn.f32 	%f157, %f141, %f141;
	mul.rn.f32 	%f158, %f142, %f142;
	mul.rn.f32 	%f159, %f143, %f143;
	mul.rn.f32 	%f160, %f144, %f144;
	add.rn.f32 	%f161, %f145, %f146;
	add.rn.f32 	%f162, %f147, %f161;
	add.rn.f32 	%f163, %f148, %f162;
	add.rn.f32 	%f164, %f149, %f163;
	add.rn.f32 	%f165, %f150, %f164;
	add.rn.f32 	%f166, %f151, %f165;
	add.rn.f32 	%f167, %f152, %f166;
	add.rn.f32 	%f168, %f153, %f167;
	add.rn.f32 	%f169, %f154, %f168;
	add.rn.f32 	%f170, %f155, %f169;
	add.rn.f32 	%f171, %f156, %f170;
	add.rn.f32 	%f172, %f157, %f171;
	add.rn.f32 	%f173, %f158, %f172;
	add.rn.f32 	%f174, %f159, %f173;
	add.rn.f32 	%f175, %f160, %f174;
	mov.b32 	%r175, %f175;
	shfl.sync.bfly.b32	%r176, %r175, 16, 31, -1;
	mov.b32 	%f176, %r176;
	add.rn.f32 	%f177, %f175, %f176;
	mov.b32 	%r177, %f177;
	shfl.sync.bfly.b32	%r178, %r177, 8, 31, -1;
	mov.b32 	%f178, %r178;
	add.rn.f32 	%f179, %f177, %f178;
	mov.b32 	%r179, %f179;
	shfl.sync.bfly.b32	%r180, %r179, 4, 31, -1;
	mov.b32 	%f180, %r180;
	add.rn.f32 	%f181, %f179, %f180;
	mov.b32 	%r181, %f181;
	shfl.sync.bfly.b32	%r182, %r181, 2, 31, -1;
	mov.b32 	%f182, %r182;
	add.rn.f32 	%f183, %f181, %f182;
	mov.b32 	%r183, %f183;
	shfl.sync.bfly.b32	%r184, %r183, 1, 31, -1;
	mov.b32 	%f184, %r184;
	add.rn.f32 	%f185, %f183, %f184;
	setp.eq.s32 	%p1, %r170, 0;
	shr.u32 	%r185, %r169, 3;
	and.b32  	%r186, %r185, 4;
	cvt.u64.u32 	%rd42, %r186;
	mov.u64 	%rd43, global_smem;
	add.s64 	%rd44, %rd43, %rd42;
	mov.b32 	%r115, %f185;
	cvt.u32.u64 	%r114, %rd44;
	// begin inline asm
	@%p1 st.shared.b32 [ %r114 + 0 ], %r115;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r169, 2;
	shl.b32 	%r187, %r169, 2;
	cvt.u64.u32 	%rd45, %r187;
	add.s64 	%rd46, %rd43, %rd45;
	cvt.u32.u64 	%r117, %rd46;
	// begin inline asm
	@%p2 ld.shared.b32 %r116, [ %r117 + 0 ];
	// end inline asm
	mov.b32 	%f186, %r116;
	shfl.sync.bfly.b32	%r188, %r116, 1, 31, -1;
	mov.b32 	%f187, %r188;
	add.rn.f32 	%f188, %f186, %f187;
	setp.eq.s32 	%p3, %r169, 0;
	mov.b32 	%r119, %f188;
	// begin inline asm
	@%p3 st.shared.b32 [ %r117 + 0 ], %r119;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f189, [global_smem];
	mul.rn.f32 	%f190, %f189, 0f3A800000;
	// begin inline asm
	mov.u32 %r120, 0x0;
	ld.global.b32 { %r120 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f191, %r120;
	add.rn.f32 	%f192, %f190, %f191;
	rsqrt.approx.f32 	%f193, %f192;
	mul.rn.f32 	%f194, %f129, %f193;
	mul.rn.f32 	%f195, %f130, %f193;
	mul.rn.f32 	%f196, %f131, %f193;
	mul.rn.f32 	%f197, %f132, %f193;
	mul.rn.f32 	%f198, %f133, %f193;
	mul.rn.f32 	%f199, %f134, %f193;
	mul.rn.f32 	%f200, %f135, %f193;
	mul.rn.f32 	%f201, %f136, %f193;
	mul.rn.f32 	%f202, %f137, %f193;
	mul.rn.f32 	%f203, %f138, %f193;
	mul.rn.f32 	%f204, %f139, %f193;
	mul.rn.f32 	%f205, %f140, %f193;
	mul.rn.f32 	%f206, %f141, %f193;
	mul.rn.f32 	%f207, %f142, %f193;
	mul.rn.f32 	%f208, %f143, %f193;
	mul.rn.f32 	%f209, %f144, %f193;
	add.s64 	%rd14, %rd30, %rd33;
	add.s64 	%rd15, %rd14, 1024;
	// begin inline asm
	mov.u32 %r121, 0x0;
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	ld.global.v4.b32 { %r121, %r122, %r123, %r124 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	{%rs65, %rs66}, %r121;
	mov.b32 	{%rs67, %rs68}, %r122;
	mov.b32 	{%rs69, %rs70}, %r123;
	mov.b32 	{%rs71, %rs72}, %r124;
	// begin inline asm
	mov.u32 %r125, 0x0;
	mov.u32 %r126, 0x0;
	mov.u32 %r127, 0x0;
	mov.u32 %r128, 0x0;
	ld.global.v4.b32 { %r125, %r126, %r127, %r128 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	{%rs73, %rs74}, %r125;
	mov.b32 	{%rs75, %rs76}, %r126;
	mov.b32 	{%rs77, %rs78}, %r127;
	mov.b32 	{%rs79, %rs80}, %r128;
	// begin inline asm
	cvt.f32.bf16 %r129, %rs65;
	// end inline asm
	mov.b32 	%f210, %r129;
	// begin inline asm
	cvt.f32.bf16 %r130, %rs66;
	// end inline asm
	mov.b32 	%f211, %r130;
	// begin inline asm
	cvt.f32.bf16 %r131, %rs67;
	// end inline asm
	mov.b32 	%f212, %r131;
	// begin inline asm
	cvt.f32.bf16 %r132, %rs68;
	// end inline asm
	mov.b32 	%f213, %r132;
	// begin inline asm
	cvt.f32.bf16 %r133, %rs69;
	// end inline asm
	mov.b32 	%f214, %r133;
	// begin inline asm
	cvt.f32.bf16 %r134, %rs70;
	// end inline asm
	mov.b32 	%f215, %r134;
	// begin inline asm
	cvt.f32.bf16 %r135, %rs71;
	// end inline asm
	mov.b32 	%f216, %r135;
	// begin inline asm
	cvt.f32.bf16 %r136, %rs72;
	// end inline asm
	mov.b32 	%f217, %r136;
	// begin inline asm
	cvt.f32.bf16 %r137, %rs73;
	// end inline asm
	mov.b32 	%f218, %r137;
	// begin inline asm
	cvt.f32.bf16 %r138, %rs74;
	// end inline asm
	mov.b32 	%f219, %r138;
	// begin inline asm
	cvt.f32.bf16 %r139, %rs75;
	// end inline asm
	mov.b32 	%f220, %r139;
	// begin inline asm
	cvt.f32.bf16 %r140, %rs76;
	// end inline asm
	mov.b32 	%f221, %r140;
	// begin inline asm
	cvt.f32.bf16 %r141, %rs77;
	// end inline asm
	mov.b32 	%f222, %r141;
	// begin inline asm
	cvt.f32.bf16 %r142, %rs78;
	// end inline asm
	mov.b32 	%f223, %r142;
	// begin inline asm
	cvt.f32.bf16 %r143, %rs79;
	// end inline asm
	mov.b32 	%f224, %r143;
	// begin inline asm
	cvt.f32.bf16 %r144, %rs80;
	// end inline asm
	mov.b32 	%f225, %r144;
	mul.rn.f32 	%f226, %f194, %f210;
	mul.rn.f32 	%f227, %f195, %f211;
	mul.rn.f32 	%f228, %f196, %f212;
	mul.rn.f32 	%f229, %f197, %f213;
	mul.rn.f32 	%f230, %f198, %f214;
	mul.rn.f32 	%f231, %f199, %f215;
	mul.rn.f32 	%f232, %f200, %f216;
	mul.rn.f32 	%f233, %f201, %f217;
	mul.rn.f32 	%f234, %f202, %f218;
	mul.rn.f32 	%f235, %f203, %f219;
	mul.rn.f32 	%f236, %f204, %f220;
	mul.rn.f32 	%f237, %f205, %f221;
	mul.rn.f32 	%f238, %f206, %f222;
	mul.rn.f32 	%f239, %f207, %f223;
	mul.rn.f32 	%f240, %f208, %f224;
	mul.rn.f32 	%f241, %f209, %f225;
	mov.b32 	%r145, %f226;
	// begin inline asm
	cvt.rn.bf16.f32 %rs81, %r145;
	// end inline asm
	mov.b32 	%r146, %f227;
	// begin inline asm
	cvt.rn.bf16.f32 %rs82, %r146;
	// end inline asm
	mov.b32 	%r147, %f228;
	// begin inline asm
	cvt.rn.bf16.f32 %rs83, %r147;
	// end inline asm
	mov.b32 	%r148, %f229;
	// begin inline asm
	cvt.rn.bf16.f32 %rs84, %r148;
	// end inline asm
	mov.b32 	%r149, %f230;
	// begin inline asm
	cvt.rn.bf16.f32 %rs85, %r149;
	// end inline asm
	mov.b32 	%r150, %f231;
	// begin inline asm
	cvt.rn.bf16.f32 %rs86, %r150;
	// end inline asm
	mov.b32 	%r151, %f232;
	// begin inline asm
	cvt.rn.bf16.f32 %rs87, %r151;
	// end inline asm
	mov.b32 	%r152, %f233;
	// begin inline asm
	cvt.rn.bf16.f32 %rs88, %r152;
	// end inline asm
	mov.b32 	%r153, %f234;
	// begin inline asm
	cvt.rn.bf16.f32 %rs89, %r153;
	// end inline asm
	mov.b32 	%r154, %f235;
	// begin inline asm
	cvt.rn.bf16.f32 %rs90, %r154;
	// end inline asm
	mov.b32 	%r155, %f236;
	// begin inline asm
	cvt.rn.bf16.f32 %rs91, %r155;
	// end inline asm
	mov.b32 	%r156, %f237;
	// begin inline asm
	cvt.rn.bf16.f32 %rs92, %r156;
	// end inline asm
	mov.b32 	%r157, %f238;
	// begin inline asm
	cvt.rn.bf16.f32 %rs93, %r157;
	// end inline asm
	mov.b32 	%r158, %f239;
	// begin inline asm
	cvt.rn.bf16.f32 %rs94, %r158;
	// end inline asm
	mov.b32 	%r159, %f240;
	// begin inline asm
	cvt.rn.bf16.f32 %rs95, %r159;
	// end inline asm
	mov.b32 	%r160, %f241;
	// begin inline asm
	cvt.rn.bf16.f32 %rs96, %r160;
	// end inline asm
	add.s64 	%rd47, %rd20, %rd36;
	add.s64 	%rd16, %rd47, %rd33;
	add.s64 	%rd17, %rd16, 1024;
	mov.b32 	%r161, {%rs81, %rs82};
	mov.b32 	%r162, {%rs83, %rs84};
	mov.b32 	%r163, {%rs85, %rs86};
	mov.b32 	%r164, {%rs87, %rs88};
	// begin inline asm
	st.global.v4.b32 [ %rd16 + 0 ], { %r161, %r162, %r163, %r164 };
	// end inline asm
	mov.b32 	%r165, {%rs89, %rs90};
	mov.b32 	%r166, {%rs91, %rs92};
	mov.b32 	%r167, {%rs93, %rs94};
	mov.b32 	%r168, {%rs95, %rs96};
	// begin inline asm
	st.global.v4.b32 [ %rd17 + 0 ], { %r165, %r166, %r167, %r168 };
	// end inline asm
	ret;

}
	// .globl	fusion_332
.visible .entry fusion_332(
	.param .u64 .ptr .align 16 fusion_332_param_0,
	.param .u64 .ptr .align 16 fusion_332_param_1,
	.param .u64 .ptr .align 128 fusion_332_param_2,
	.param .u64 .ptr .align 128 fusion_332_param_3,
	.param .u64 .ptr .align 128 fusion_332_param_4,
	.param .u64 .ptr .align 128 fusion_332_param_5,
	.param .u64 .ptr .align 128 fusion_332_param_6,
	.param .u64 .ptr .align 128 fusion_332_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<129>;
	.reg .b32 	%r<237>;
	.reg .f32 	%f<306>;
	.reg .b64 	%rd<55>;

	ld.param.u64 	%rd22, [fusion_332_param_0];
	ld.param.u64 	%rd23, [fusion_332_param_7];
	cvta.to.global.u64 	%rd24, %rd23;
	ld.param.u64 	%rd25, [fusion_332_param_1];
	ld.param.u64 	%rd26, [fusion_332_param_6];
	cvta.to.global.u64 	%rd27, %rd26;
	ld.param.u64 	%rd28, [fusion_332_param_2];
	ld.param.u64 	%rd29, [fusion_332_param_5];
	cvta.to.global.u64 	%rd30, %rd29;
	ld.param.u64 	%rd31, [fusion_332_param_3];
	ld.param.u64 	%rd32, [fusion_332_param_4];
	cvta.to.global.u64 	%rd33, %rd32;
	cvta.to.global.u64 	%rd34, %rd31;
	cvta.to.global.u64 	%rd35, %rd28;
	cvta.to.global.u64 	%rd36, %rd25;
	cvta.to.global.u64 	%rd17, %rd22;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd37, %r1, 53248;
	add.s64 	%rd38, %rd34, %rd37;
	mov.u32 	%r217, %tid.x;
	and.b32  	%r218, %r217, 31;
	shl.b32 	%r219, %r217, 3;
	and.b32  	%r220, %r219, 248;
	setp.lt.u32 	%p4, %r217, 32;
	selp.b32 	%r221, 0, 256, %p4;
	or.b32  	%r222, %r220, %r221;
	mul.wide.u32 	%rd39, %r222, 2;
	add.s64 	%rd40, %rd38, %rd39;
	add.s64 	%rd1, %rd40, 38912;
	add.s64 	%rd2, %rd40, 39936;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd41, %r1, 1024;
	shl.b64 	%rd42, %rd41, 1;
	add.s64 	%rd43, %rd35, %rd42;
	add.s64 	%rd3, %rd43, %rd39;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	add.s64 	%rd5, %rd40, 40960;
	add.s64 	%rd6, %rd40, 41984;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r50;
	mov.b32 	{%rs35, %rs36}, %r51;
	mov.b32 	{%rs37, %rs38}, %r52;
	mov.b32 	{%rs39, %rs40}, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r54;
	mov.b32 	{%rs43, %rs44}, %r55;
	mov.b32 	{%rs45, %rs46}, %r56;
	mov.b32 	{%rs47, %rs48}, %r57;
	// begin inline asm
	cvt.f32.bf16 %r58, %rs33;
	// end inline asm
	mov.b32 	%f33, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs34;
	// end inline asm
	mov.b32 	%f34, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs35;
	// end inline asm
	mov.b32 	%f35, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs36;
	// end inline asm
	mov.b32 	%f36, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs37;
	// end inline asm
	mov.b32 	%f37, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs38;
	// end inline asm
	mov.b32 	%f38, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs39;
	// end inline asm
	mov.b32 	%f39, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs40;
	// end inline asm
	mov.b32 	%f40, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs41;
	// end inline asm
	mov.b32 	%f41, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs42;
	// end inline asm
	mov.b32 	%f42, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs43;
	// end inline asm
	mov.b32 	%f43, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs44;
	// end inline asm
	mov.b32 	%f44, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs45;
	// end inline asm
	mov.b32 	%f45, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs46;
	// end inline asm
	mov.b32 	%f46, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs47;
	// end inline asm
	mov.b32 	%f47, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs48;
	// end inline asm
	mov.b32 	%f48, %r73;
	add.s64 	%rd44, %rd27, %rd42;
	add.s64 	%rd7, %rd44, %rd39;
	add.s64 	%rd8, %rd7, 1024;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	ld.global.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs49, %rs50}, %r74;
	mov.b32 	{%rs51, %rs52}, %r75;
	mov.b32 	{%rs53, %rs54}, %r76;
	mov.b32 	{%rs55, %rs56}, %r77;
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	ld.global.v4.b32 { %r78, %r79, %r80, %r81 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	{%rs57, %rs58}, %r78;
	mov.b32 	{%rs59, %rs60}, %r79;
	mov.b32 	{%rs61, %rs62}, %r80;
	mov.b32 	{%rs63, %rs64}, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs49;
	// end inline asm
	mov.b32 	%f49, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs50;
	// end inline asm
	mov.b32 	%f50, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs51;
	// end inline asm
	mov.b32 	%f51, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs52;
	// end inline asm
	mov.b32 	%f52, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs53;
	// end inline asm
	mov.b32 	%f53, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs54;
	// end inline asm
	mov.b32 	%f54, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs55;
	// end inline asm
	mov.b32 	%f55, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs56;
	// end inline asm
	mov.b32 	%f56, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs57;
	// end inline asm
	mov.b32 	%f57, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs58;
	// end inline asm
	mov.b32 	%f58, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs59;
	// end inline asm
	mov.b32 	%f59, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs60;
	// end inline asm
	mov.b32 	%f60, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs61;
	// end inline asm
	mov.b32 	%f61, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs62;
	// end inline asm
	mov.b32 	%f62, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs63;
	// end inline asm
	mov.b32 	%f63, %r96;
	// begin inline asm
	cvt.f32.bf16 %r97, %rs64;
	// end inline asm
	mov.b32 	%f64, %r97;
	add.s64 	%rd9, %rd40, 43008;
	add.s64 	%rd10, %rd40, 44032;
	// begin inline asm
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	ld.global.v4.b32 { %r98, %r99, %r100, %r101 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	{%rs65, %rs66}, %r98;
	mov.b32 	{%rs67, %rs68}, %r99;
	mov.b32 	{%rs69, %rs70}, %r100;
	mov.b32 	{%rs71, %rs72}, %r101;
	// begin inline asm
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	ld.global.v4.b32 { %r102, %r103, %r104, %r105 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	{%rs73, %rs74}, %r102;
	mov.b32 	{%rs75, %rs76}, %r103;
	mov.b32 	{%rs77, %rs78}, %r104;
	mov.b32 	{%rs79, %rs80}, %r105;
	// begin inline asm
	cvt.f32.bf16 %r106, %rs65;
	// end inline asm
	mov.b32 	%f65, %r106;
	// begin inline asm
	cvt.f32.bf16 %r107, %rs66;
	// end inline asm
	mov.b32 	%f66, %r107;
	// begin inline asm
	cvt.f32.bf16 %r108, %rs67;
	// end inline asm
	mov.b32 	%f67, %r108;
	// begin inline asm
	cvt.f32.bf16 %r109, %rs68;
	// end inline asm
	mov.b32 	%f68, %r109;
	// begin inline asm
	cvt.f32.bf16 %r110, %rs69;
	// end inline asm
	mov.b32 	%f69, %r110;
	// begin inline asm
	cvt.f32.bf16 %r111, %rs70;
	// end inline asm
	mov.b32 	%f70, %r111;
	// begin inline asm
	cvt.f32.bf16 %r112, %rs71;
	// end inline asm
	mov.b32 	%f71, %r112;
	// begin inline asm
	cvt.f32.bf16 %r113, %rs72;
	// end inline asm
	mov.b32 	%f72, %r113;
	// begin inline asm
	cvt.f32.bf16 %r114, %rs73;
	// end inline asm
	mov.b32 	%f73, %r114;
	// begin inline asm
	cvt.f32.bf16 %r115, %rs74;
	// end inline asm
	mov.b32 	%f74, %r115;
	// begin inline asm
	cvt.f32.bf16 %r116, %rs75;
	// end inline asm
	mov.b32 	%f75, %r116;
	// begin inline asm
	cvt.f32.bf16 %r117, %rs76;
	// end inline asm
	mov.b32 	%f76, %r117;
	// begin inline asm
	cvt.f32.bf16 %r118, %rs77;
	// end inline asm
	mov.b32 	%f77, %r118;
	// begin inline asm
	cvt.f32.bf16 %r119, %rs78;
	// end inline asm
	mov.b32 	%f78, %r119;
	// begin inline asm
	cvt.f32.bf16 %r120, %rs79;
	// end inline asm
	mov.b32 	%f79, %r120;
	// begin inline asm
	cvt.f32.bf16 %r121, %rs80;
	// end inline asm
	mov.b32 	%f80, %r121;
	add.s64 	%rd45, %rd30, %rd42;
	add.s64 	%rd11, %rd45, %rd39;
	add.s64 	%rd12, %rd11, 1024;
	// begin inline asm
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	mov.u32 %r125, 0x0;
	ld.global.v4.b32 { %r122, %r123, %r124, %r125 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	{%rs81, %rs82}, %r122;
	mov.b32 	{%rs83, %rs84}, %r123;
	mov.b32 	{%rs85, %rs86}, %r124;
	mov.b32 	{%rs87, %rs88}, %r125;
	// begin inline asm
	mov.u32 %r126, 0x0;
	mov.u32 %r127, 0x0;
	mov.u32 %r128, 0x0;
	mov.u32 %r129, 0x0;
	ld.global.v4.b32 { %r126, %r127, %r128, %r129 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	{%rs89, %rs90}, %r126;
	mov.b32 	{%rs91, %rs92}, %r127;
	mov.b32 	{%rs93, %rs94}, %r128;
	mov.b32 	{%rs95, %rs96}, %r129;
	// begin inline asm
	cvt.f32.bf16 %r130, %rs81;
	// end inline asm
	mov.b32 	%f81, %r130;
	// begin inline asm
	cvt.f32.bf16 %r131, %rs82;
	// end inline asm
	mov.b32 	%f82, %r131;
	// begin inline asm
	cvt.f32.bf16 %r132, %rs83;
	// end inline asm
	mov.b32 	%f83, %r132;
	// begin inline asm
	cvt.f32.bf16 %r133, %rs84;
	// end inline asm
	mov.b32 	%f84, %r133;
	// begin inline asm
	cvt.f32.bf16 %r134, %rs85;
	// end inline asm
	mov.b32 	%f85, %r134;
	// begin inline asm
	cvt.f32.bf16 %r135, %rs86;
	// end inline asm
	mov.b32 	%f86, %r135;
	// begin inline asm
	cvt.f32.bf16 %r136, %rs87;
	// end inline asm
	mov.b32 	%f87, %r136;
	// begin inline asm
	cvt.f32.bf16 %r137, %rs88;
	// end inline asm
	mov.b32 	%f88, %r137;
	// begin inline asm
	cvt.f32.bf16 %r138, %rs89;
	// end inline asm
	mov.b32 	%f89, %r138;
	// begin inline asm
	cvt.f32.bf16 %r139, %rs90;
	// end inline asm
	mov.b32 	%f90, %r139;
	// begin inline asm
	cvt.f32.bf16 %r140, %rs91;
	// end inline asm
	mov.b32 	%f91, %r140;
	// begin inline asm
	cvt.f32.bf16 %r141, %rs92;
	// end inline asm
	mov.b32 	%f92, %r141;
	// begin inline asm
	cvt.f32.bf16 %r142, %rs93;
	// end inline asm
	mov.b32 	%f93, %r142;
	// begin inline asm
	cvt.f32.bf16 %r143, %rs94;
	// end inline asm
	mov.b32 	%f94, %r143;
	// begin inline asm
	cvt.f32.bf16 %r144, %rs95;
	// end inline asm
	mov.b32 	%f95, %r144;
	// begin inline asm
	cvt.f32.bf16 %r145, %rs96;
	// end inline asm
	mov.b32 	%f96, %r145;
	shl.b64 	%rd46, %rd41, 2;
	add.s64 	%rd47, %rd33, %rd46;
	mul.wide.u32 	%rd48, %r222, 4;
	add.s64 	%rd13, %rd47, %rd48;
	add.s64 	%rd14, %rd13, 16;
	add.s64 	%rd15, %rd13, 2048;
	add.s64 	%rd16, %rd13, 2064;
	// begin inline asm
	mov.u32 %r146, 0x0;
	mov.u32 %r147, 0x0;
	mov.u32 %r148, 0x0;
	mov.u32 %r149, 0x0;
	ld.global.v4.b32 { %r146, %r147, %r148, %r149 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f97, %r146;
	mov.b32 	%f98, %r147;
	mov.b32 	%f99, %r148;
	mov.b32 	%f100, %r149;
	// begin inline asm
	mov.u32 %r150, 0x0;
	mov.u32 %r151, 0x0;
	mov.u32 %r152, 0x0;
	mov.u32 %r153, 0x0;
	ld.global.v4.b32 { %r150, %r151, %r152, %r153 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f101, %r150;
	mov.b32 	%f102, %r151;
	mov.b32 	%f103, %r152;
	mov.b32 	%f104, %r153;
	// begin inline asm
	mov.u32 %r154, 0x0;
	mov.u32 %r155, 0x0;
	mov.u32 %r156, 0x0;
	mov.u32 %r157, 0x0;
	ld.global.v4.b32 { %r154, %r155, %r156, %r157 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f105, %r154;
	mov.b32 	%f106, %r155;
	mov.b32 	%f107, %r156;
	mov.b32 	%f108, %r157;
	// begin inline asm
	mov.u32 %r158, 0x0;
	mov.u32 %r159, 0x0;
	mov.u32 %r160, 0x0;
	mov.u32 %r161, 0x0;
	ld.global.v4.b32 { %r158, %r159, %r160, %r161 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f109, %r158;
	mov.b32 	%f110, %r159;
	mov.b32 	%f111, %r160;
	mov.b32 	%f112, %r161;
	add.rn.f32 	%f113, %f81, %f97;
	add.rn.f32 	%f114, %f82, %f98;
	add.rn.f32 	%f115, %f83, %f99;
	add.rn.f32 	%f116, %f84, %f100;
	add.rn.f32 	%f117, %f85, %f101;
	add.rn.f32 	%f118, %f86, %f102;
	add.rn.f32 	%f119, %f87, %f103;
	add.rn.f32 	%f120, %f88, %f104;
	add.rn.f32 	%f121, %f89, %f105;
	add.rn.f32 	%f122, %f90, %f106;
	add.rn.f32 	%f123, %f91, %f107;
	add.rn.f32 	%f124, %f92, %f108;
	add.rn.f32 	%f125, %f93, %f109;
	add.rn.f32 	%f126, %f94, %f110;
	add.rn.f32 	%f127, %f95, %f111;
	add.rn.f32 	%f128, %f96, %f112;
	add.rn.f32 	%f129, %f65, %f113;
	add.rn.f32 	%f130, %f66, %f114;
	add.rn.f32 	%f131, %f67, %f115;
	add.rn.f32 	%f132, %f68, %f116;
	add.rn.f32 	%f133, %f69, %f117;
	add.rn.f32 	%f134, %f70, %f118;
	add.rn.f32 	%f135, %f71, %f119;
	add.rn.f32 	%f136, %f72, %f120;
	add.rn.f32 	%f137, %f73, %f121;
	add.rn.f32 	%f138, %f74, %f122;
	add.rn.f32 	%f139, %f75, %f123;
	add.rn.f32 	%f140, %f76, %f124;
	add.rn.f32 	%f141, %f77, %f125;
	add.rn.f32 	%f142, %f78, %f126;
	add.rn.f32 	%f143, %f79, %f127;
	add.rn.f32 	%f144, %f80, %f128;
	add.rn.f32 	%f145, %f49, %f129;
	add.rn.f32 	%f146, %f50, %f130;
	add.rn.f32 	%f147, %f51, %f131;
	add.rn.f32 	%f148, %f52, %f132;
	add.rn.f32 	%f149, %f53, %f133;
	add.rn.f32 	%f150, %f54, %f134;
	add.rn.f32 	%f151, %f55, %f135;
	add.rn.f32 	%f152, %f56, %f136;
	add.rn.f32 	%f153, %f57, %f137;
	add.rn.f32 	%f154, %f58, %f138;
	add.rn.f32 	%f155, %f59, %f139;
	add.rn.f32 	%f156, %f60, %f140;
	add.rn.f32 	%f157, %f61, %f141;
	add.rn.f32 	%f158, %f62, %f142;
	add.rn.f32 	%f159, %f63, %f143;
	add.rn.f32 	%f160, %f64, %f144;
	add.rn.f32 	%f161, %f33, %f145;
	add.rn.f32 	%f162, %f34, %f146;
	add.rn.f32 	%f163, %f35, %f147;
	add.rn.f32 	%f164, %f36, %f148;
	add.rn.f32 	%f165, %f37, %f149;
	add.rn.f32 	%f166, %f38, %f150;
	add.rn.f32 	%f167, %f39, %f151;
	add.rn.f32 	%f168, %f40, %f152;
	add.rn.f32 	%f169, %f41, %f153;
	add.rn.f32 	%f170, %f42, %f154;
	add.rn.f32 	%f171, %f43, %f155;
	add.rn.f32 	%f172, %f44, %f156;
	add.rn.f32 	%f173, %f45, %f157;
	add.rn.f32 	%f174, %f46, %f158;
	add.rn.f32 	%f175, %f47, %f159;
	add.rn.f32 	%f176, %f48, %f160;
	add.rn.f32 	%f177, %f17, %f161;
	add.rn.f32 	%f178, %f18, %f162;
	add.rn.f32 	%f179, %f19, %f163;
	add.rn.f32 	%f180, %f20, %f164;
	add.rn.f32 	%f181, %f21, %f165;
	add.rn.f32 	%f182, %f22, %f166;
	add.rn.f32 	%f183, %f23, %f167;
	add.rn.f32 	%f184, %f24, %f168;
	add.rn.f32 	%f185, %f25, %f169;
	add.rn.f32 	%f186, %f26, %f170;
	add.rn.f32 	%f187, %f27, %f171;
	add.rn.f32 	%f188, %f28, %f172;
	add.rn.f32 	%f189, %f29, %f173;
	add.rn.f32 	%f190, %f30, %f174;
	add.rn.f32 	%f191, %f31, %f175;
	add.rn.f32 	%f192, %f32, %f176;
	add.rn.f32 	%f193, %f1, %f177;
	add.rn.f32 	%f194, %f2, %f178;
	add.rn.f32 	%f195, %f3, %f179;
	add.rn.f32 	%f196, %f4, %f180;
	add.rn.f32 	%f197, %f5, %f181;
	add.rn.f32 	%f198, %f6, %f182;
	add.rn.f32 	%f199, %f7, %f183;
	add.rn.f32 	%f200, %f8, %f184;
	add.rn.f32 	%f201, %f9, %f185;
	add.rn.f32 	%f202, %f10, %f186;
	add.rn.f32 	%f203, %f11, %f187;
	add.rn.f32 	%f204, %f12, %f188;
	add.rn.f32 	%f205, %f13, %f189;
	add.rn.f32 	%f206, %f14, %f190;
	add.rn.f32 	%f207, %f15, %f191;
	add.rn.f32 	%f208, %f16, %f192;
	mul.rn.f32 	%f209, %f193, %f193;
	mul.rn.f32 	%f210, %f194, %f194;
	mul.rn.f32 	%f211, %f195, %f195;
	mul.rn.f32 	%f212, %f196, %f196;
	mul.rn.f32 	%f213, %f197, %f197;
	mul.rn.f32 	%f214, %f198, %f198;
	mul.rn.f32 	%f215, %f199, %f199;
	mul.rn.f32 	%f216, %f200, %f200;
	mul.rn.f32 	%f217, %f201, %f201;
	mul.rn.f32 	%f218, %f202, %f202;
	mul.rn.f32 	%f219, %f203, %f203;
	mul.rn.f32 	%f220, %f204, %f204;
	mul.rn.f32 	%f221, %f205, %f205;
	mul.rn.f32 	%f222, %f206, %f206;
	mul.rn.f32 	%f223, %f207, %f207;
	mul.rn.f32 	%f224, %f208, %f208;
	add.rn.f32 	%f225, %f209, %f210;
	add.rn.f32 	%f226, %f211, %f225;
	add.rn.f32 	%f227, %f212, %f226;
	add.rn.f32 	%f228, %f213, %f227;
	add.rn.f32 	%f229, %f214, %f228;
	add.rn.f32 	%f230, %f215, %f229;
	add.rn.f32 	%f231, %f216, %f230;
	add.rn.f32 	%f232, %f217, %f231;
	add.rn.f32 	%f233, %f218, %f232;
	add.rn.f32 	%f234, %f219, %f233;
	add.rn.f32 	%f235, %f220, %f234;
	add.rn.f32 	%f236, %f221, %f235;
	add.rn.f32 	%f237, %f222, %f236;
	add.rn.f32 	%f238, %f223, %f237;
	add.rn.f32 	%f239, %f224, %f238;
	mov.b32 	%r223, %f239;
	shfl.sync.bfly.b32	%r224, %r223, 16, 31, -1;
	mov.b32 	%f240, %r224;
	add.rn.f32 	%f241, %f239, %f240;
	mov.b32 	%r225, %f241;
	shfl.sync.bfly.b32	%r226, %r225, 8, 31, -1;
	mov.b32 	%f242, %r226;
	add.rn.f32 	%f243, %f241, %f242;
	mov.b32 	%r227, %f243;
	shfl.sync.bfly.b32	%r228, %r227, 4, 31, -1;
	mov.b32 	%f244, %r228;
	add.rn.f32 	%f245, %f243, %f244;
	mov.b32 	%r229, %f245;
	shfl.sync.bfly.b32	%r230, %r229, 2, 31, -1;
	mov.b32 	%f246, %r230;
	add.rn.f32 	%f247, %f245, %f246;
	mov.b32 	%r231, %f247;
	shfl.sync.bfly.b32	%r232, %r231, 1, 31, -1;
	mov.b32 	%f248, %r232;
	add.rn.f32 	%f249, %f247, %f248;
	setp.eq.s32 	%p1, %r218, 0;
	shr.u32 	%r233, %r217, 3;
	and.b32  	%r234, %r233, 4;
	cvt.u64.u32 	%rd49, %r234;
	mov.u64 	%rd50, global_smem;
	add.s64 	%rd51, %rd50, %rd49;
	mov.b32 	%r163, %f249;
	cvt.u32.u64 	%r162, %rd51;
	// begin inline asm
	@%p1 st.shared.b32 [ %r162 + 0 ], %r163;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r217, 2;
	shl.b32 	%r235, %r217, 2;
	cvt.u64.u32 	%rd52, %r235;
	add.s64 	%rd53, %rd50, %rd52;
	cvt.u32.u64 	%r165, %rd53;
	// begin inline asm
	@%p2 ld.shared.b32 %r164, [ %r165 + 0 ];
	// end inline asm
	mov.b32 	%f250, %r164;
	shfl.sync.bfly.b32	%r236, %r164, 1, 31, -1;
	mov.b32 	%f251, %r236;
	add.rn.f32 	%f252, %f250, %f251;
	setp.eq.s32 	%p3, %r217, 0;
	mov.b32 	%r167, %f252;
	// begin inline asm
	@%p3 st.shared.b32 [ %r165 + 0 ], %r167;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f253, [global_smem];
	mul.rn.f32 	%f254, %f253, 0f3A800000;
	// begin inline asm
	mov.u32 %r168, 0x0;
	ld.global.b32 { %r168 }, [ %rd17 + 0 ];
	// end inline asm
	mov.b32 	%f255, %r168;
	add.rn.f32 	%f256, %f254, %f255;
	rsqrt.approx.f32 	%f257, %f256;
	mul.rn.f32 	%f258, %f193, %f257;
	mul.rn.f32 	%f259, %f194, %f257;
	mul.rn.f32 	%f260, %f195, %f257;
	mul.rn.f32 	%f261, %f196, %f257;
	mul.rn.f32 	%f262, %f197, %f257;
	mul.rn.f32 	%f263, %f198, %f257;
	mul.rn.f32 	%f264, %f199, %f257;
	mul.rn.f32 	%f265, %f200, %f257;
	mul.rn.f32 	%f266, %f201, %f257;
	mul.rn.f32 	%f267, %f202, %f257;
	mul.rn.f32 	%f268, %f203, %f257;
	mul.rn.f32 	%f269, %f204, %f257;
	mul.rn.f32 	%f270, %f205, %f257;
	mul.rn.f32 	%f271, %f206, %f257;
	mul.rn.f32 	%f272, %f207, %f257;
	mul.rn.f32 	%f273, %f208, %f257;
	add.s64 	%rd18, %rd36, %rd39;
	add.s64 	%rd19, %rd18, 1024;
	// begin inline asm
	mov.u32 %r169, 0x0;
	mov.u32 %r170, 0x0;
	mov.u32 %r171, 0x0;
	mov.u32 %r172, 0x0;
	ld.global.v4.b32 { %r169, %r170, %r171, %r172 }, [ %rd18 + 0 ];
	// end inline asm
	mov.b32 	{%rs97, %rs98}, %r169;
	mov.b32 	{%rs99, %rs100}, %r170;
	mov.b32 	{%rs101, %rs102}, %r171;
	mov.b32 	{%rs103, %rs104}, %r172;
	// begin inline asm
	mov.u32 %r173, 0x0;
	mov.u32 %r174, 0x0;
	mov.u32 %r175, 0x0;
	mov.u32 %r176, 0x0;
	ld.global.v4.b32 { %r173, %r174, %r175, %r176 }, [ %rd19 + 0 ];
	// end inline asm
	mov.b32 	{%rs105, %rs106}, %r173;
	mov.b32 	{%rs107, %rs108}, %r174;
	mov.b32 	{%rs109, %rs110}, %r175;
	mov.b32 	{%rs111, %rs112}, %r176;
	// begin inline asm
	cvt.f32.bf16 %r177, %rs97;
	// end inline asm
	mov.b32 	%f274, %r177;
	// begin inline asm
	cvt.f32.bf16 %r178, %rs98;
	// end inline asm
	mov.b32 	%f275, %r178;
	// begin inline asm
	cvt.f32.bf16 %r179, %rs99;
	// end inline asm
	mov.b32 	%f276, %r179;
	// begin inline asm
	cvt.f32.bf16 %r180, %rs100;
	// end inline asm
	mov.b32 	%f277, %r180;
	// begin inline asm
	cvt.f32.bf16 %r181, %rs101;
	// end inline asm
	mov.b32 	%f278, %r181;
	// begin inline asm
	cvt.f32.bf16 %r182, %rs102;
	// end inline asm
	mov.b32 	%f279, %r182;
	// begin inline asm
	cvt.f32.bf16 %r183, %rs103;
	// end inline asm
	mov.b32 	%f280, %r183;
	// begin inline asm
	cvt.f32.bf16 %r184, %rs104;
	// end inline asm
	mov.b32 	%f281, %r184;
	// begin inline asm
	cvt.f32.bf16 %r185, %rs105;
	// end inline asm
	mov.b32 	%f282, %r185;
	// begin inline asm
	cvt.f32.bf16 %r186, %rs106;
	// end inline asm
	mov.b32 	%f283, %r186;
	// begin inline asm
	cvt.f32.bf16 %r187, %rs107;
	// end inline asm
	mov.b32 	%f284, %r187;
	// begin inline asm
	cvt.f32.bf16 %r188, %rs108;
	// end inline asm
	mov.b32 	%f285, %r188;
	// begin inline asm
	cvt.f32.bf16 %r189, %rs109;
	// end inline asm
	mov.b32 	%f286, %r189;
	// begin inline asm
	cvt.f32.bf16 %r190, %rs110;
	// end inline asm
	mov.b32 	%f287, %r190;
	// begin inline asm
	cvt.f32.bf16 %r191, %rs111;
	// end inline asm
	mov.b32 	%f288, %r191;
	// begin inline asm
	cvt.f32.bf16 %r192, %rs112;
	// end inline asm
	mov.b32 	%f289, %r192;
	mul.rn.f32 	%f290, %f258, %f274;
	mul.rn.f32 	%f291, %f259, %f275;
	mul.rn.f32 	%f292, %f260, %f276;
	mul.rn.f32 	%f293, %f261, %f277;
	mul.rn.f32 	%f294, %f262, %f278;
	mul.rn.f32 	%f295, %f263, %f279;
	mul.rn.f32 	%f296, %f264, %f280;
	mul.rn.f32 	%f297, %f265, %f281;
	mul.rn.f32 	%f298, %f266, %f282;
	mul.rn.f32 	%f299, %f267, %f283;
	mul.rn.f32 	%f300, %f268, %f284;
	mul.rn.f32 	%f301, %f269, %f285;
	mul.rn.f32 	%f302, %f270, %f286;
	mul.rn.f32 	%f303, %f271, %f287;
	mul.rn.f32 	%f304, %f272, %f288;
	mul.rn.f32 	%f305, %f273, %f289;
	mov.b32 	%r193, %f290;
	// begin inline asm
	cvt.rn.bf16.f32 %rs113, %r193;
	// end inline asm
	mov.b32 	%r194, %f291;
	// begin inline asm
	cvt.rn.bf16.f32 %rs114, %r194;
	// end inline asm
	mov.b32 	%r195, %f292;
	// begin inline asm
	cvt.rn.bf16.f32 %rs115, %r195;
	// end inline asm
	mov.b32 	%r196, %f293;
	// begin inline asm
	cvt.rn.bf16.f32 %rs116, %r196;
	// end inline asm
	mov.b32 	%r197, %f294;
	// begin inline asm
	cvt.rn.bf16.f32 %rs117, %r197;
	// end inline asm
	mov.b32 	%r198, %f295;
	// begin inline asm
	cvt.rn.bf16.f32 %rs118, %r198;
	// end inline asm
	mov.b32 	%r199, %f296;
	// begin inline asm
	cvt.rn.bf16.f32 %rs119, %r199;
	// end inline asm
	mov.b32 	%r200, %f297;
	// begin inline asm
	cvt.rn.bf16.f32 %rs120, %r200;
	// end inline asm
	mov.b32 	%r201, %f298;
	// begin inline asm
	cvt.rn.bf16.f32 %rs121, %r201;
	// end inline asm
	mov.b32 	%r202, %f299;
	// begin inline asm
	cvt.rn.bf16.f32 %rs122, %r202;
	// end inline asm
	mov.b32 	%r203, %f300;
	// begin inline asm
	cvt.rn.bf16.f32 %rs123, %r203;
	// end inline asm
	mov.b32 	%r204, %f301;
	// begin inline asm
	cvt.rn.bf16.f32 %rs124, %r204;
	// end inline asm
	mov.b32 	%r205, %f302;
	// begin inline asm
	cvt.rn.bf16.f32 %rs125, %r205;
	// end inline asm
	mov.b32 	%r206, %f303;
	// begin inline asm
	cvt.rn.bf16.f32 %rs126, %r206;
	// end inline asm
	mov.b32 	%r207, %f304;
	// begin inline asm
	cvt.rn.bf16.f32 %rs127, %r207;
	// end inline asm
	mov.b32 	%r208, %f305;
	// begin inline asm
	cvt.rn.bf16.f32 %rs128, %r208;
	// end inline asm
	add.s64 	%rd54, %rd24, %rd42;
	add.s64 	%rd20, %rd54, %rd39;
	add.s64 	%rd21, %rd20, 1024;
	mov.b32 	%r209, {%rs113, %rs114};
	mov.b32 	%r210, {%rs115, %rs116};
	mov.b32 	%r211, {%rs117, %rs118};
	mov.b32 	%r212, {%rs119, %rs120};
	// begin inline asm
	st.global.v4.b32 [ %rd20 + 0 ], { %r209, %r210, %r211, %r212 };
	// end inline asm
	mov.b32 	%r213, {%rs121, %rs122};
	mov.b32 	%r214, {%rs123, %rs124};
	mov.b32 	%r215, {%rs125, %rs126};
	mov.b32 	%r216, {%rs127, %rs128};
	// begin inline asm
	st.global.v4.b32 [ %rd21 + 0 ], { %r213, %r214, %r215, %r216 };
	// end inline asm
	ret;

}
	// .globl	loop_add_fusion_1
.visible .entry loop_add_fusion_1(
	.param .u64 .ptr .align 128 loop_add_fusion_1_param_0,
	.param .u64 .ptr .align 128 loop_add_fusion_1_param_1,
	.param .u64 .ptr .align 128 loop_add_fusion_1_param_2,
	.param .u64 .ptr .align 128 loop_add_fusion_1_param_3,
	.param .u64 .ptr .align 128 loop_add_fusion_1_param_4,
	.param .u64 .ptr .align 128 loop_add_fusion_1_param_5
)
.reqntid 128, 1, 1
{
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<9>;
	.reg .f32 	%f<18>;
	.reg .b64 	%rd<25>;

	ld.param.u64 	%rd1, [loop_add_fusion_1_param_0];
	ld.param.u64 	%rd2, [loop_add_fusion_1_param_5];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.param.u64 	%rd4, [loop_add_fusion_1_param_1];
	ld.param.u64 	%rd5, [loop_add_fusion_1_param_4];
	cvta.to.global.u64 	%rd6, %rd5;
	ld.param.u64 	%rd7, [loop_add_fusion_1_param_2];
	ld.param.u64 	%rd8, [loop_add_fusion_1_param_3];
	cvta.to.global.u64 	%rd9, %rd8;
	cvta.to.global.u64 	%rd10, %rd7;
	cvta.to.global.u64 	%rd11, %rd4;
	cvta.to.global.u64 	%rd12, %rd1;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shr.u32 	%r3, %r2, 3;
	shl.b32 	%r4, %r2, 7;
	and.b32  	%r5, %r4, 896;
	or.b32  	%r6, %r5, %r1;
	or.b32  	%r7, %r4, %r1;
	mul.wide.u32 	%rd13, %r7, 2;
	add.s64 	%rd14, %rd6, %rd13;
	ld.global.nc.u16 	%rs1, [%rd14];
	cvt.f32.bf16 	%f1, %rs1;
	mul.wide.u32 	%rd15, %r7, 4;
	add.s64 	%rd16, %rd9, %rd15;
	ld.global.f32 	%f2, [%rd16];
	add.s64 	%rd17, %rd3, %rd13;
	ld.global.nc.u16 	%rs2, [%rd17];
	mul.lo.s32 	%r8, %r3, 26624;
	cvt.u64.u32 	%rd18, %r6;
	cvt.u64.u32 	%rd19, %r8;
	add.s64 	%rd20, %rd19, %rd18;
	shl.b64 	%rd21, %rd20, 1;
	add.s64 	%rd22, %rd12, %rd21;
	ld.global.nc.u16 	%rs3, [%rd22+43008];
	cvt.f32.bf16 	%f3, %rs3;
	add.rn.f32 	%f4, %f2, %f1;
	cvt.f32.bf16 	%f5, %rs2;
	add.rn.f32 	%f6, %f4, %f3;
	add.s64 	%rd23, %rd10, %rd13;
	ld.global.nc.u16 	%rs4, [%rd23];
	ld.global.nc.u16 	%rs5, [%rd22+40960];
	cvt.f32.bf16 	%f7, %rs5;
	add.rn.f32 	%f8, %f6, %f5;
	cvt.f32.bf16 	%f9, %rs4;
	add.rn.f32 	%f10, %f8, %f7;
	add.s64 	%rd24, %rd11, %rd13;
	ld.global.nc.u16 	%rs6, [%rd24];
	ld.global.nc.u16 	%rs7, [%rd22+38912];
	cvt.f32.bf16 	%f11, %rs7;
	add.rn.f32 	%f12, %f10, %f9;
	cvt.f32.bf16 	%f13, %rs6;
	add.rn.f32 	%f14, %f12, %f11;
	ld.global.nc.u16 	%rs8, [%rd22+36864];
	cvt.f32.bf16 	%f15, %rs8;
	add.rn.f32 	%f16, %f14, %f13;
	add.rn.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd16], %f17;
	ret;

}
	// .globl	fusion_334
.visible .entry fusion_334(
	.param .u64 .ptr .align 16 fusion_334_param_0,
	.param .u64 .ptr .align 16 fusion_334_param_1,
	.param .u64 .ptr .align 128 fusion_334_param_2,
	.param .u64 .ptr .align 128 fusion_334_param_3,
	.param .u64 .ptr .align 128 fusion_334_param_4,
	.param .u64 .ptr .align 128 fusion_334_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<65>;
	.reg .b32 	%r<141>;
	.reg .f32 	%f<178>;
	.reg .b64 	%rd<41>;

	ld.param.u64 	%rd14, [fusion_334_param_0];
	ld.param.u64 	%rd15, [fusion_334_param_5];
	cvta.to.global.u64 	%rd16, %rd15;
	ld.param.u64 	%rd17, [fusion_334_param_1];
	ld.param.u64 	%rd18, [fusion_334_param_4];
	cvta.to.global.u64 	%rd19, %rd18;
	ld.param.u64 	%rd20, [fusion_334_param_2];
	ld.param.u64 	%rd21, [fusion_334_param_3];
	cvta.to.global.u64 	%rd22, %rd21;
	cvta.to.global.u64 	%rd23, %rd20;
	cvta.to.global.u64 	%rd24, %rd17;
	cvta.to.global.u64 	%rd9, %rd14;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd25, %r1, 53248;
	add.s64 	%rd26, %rd19, %rd25;
	mov.u32 	%r121, %tid.x;
	and.b32  	%r122, %r121, 31;
	shl.b32 	%r123, %r121, 3;
	and.b32  	%r124, %r123, 248;
	setp.lt.u32 	%p4, %r121, 32;
	selp.b32 	%r125, 0, 256, %p4;
	or.b32  	%r126, %r124, %r125;
	mul.wide.u32 	%rd27, %r126, 2;
	add.s64 	%rd28, %rd26, %rd27;
	add.s64 	%rd1, %rd28, 34816;
	add.s64 	%rd2, %rd28, 35840;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd29, %r1, 1024;
	shl.b64 	%rd30, %rd29, 1;
	add.s64 	%rd31, %rd22, %rd30;
	add.s64 	%rd3, %rd31, %rd27;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	shl.b64 	%rd32, %rd29, 2;
	add.s64 	%rd33, %rd23, %rd32;
	mul.wide.u32 	%rd34, %r126, 4;
	add.s64 	%rd5, %rd33, %rd34;
	add.s64 	%rd6, %rd5, 16;
	add.s64 	%rd7, %rd5, 2048;
	add.s64 	%rd8, %rd5, 2064;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r50;
	mov.b32 	%f34, %r51;
	mov.b32 	%f35, %r52;
	mov.b32 	%f36, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f37, %r54;
	mov.b32 	%f38, %r55;
	mov.b32 	%f39, %r56;
	mov.b32 	%f40, %r57;
	// begin inline asm
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	ld.global.v4.b32 { %r58, %r59, %r60, %r61 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r58;
	mov.b32 	%f42, %r59;
	mov.b32 	%f43, %r60;
	mov.b32 	%f44, %r61;
	// begin inline asm
	mov.u32 %r62, 0x0;
	mov.u32 %r63, 0x0;
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	ld.global.v4.b32 { %r62, %r63, %r64, %r65 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f45, %r62;
	mov.b32 	%f46, %r63;
	mov.b32 	%f47, %r64;
	mov.b32 	%f48, %r65;
	add.rn.f32 	%f49, %f17, %f33;
	add.rn.f32 	%f50, %f18, %f34;
	add.rn.f32 	%f51, %f19, %f35;
	add.rn.f32 	%f52, %f20, %f36;
	add.rn.f32 	%f53, %f21, %f37;
	add.rn.f32 	%f54, %f22, %f38;
	add.rn.f32 	%f55, %f23, %f39;
	add.rn.f32 	%f56, %f24, %f40;
	add.rn.f32 	%f57, %f25, %f41;
	add.rn.f32 	%f58, %f26, %f42;
	add.rn.f32 	%f59, %f27, %f43;
	add.rn.f32 	%f60, %f28, %f44;
	add.rn.f32 	%f61, %f29, %f45;
	add.rn.f32 	%f62, %f30, %f46;
	add.rn.f32 	%f63, %f31, %f47;
	add.rn.f32 	%f64, %f32, %f48;
	add.rn.f32 	%f65, %f1, %f49;
	add.rn.f32 	%f66, %f2, %f50;
	add.rn.f32 	%f67, %f3, %f51;
	add.rn.f32 	%f68, %f4, %f52;
	add.rn.f32 	%f69, %f5, %f53;
	add.rn.f32 	%f70, %f6, %f54;
	add.rn.f32 	%f71, %f7, %f55;
	add.rn.f32 	%f72, %f8, %f56;
	add.rn.f32 	%f73, %f9, %f57;
	add.rn.f32 	%f74, %f10, %f58;
	add.rn.f32 	%f75, %f11, %f59;
	add.rn.f32 	%f76, %f12, %f60;
	add.rn.f32 	%f77, %f13, %f61;
	add.rn.f32 	%f78, %f14, %f62;
	add.rn.f32 	%f79, %f15, %f63;
	add.rn.f32 	%f80, %f16, %f64;
	mul.rn.f32 	%f81, %f65, %f65;
	mul.rn.f32 	%f82, %f66, %f66;
	mul.rn.f32 	%f83, %f67, %f67;
	mul.rn.f32 	%f84, %f68, %f68;
	mul.rn.f32 	%f85, %f69, %f69;
	mul.rn.f32 	%f86, %f70, %f70;
	mul.rn.f32 	%f87, %f71, %f71;
	mul.rn.f32 	%f88, %f72, %f72;
	mul.rn.f32 	%f89, %f73, %f73;
	mul.rn.f32 	%f90, %f74, %f74;
	mul.rn.f32 	%f91, %f75, %f75;
	mul.rn.f32 	%f92, %f76, %f76;
	mul.rn.f32 	%f93, %f77, %f77;
	mul.rn.f32 	%f94, %f78, %f78;
	mul.rn.f32 	%f95, %f79, %f79;
	mul.rn.f32 	%f96, %f80, %f80;
	add.rn.f32 	%f97, %f81, %f82;
	add.rn.f32 	%f98, %f83, %f97;
	add.rn.f32 	%f99, %f84, %f98;
	add.rn.f32 	%f100, %f85, %f99;
	add.rn.f32 	%f101, %f86, %f100;
	add.rn.f32 	%f102, %f87, %f101;
	add.rn.f32 	%f103, %f88, %f102;
	add.rn.f32 	%f104, %f89, %f103;
	add.rn.f32 	%f105, %f90, %f104;
	add.rn.f32 	%f106, %f91, %f105;
	add.rn.f32 	%f107, %f92, %f106;
	add.rn.f32 	%f108, %f93, %f107;
	add.rn.f32 	%f109, %f94, %f108;
	add.rn.f32 	%f110, %f95, %f109;
	add.rn.f32 	%f111, %f96, %f110;
	mov.b32 	%r127, %f111;
	shfl.sync.bfly.b32	%r128, %r127, 16, 31, -1;
	mov.b32 	%f112, %r128;
	add.rn.f32 	%f113, %f111, %f112;
	mov.b32 	%r129, %f113;
	shfl.sync.bfly.b32	%r130, %r129, 8, 31, -1;
	mov.b32 	%f114, %r130;
	add.rn.f32 	%f115, %f113, %f114;
	mov.b32 	%r131, %f115;
	shfl.sync.bfly.b32	%r132, %r131, 4, 31, -1;
	mov.b32 	%f116, %r132;
	add.rn.f32 	%f117, %f115, %f116;
	mov.b32 	%r133, %f117;
	shfl.sync.bfly.b32	%r134, %r133, 2, 31, -1;
	mov.b32 	%f118, %r134;
	add.rn.f32 	%f119, %f117, %f118;
	mov.b32 	%r135, %f119;
	shfl.sync.bfly.b32	%r136, %r135, 1, 31, -1;
	mov.b32 	%f120, %r136;
	add.rn.f32 	%f121, %f119, %f120;
	setp.eq.s32 	%p1, %r122, 0;
	shr.u32 	%r137, %r121, 3;
	and.b32  	%r138, %r137, 4;
	cvt.u64.u32 	%rd35, %r138;
	mov.u64 	%rd36, global_smem;
	add.s64 	%rd37, %rd36, %rd35;
	mov.b32 	%r67, %f121;
	cvt.u32.u64 	%r66, %rd37;
	// begin inline asm
	@%p1 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r121, 2;
	shl.b32 	%r139, %r121, 2;
	cvt.u64.u32 	%rd38, %r139;
	add.s64 	%rd39, %rd36, %rd38;
	cvt.u32.u64 	%r69, %rd39;
	// begin inline asm
	@%p2 ld.shared.b32 %r68, [ %r69 + 0 ];
	// end inline asm
	mov.b32 	%f122, %r68;
	shfl.sync.bfly.b32	%r140, %r68, 1, 31, -1;
	mov.b32 	%f123, %r140;
	add.rn.f32 	%f124, %f122, %f123;
	setp.eq.s32 	%p3, %r121, 0;
	mov.b32 	%r71, %f124;
	// begin inline asm
	@%p3 st.shared.b32 [ %r69 + 0 ], %r71;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f125, [global_smem];
	mul.rn.f32 	%f126, %f125, 0f3A800000;
	// begin inline asm
	mov.u32 %r72, 0x0;
	ld.global.b32 { %r72 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f127, %r72;
	add.rn.f32 	%f128, %f126, %f127;
	rsqrt.approx.f32 	%f129, %f128;
	mul.rn.f32 	%f130, %f65, %f129;
	mul.rn.f32 	%f131, %f66, %f129;
	mul.rn.f32 	%f132, %f67, %f129;
	mul.rn.f32 	%f133, %f68, %f129;
	mul.rn.f32 	%f134, %f69, %f129;
	mul.rn.f32 	%f135, %f70, %f129;
	mul.rn.f32 	%f136, %f71, %f129;
	mul.rn.f32 	%f137, %f72, %f129;
	mul.rn.f32 	%f138, %f73, %f129;
	mul.rn.f32 	%f139, %f74, %f129;
	mul.rn.f32 	%f140, %f75, %f129;
	mul.rn.f32 	%f141, %f76, %f129;
	mul.rn.f32 	%f142, %f77, %f129;
	mul.rn.f32 	%f143, %f78, %f129;
	mul.rn.f32 	%f144, %f79, %f129;
	mul.rn.f32 	%f145, %f80, %f129;
	add.s64 	%rd10, %rd24, %rd27;
	add.s64 	%rd11, %rd10, 1024;
	// begin inline asm
	mov.u32 %r73, 0x0;
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	ld.global.v4.b32 { %r73, %r74, %r75, %r76 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r73;
	mov.b32 	{%rs35, %rs36}, %r74;
	mov.b32 	{%rs37, %rs38}, %r75;
	mov.b32 	{%rs39, %rs40}, %r76;
	// begin inline asm
	mov.u32 %r77, 0x0;
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	ld.global.v4.b32 { %r77, %r78, %r79, %r80 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r77;
	mov.b32 	{%rs43, %rs44}, %r78;
	mov.b32 	{%rs45, %rs46}, %r79;
	mov.b32 	{%rs47, %rs48}, %r80;
	// begin inline asm
	cvt.f32.bf16 %r81, %rs33;
	// end inline asm
	mov.b32 	%f146, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs34;
	// end inline asm
	mov.b32 	%f147, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs35;
	// end inline asm
	mov.b32 	%f148, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs36;
	// end inline asm
	mov.b32 	%f149, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs37;
	// end inline asm
	mov.b32 	%f150, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs38;
	// end inline asm
	mov.b32 	%f151, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs39;
	// end inline asm
	mov.b32 	%f152, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs40;
	// end inline asm
	mov.b32 	%f153, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs41;
	// end inline asm
	mov.b32 	%f154, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs42;
	// end inline asm
	mov.b32 	%f155, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs43;
	// end inline asm
	mov.b32 	%f156, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs44;
	// end inline asm
	mov.b32 	%f157, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs45;
	// end inline asm
	mov.b32 	%f158, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs46;
	// end inline asm
	mov.b32 	%f159, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs47;
	// end inline asm
	mov.b32 	%f160, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs48;
	// end inline asm
	mov.b32 	%f161, %r96;
	mul.rn.f32 	%f162, %f130, %f146;
	mul.rn.f32 	%f163, %f131, %f147;
	mul.rn.f32 	%f164, %f132, %f148;
	mul.rn.f32 	%f165, %f133, %f149;
	mul.rn.f32 	%f166, %f134, %f150;
	mul.rn.f32 	%f167, %f135, %f151;
	mul.rn.f32 	%f168, %f136, %f152;
	mul.rn.f32 	%f169, %f137, %f153;
	mul.rn.f32 	%f170, %f138, %f154;
	mul.rn.f32 	%f171, %f139, %f155;
	mul.rn.f32 	%f172, %f140, %f156;
	mul.rn.f32 	%f173, %f141, %f157;
	mul.rn.f32 	%f174, %f142, %f158;
	mul.rn.f32 	%f175, %f143, %f159;
	mul.rn.f32 	%f176, %f144, %f160;
	mul.rn.f32 	%f177, %f145, %f161;
	mov.b32 	%r97, %f162;
	// begin inline asm
	cvt.rn.bf16.f32 %rs49, %r97;
	// end inline asm
	mov.b32 	%r98, %f163;
	// begin inline asm
	cvt.rn.bf16.f32 %rs50, %r98;
	// end inline asm
	mov.b32 	%r99, %f164;
	// begin inline asm
	cvt.rn.bf16.f32 %rs51, %r99;
	// end inline asm
	mov.b32 	%r100, %f165;
	// begin inline asm
	cvt.rn.bf16.f32 %rs52, %r100;
	// end inline asm
	mov.b32 	%r101, %f166;
	// begin inline asm
	cvt.rn.bf16.f32 %rs53, %r101;
	// end inline asm
	mov.b32 	%r102, %f167;
	// begin inline asm
	cvt.rn.bf16.f32 %rs54, %r102;
	// end inline asm
	mov.b32 	%r103, %f168;
	// begin inline asm
	cvt.rn.bf16.f32 %rs55, %r103;
	// end inline asm
	mov.b32 	%r104, %f169;
	// begin inline asm
	cvt.rn.bf16.f32 %rs56, %r104;
	// end inline asm
	mov.b32 	%r105, %f170;
	// begin inline asm
	cvt.rn.bf16.f32 %rs57, %r105;
	// end inline asm
	mov.b32 	%r106, %f171;
	// begin inline asm
	cvt.rn.bf16.f32 %rs58, %r106;
	// end inline asm
	mov.b32 	%r107, %f172;
	// begin inline asm
	cvt.rn.bf16.f32 %rs59, %r107;
	// end inline asm
	mov.b32 	%r108, %f173;
	// begin inline asm
	cvt.rn.bf16.f32 %rs60, %r108;
	// end inline asm
	mov.b32 	%r109, %f174;
	// begin inline asm
	cvt.rn.bf16.f32 %rs61, %r109;
	// end inline asm
	mov.b32 	%r110, %f175;
	// begin inline asm
	cvt.rn.bf16.f32 %rs62, %r110;
	// end inline asm
	mov.b32 	%r111, %f176;
	// begin inline asm
	cvt.rn.bf16.f32 %rs63, %r111;
	// end inline asm
	mov.b32 	%r112, %f177;
	// begin inline asm
	cvt.rn.bf16.f32 %rs64, %r112;
	// end inline asm
	add.s64 	%rd40, %rd16, %rd30;
	add.s64 	%rd12, %rd40, %rd27;
	add.s64 	%rd13, %rd12, 1024;
	mov.b32 	%r113, {%rs49, %rs50};
	mov.b32 	%r114, {%rs51, %rs52};
	mov.b32 	%r115, {%rs53, %rs54};
	mov.b32 	%r116, {%rs55, %rs56};
	// begin inline asm
	st.global.v4.b32 [ %rd12 + 0 ], { %r113, %r114, %r115, %r116 };
	// end inline asm
	mov.b32 	%r117, {%rs57, %rs58};
	mov.b32 	%r118, {%rs59, %rs60};
	mov.b32 	%r119, {%rs61, %rs62};
	mov.b32 	%r120, {%rs63, %rs64};
	// begin inline asm
	st.global.v4.b32 [ %rd13 + 0 ], { %r117, %r118, %r119, %r120 };
	// end inline asm
	ret;

}
	// .globl	fusion_335
.visible .entry fusion_335(
	.param .u64 .ptr .align 16 fusion_335_param_0,
	.param .u64 .ptr .align 16 fusion_335_param_1,
	.param .u64 .ptr .align 128 fusion_335_param_2,
	.param .u64 .ptr .align 128 fusion_335_param_3,
	.param .u64 .ptr .align 128 fusion_335_param_4,
	.param .u64 .ptr .align 128 fusion_335_param_5,
	.param .u64 .ptr .align 128 fusion_335_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<97>;
	.reg .b32 	%r<189>;
	.reg .f32 	%f<242>;
	.reg .b64 	%rd<48>;

	ld.param.u64 	%rd18, [fusion_335_param_0];
	ld.param.u64 	%rd19, [fusion_335_param_6];
	cvta.to.global.u64 	%rd20, %rd19;
	ld.param.u64 	%rd21, [fusion_335_param_1];
	ld.param.u64 	%rd22, [fusion_335_param_5];
	cvta.to.global.u64 	%rd23, %rd22;
	ld.param.u64 	%rd24, [fusion_335_param_2];
	ld.param.u64 	%rd25, [fusion_335_param_4];
	cvta.to.global.u64 	%rd26, %rd25;
	ld.param.u64 	%rd27, [fusion_335_param_3];
	cvta.to.global.u64 	%rd28, %rd27;
	cvta.to.global.u64 	%rd29, %rd24;
	cvta.to.global.u64 	%rd30, %rd21;
	cvta.to.global.u64 	%rd13, %rd18;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd31, %r1, 53248;
	add.s64 	%rd32, %rd26, %rd31;
	mov.u32 	%r169, %tid.x;
	and.b32  	%r170, %r169, 31;
	shl.b32 	%r171, %r169, 3;
	and.b32  	%r172, %r171, 248;
	setp.lt.u32 	%p4, %r169, 32;
	selp.b32 	%r173, 0, 256, %p4;
	or.b32  	%r174, %r172, %r173;
	mul.wide.u32 	%rd33, %r174, 2;
	add.s64 	%rd34, %rd32, %rd33;
	add.s64 	%rd1, %rd34, 32768;
	add.s64 	%rd2, %rd34, 33792;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd35, %r1, 1024;
	shl.b64 	%rd36, %rd35, 1;
	add.s64 	%rd37, %rd23, %rd36;
	add.s64 	%rd3, %rd37, %rd33;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	add.s64 	%rd5, %rd34, 34816;
	add.s64 	%rd6, %rd34, 35840;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r50;
	mov.b32 	{%rs35, %rs36}, %r51;
	mov.b32 	{%rs37, %rs38}, %r52;
	mov.b32 	{%rs39, %rs40}, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r54;
	mov.b32 	{%rs43, %rs44}, %r55;
	mov.b32 	{%rs45, %rs46}, %r56;
	mov.b32 	{%rs47, %rs48}, %r57;
	// begin inline asm
	cvt.f32.bf16 %r58, %rs33;
	// end inline asm
	mov.b32 	%f33, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs34;
	// end inline asm
	mov.b32 	%f34, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs35;
	// end inline asm
	mov.b32 	%f35, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs36;
	// end inline asm
	mov.b32 	%f36, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs37;
	// end inline asm
	mov.b32 	%f37, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs38;
	// end inline asm
	mov.b32 	%f38, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs39;
	// end inline asm
	mov.b32 	%f39, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs40;
	// end inline asm
	mov.b32 	%f40, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs41;
	// end inline asm
	mov.b32 	%f41, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs42;
	// end inline asm
	mov.b32 	%f42, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs43;
	// end inline asm
	mov.b32 	%f43, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs44;
	// end inline asm
	mov.b32 	%f44, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs45;
	// end inline asm
	mov.b32 	%f45, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs46;
	// end inline asm
	mov.b32 	%f46, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs47;
	// end inline asm
	mov.b32 	%f47, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs48;
	// end inline asm
	mov.b32 	%f48, %r73;
	add.s64 	%rd38, %rd28, %rd36;
	add.s64 	%rd7, %rd38, %rd33;
	add.s64 	%rd8, %rd7, 1024;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	ld.global.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs49, %rs50}, %r74;
	mov.b32 	{%rs51, %rs52}, %r75;
	mov.b32 	{%rs53, %rs54}, %r76;
	mov.b32 	{%rs55, %rs56}, %r77;
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	ld.global.v4.b32 { %r78, %r79, %r80, %r81 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	{%rs57, %rs58}, %r78;
	mov.b32 	{%rs59, %rs60}, %r79;
	mov.b32 	{%rs61, %rs62}, %r80;
	mov.b32 	{%rs63, %rs64}, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs49;
	// end inline asm
	mov.b32 	%f49, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs50;
	// end inline asm
	mov.b32 	%f50, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs51;
	// end inline asm
	mov.b32 	%f51, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs52;
	// end inline asm
	mov.b32 	%f52, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs53;
	// end inline asm
	mov.b32 	%f53, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs54;
	// end inline asm
	mov.b32 	%f54, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs55;
	// end inline asm
	mov.b32 	%f55, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs56;
	// end inline asm
	mov.b32 	%f56, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs57;
	// end inline asm
	mov.b32 	%f57, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs58;
	// end inline asm
	mov.b32 	%f58, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs59;
	// end inline asm
	mov.b32 	%f59, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs60;
	// end inline asm
	mov.b32 	%f60, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs61;
	// end inline asm
	mov.b32 	%f61, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs62;
	// end inline asm
	mov.b32 	%f62, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs63;
	// end inline asm
	mov.b32 	%f63, %r96;
	// begin inline asm
	cvt.f32.bf16 %r97, %rs64;
	// end inline asm
	mov.b32 	%f64, %r97;
	shl.b64 	%rd39, %rd35, 2;
	add.s64 	%rd40, %rd29, %rd39;
	mul.wide.u32 	%rd41, %r174, 4;
	add.s64 	%rd9, %rd40, %rd41;
	add.s64 	%rd10, %rd9, 16;
	add.s64 	%rd11, %rd9, 2048;
	add.s64 	%rd12, %rd9, 2064;
	// begin inline asm
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	ld.global.v4.b32 { %r98, %r99, %r100, %r101 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f65, %r98;
	mov.b32 	%f66, %r99;
	mov.b32 	%f67, %r100;
	mov.b32 	%f68, %r101;
	// begin inline asm
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	ld.global.v4.b32 { %r102, %r103, %r104, %r105 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f69, %r102;
	mov.b32 	%f70, %r103;
	mov.b32 	%f71, %r104;
	mov.b32 	%f72, %r105;
	// begin inline asm
	mov.u32 %r106, 0x0;
	mov.u32 %r107, 0x0;
	mov.u32 %r108, 0x0;
	mov.u32 %r109, 0x0;
	ld.global.v4.b32 { %r106, %r107, %r108, %r109 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f73, %r106;
	mov.b32 	%f74, %r107;
	mov.b32 	%f75, %r108;
	mov.b32 	%f76, %r109;
	// begin inline asm
	mov.u32 %r110, 0x0;
	mov.u32 %r111, 0x0;
	mov.u32 %r112, 0x0;
	mov.u32 %r113, 0x0;
	ld.global.v4.b32 { %r110, %r111, %r112, %r113 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f77, %r110;
	mov.b32 	%f78, %r111;
	mov.b32 	%f79, %r112;
	mov.b32 	%f80, %r113;
	add.rn.f32 	%f81, %f49, %f65;
	add.rn.f32 	%f82, %f50, %f66;
	add.rn.f32 	%f83, %f51, %f67;
	add.rn.f32 	%f84, %f52, %f68;
	add.rn.f32 	%f85, %f53, %f69;
	add.rn.f32 	%f86, %f54, %f70;
	add.rn.f32 	%f87, %f55, %f71;
	add.rn.f32 	%f88, %f56, %f72;
	add.rn.f32 	%f89, %f57, %f73;
	add.rn.f32 	%f90, %f58, %f74;
	add.rn.f32 	%f91, %f59, %f75;
	add.rn.f32 	%f92, %f60, %f76;
	add.rn.f32 	%f93, %f61, %f77;
	add.rn.f32 	%f94, %f62, %f78;
	add.rn.f32 	%f95, %f63, %f79;
	add.rn.f32 	%f96, %f64, %f80;
	add.rn.f32 	%f97, %f33, %f81;
	add.rn.f32 	%f98, %f34, %f82;
	add.rn.f32 	%f99, %f35, %f83;
	add.rn.f32 	%f100, %f36, %f84;
	add.rn.f32 	%f101, %f37, %f85;
	add.rn.f32 	%f102, %f38, %f86;
	add.rn.f32 	%f103, %f39, %f87;
	add.rn.f32 	%f104, %f40, %f88;
	add.rn.f32 	%f105, %f41, %f89;
	add.rn.f32 	%f106, %f42, %f90;
	add.rn.f32 	%f107, %f43, %f91;
	add.rn.f32 	%f108, %f44, %f92;
	add.rn.f32 	%f109, %f45, %f93;
	add.rn.f32 	%f110, %f46, %f94;
	add.rn.f32 	%f111, %f47, %f95;
	add.rn.f32 	%f112, %f48, %f96;
	add.rn.f32 	%f113, %f17, %f97;
	add.rn.f32 	%f114, %f18, %f98;
	add.rn.f32 	%f115, %f19, %f99;
	add.rn.f32 	%f116, %f20, %f100;
	add.rn.f32 	%f117, %f21, %f101;
	add.rn.f32 	%f118, %f22, %f102;
	add.rn.f32 	%f119, %f23, %f103;
	add.rn.f32 	%f120, %f24, %f104;
	add.rn.f32 	%f121, %f25, %f105;
	add.rn.f32 	%f122, %f26, %f106;
	add.rn.f32 	%f123, %f27, %f107;
	add.rn.f32 	%f124, %f28, %f108;
	add.rn.f32 	%f125, %f29, %f109;
	add.rn.f32 	%f126, %f30, %f110;
	add.rn.f32 	%f127, %f31, %f111;
	add.rn.f32 	%f128, %f32, %f112;
	add.rn.f32 	%f129, %f1, %f113;
	add.rn.f32 	%f130, %f2, %f114;
	add.rn.f32 	%f131, %f3, %f115;
	add.rn.f32 	%f132, %f4, %f116;
	add.rn.f32 	%f133, %f5, %f117;
	add.rn.f32 	%f134, %f6, %f118;
	add.rn.f32 	%f135, %f7, %f119;
	add.rn.f32 	%f136, %f8, %f120;
	add.rn.f32 	%f137, %f9, %f121;
	add.rn.f32 	%f138, %f10, %f122;
	add.rn.f32 	%f139, %f11, %f123;
	add.rn.f32 	%f140, %f12, %f124;
	add.rn.f32 	%f141, %f13, %f125;
	add.rn.f32 	%f142, %f14, %f126;
	add.rn.f32 	%f143, %f15, %f127;
	add.rn.f32 	%f144, %f16, %f128;
	mul.rn.f32 	%f145, %f129, %f129;
	mul.rn.f32 	%f146, %f130, %f130;
	mul.rn.f32 	%f147, %f131, %f131;
	mul.rn.f32 	%f148, %f132, %f132;
	mul.rn.f32 	%f149, %f133, %f133;
	mul.rn.f32 	%f150, %f134, %f134;
	mul.rn.f32 	%f151, %f135, %f135;
	mul.rn.f32 	%f152, %f136, %f136;
	mul.rn.f32 	%f153, %f137, %f137;
	mul.rn.f32 	%f154, %f138, %f138;
	mul.rn.f32 	%f155, %f139, %f139;
	mul.rn.f32 	%f156, %f140, %f140;
	mul.rn.f32 	%f157, %f141, %f141;
	mul.rn.f32 	%f158, %f142, %f142;
	mul.rn.f32 	%f159, %f143, %f143;
	mul.rn.f32 	%f160, %f144, %f144;
	add.rn.f32 	%f161, %f145, %f146;
	add.rn.f32 	%f162, %f147, %f161;
	add.rn.f32 	%f163, %f148, %f162;
	add.rn.f32 	%f164, %f149, %f163;
	add.rn.f32 	%f165, %f150, %f164;
	add.rn.f32 	%f166, %f151, %f165;
	add.rn.f32 	%f167, %f152, %f166;
	add.rn.f32 	%f168, %f153, %f167;
	add.rn.f32 	%f169, %f154, %f168;
	add.rn.f32 	%f170, %f155, %f169;
	add.rn.f32 	%f171, %f156, %f170;
	add.rn.f32 	%f172, %f157, %f171;
	add.rn.f32 	%f173, %f158, %f172;
	add.rn.f32 	%f174, %f159, %f173;
	add.rn.f32 	%f175, %f160, %f174;
	mov.b32 	%r175, %f175;
	shfl.sync.bfly.b32	%r176, %r175, 16, 31, -1;
	mov.b32 	%f176, %r176;
	add.rn.f32 	%f177, %f175, %f176;
	mov.b32 	%r177, %f177;
	shfl.sync.bfly.b32	%r178, %r177, 8, 31, -1;
	mov.b32 	%f178, %r178;
	add.rn.f32 	%f179, %f177, %f178;
	mov.b32 	%r179, %f179;
	shfl.sync.bfly.b32	%r180, %r179, 4, 31, -1;
	mov.b32 	%f180, %r180;
	add.rn.f32 	%f181, %f179, %f180;
	mov.b32 	%r181, %f181;
	shfl.sync.bfly.b32	%r182, %r181, 2, 31, -1;
	mov.b32 	%f182, %r182;
	add.rn.f32 	%f183, %f181, %f182;
	mov.b32 	%r183, %f183;
	shfl.sync.bfly.b32	%r184, %r183, 1, 31, -1;
	mov.b32 	%f184, %r184;
	add.rn.f32 	%f185, %f183, %f184;
	setp.eq.s32 	%p1, %r170, 0;
	shr.u32 	%r185, %r169, 3;
	and.b32  	%r186, %r185, 4;
	cvt.u64.u32 	%rd42, %r186;
	mov.u64 	%rd43, global_smem;
	add.s64 	%rd44, %rd43, %rd42;
	mov.b32 	%r115, %f185;
	cvt.u32.u64 	%r114, %rd44;
	// begin inline asm
	@%p1 st.shared.b32 [ %r114 + 0 ], %r115;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r169, 2;
	shl.b32 	%r187, %r169, 2;
	cvt.u64.u32 	%rd45, %r187;
	add.s64 	%rd46, %rd43, %rd45;
	cvt.u32.u64 	%r117, %rd46;
	// begin inline asm
	@%p2 ld.shared.b32 %r116, [ %r117 + 0 ];
	// end inline asm
	mov.b32 	%f186, %r116;
	shfl.sync.bfly.b32	%r188, %r116, 1, 31, -1;
	mov.b32 	%f187, %r188;
	add.rn.f32 	%f188, %f186, %f187;
	setp.eq.s32 	%p3, %r169, 0;
	mov.b32 	%r119, %f188;
	// begin inline asm
	@%p3 st.shared.b32 [ %r117 + 0 ], %r119;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f189, [global_smem];
	mul.rn.f32 	%f190, %f189, 0f3A800000;
	// begin inline asm
	mov.u32 %r120, 0x0;
	ld.global.b32 { %r120 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f191, %r120;
	add.rn.f32 	%f192, %f190, %f191;
	rsqrt.approx.f32 	%f193, %f192;
	mul.rn.f32 	%f194, %f129, %f193;
	mul.rn.f32 	%f195, %f130, %f193;
	mul.rn.f32 	%f196, %f131, %f193;
	mul.rn.f32 	%f197, %f132, %f193;
	mul.rn.f32 	%f198, %f133, %f193;
	mul.rn.f32 	%f199, %f134, %f193;
	mul.rn.f32 	%f200, %f135, %f193;
	mul.rn.f32 	%f201, %f136, %f193;
	mul.rn.f32 	%f202, %f137, %f193;
	mul.rn.f32 	%f203, %f138, %f193;
	mul.rn.f32 	%f204, %f139, %f193;
	mul.rn.f32 	%f205, %f140, %f193;
	mul.rn.f32 	%f206, %f141, %f193;
	mul.rn.f32 	%f207, %f142, %f193;
	mul.rn.f32 	%f208, %f143, %f193;
	mul.rn.f32 	%f209, %f144, %f193;
	add.s64 	%rd14, %rd30, %rd33;
	add.s64 	%rd15, %rd14, 1024;
	// begin inline asm
	mov.u32 %r121, 0x0;
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	ld.global.v4.b32 { %r121, %r122, %r123, %r124 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	{%rs65, %rs66}, %r121;
	mov.b32 	{%rs67, %rs68}, %r122;
	mov.b32 	{%rs69, %rs70}, %r123;
	mov.b32 	{%rs71, %rs72}, %r124;
	// begin inline asm
	mov.u32 %r125, 0x0;
	mov.u32 %r126, 0x0;
	mov.u32 %r127, 0x0;
	mov.u32 %r128, 0x0;
	ld.global.v4.b32 { %r125, %r126, %r127, %r128 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	{%rs73, %rs74}, %r125;
	mov.b32 	{%rs75, %rs76}, %r126;
	mov.b32 	{%rs77, %rs78}, %r127;
	mov.b32 	{%rs79, %rs80}, %r128;
	// begin inline asm
	cvt.f32.bf16 %r129, %rs65;
	// end inline asm
	mov.b32 	%f210, %r129;
	// begin inline asm
	cvt.f32.bf16 %r130, %rs66;
	// end inline asm
	mov.b32 	%f211, %r130;
	// begin inline asm
	cvt.f32.bf16 %r131, %rs67;
	// end inline asm
	mov.b32 	%f212, %r131;
	// begin inline asm
	cvt.f32.bf16 %r132, %rs68;
	// end inline asm
	mov.b32 	%f213, %r132;
	// begin inline asm
	cvt.f32.bf16 %r133, %rs69;
	// end inline asm
	mov.b32 	%f214, %r133;
	// begin inline asm
	cvt.f32.bf16 %r134, %rs70;
	// end inline asm
	mov.b32 	%f215, %r134;
	// begin inline asm
	cvt.f32.bf16 %r135, %rs71;
	// end inline asm
	mov.b32 	%f216, %r135;
	// begin inline asm
	cvt.f32.bf16 %r136, %rs72;
	// end inline asm
	mov.b32 	%f217, %r136;
	// begin inline asm
	cvt.f32.bf16 %r137, %rs73;
	// end inline asm
	mov.b32 	%f218, %r137;
	// begin inline asm
	cvt.f32.bf16 %r138, %rs74;
	// end inline asm
	mov.b32 	%f219, %r138;
	// begin inline asm
	cvt.f32.bf16 %r139, %rs75;
	// end inline asm
	mov.b32 	%f220, %r139;
	// begin inline asm
	cvt.f32.bf16 %r140, %rs76;
	// end inline asm
	mov.b32 	%f221, %r140;
	// begin inline asm
	cvt.f32.bf16 %r141, %rs77;
	// end inline asm
	mov.b32 	%f222, %r141;
	// begin inline asm
	cvt.f32.bf16 %r142, %rs78;
	// end inline asm
	mov.b32 	%f223, %r142;
	// begin inline asm
	cvt.f32.bf16 %r143, %rs79;
	// end inline asm
	mov.b32 	%f224, %r143;
	// begin inline asm
	cvt.f32.bf16 %r144, %rs80;
	// end inline asm
	mov.b32 	%f225, %r144;
	mul.rn.f32 	%f226, %f194, %f210;
	mul.rn.f32 	%f227, %f195, %f211;
	mul.rn.f32 	%f228, %f196, %f212;
	mul.rn.f32 	%f229, %f197, %f213;
	mul.rn.f32 	%f230, %f198, %f214;
	mul.rn.f32 	%f231, %f199, %f215;
	mul.rn.f32 	%f232, %f200, %f216;
	mul.rn.f32 	%f233, %f201, %f217;
	mul.rn.f32 	%f234, %f202, %f218;
	mul.rn.f32 	%f235, %f203, %f219;
	mul.rn.f32 	%f236, %f204, %f220;
	mul.rn.f32 	%f237, %f205, %f221;
	mul.rn.f32 	%f238, %f206, %f222;
	mul.rn.f32 	%f239, %f207, %f223;
	mul.rn.f32 	%f240, %f208, %f224;
	mul.rn.f32 	%f241, %f209, %f225;
	mov.b32 	%r145, %f226;
	// begin inline asm
	cvt.rn.bf16.f32 %rs81, %r145;
	// end inline asm
	mov.b32 	%r146, %f227;
	// begin inline asm
	cvt.rn.bf16.f32 %rs82, %r146;
	// end inline asm
	mov.b32 	%r147, %f228;
	// begin inline asm
	cvt.rn.bf16.f32 %rs83, %r147;
	// end inline asm
	mov.b32 	%r148, %f229;
	// begin inline asm
	cvt.rn.bf16.f32 %rs84, %r148;
	// end inline asm
	mov.b32 	%r149, %f230;
	// begin inline asm
	cvt.rn.bf16.f32 %rs85, %r149;
	// end inline asm
	mov.b32 	%r150, %f231;
	// begin inline asm
	cvt.rn.bf16.f32 %rs86, %r150;
	// end inline asm
	mov.b32 	%r151, %f232;
	// begin inline asm
	cvt.rn.bf16.f32 %rs87, %r151;
	// end inline asm
	mov.b32 	%r152, %f233;
	// begin inline asm
	cvt.rn.bf16.f32 %rs88, %r152;
	// end inline asm
	mov.b32 	%r153, %f234;
	// begin inline asm
	cvt.rn.bf16.f32 %rs89, %r153;
	// end inline asm
	mov.b32 	%r154, %f235;
	// begin inline asm
	cvt.rn.bf16.f32 %rs90, %r154;
	// end inline asm
	mov.b32 	%r155, %f236;
	// begin inline asm
	cvt.rn.bf16.f32 %rs91, %r155;
	// end inline asm
	mov.b32 	%r156, %f237;
	// begin inline asm
	cvt.rn.bf16.f32 %rs92, %r156;
	// end inline asm
	mov.b32 	%r157, %f238;
	// begin inline asm
	cvt.rn.bf16.f32 %rs93, %r157;
	// end inline asm
	mov.b32 	%r158, %f239;
	// begin inline asm
	cvt.rn.bf16.f32 %rs94, %r158;
	// end inline asm
	mov.b32 	%r159, %f240;
	// begin inline asm
	cvt.rn.bf16.f32 %rs95, %r159;
	// end inline asm
	mov.b32 	%r160, %f241;
	// begin inline asm
	cvt.rn.bf16.f32 %rs96, %r160;
	// end inline asm
	add.s64 	%rd47, %rd20, %rd36;
	add.s64 	%rd16, %rd47, %rd33;
	add.s64 	%rd17, %rd16, 1024;
	mov.b32 	%r161, {%rs81, %rs82};
	mov.b32 	%r162, {%rs83, %rs84};
	mov.b32 	%r163, {%rs85, %rs86};
	mov.b32 	%r164, {%rs87, %rs88};
	// begin inline asm
	st.global.v4.b32 [ %rd16 + 0 ], { %r161, %r162, %r163, %r164 };
	// end inline asm
	mov.b32 	%r165, {%rs89, %rs90};
	mov.b32 	%r166, {%rs91, %rs92};
	mov.b32 	%r167, {%rs93, %rs94};
	mov.b32 	%r168, {%rs95, %rs96};
	// begin inline asm
	st.global.v4.b32 [ %rd17 + 0 ], { %r165, %r166, %r167, %r168 };
	// end inline asm
	ret;

}
	// .globl	fusion_336
.visible .entry fusion_336(
	.param .u64 .ptr .align 16 fusion_336_param_0,
	.param .u64 .ptr .align 16 fusion_336_param_1,
	.param .u64 .ptr .align 128 fusion_336_param_2,
	.param .u64 .ptr .align 128 fusion_336_param_3,
	.param .u64 .ptr .align 128 fusion_336_param_4,
	.param .u64 .ptr .align 128 fusion_336_param_5,
	.param .u64 .ptr .align 128 fusion_336_param_6,
	.param .u64 .ptr .align 128 fusion_336_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<129>;
	.reg .b32 	%r<237>;
	.reg .f32 	%f<306>;
	.reg .b64 	%rd<55>;

	ld.param.u64 	%rd22, [fusion_336_param_0];
	ld.param.u64 	%rd23, [fusion_336_param_7];
	cvta.to.global.u64 	%rd24, %rd23;
	ld.param.u64 	%rd25, [fusion_336_param_1];
	ld.param.u64 	%rd26, [fusion_336_param_6];
	cvta.to.global.u64 	%rd27, %rd26;
	ld.param.u64 	%rd28, [fusion_336_param_2];
	ld.param.u64 	%rd29, [fusion_336_param_5];
	cvta.to.global.u64 	%rd30, %rd29;
	ld.param.u64 	%rd31, [fusion_336_param_3];
	ld.param.u64 	%rd32, [fusion_336_param_4];
	cvta.to.global.u64 	%rd33, %rd32;
	cvta.to.global.u64 	%rd34, %rd31;
	cvta.to.global.u64 	%rd35, %rd28;
	cvta.to.global.u64 	%rd36, %rd25;
	cvta.to.global.u64 	%rd17, %rd22;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd37, %r1, 53248;
	add.s64 	%rd38, %rd34, %rd37;
	mov.u32 	%r217, %tid.x;
	and.b32  	%r218, %r217, 31;
	shl.b32 	%r219, %r217, 3;
	and.b32  	%r220, %r219, 248;
	setp.lt.u32 	%p4, %r217, 32;
	selp.b32 	%r221, 0, 256, %p4;
	or.b32  	%r222, %r220, %r221;
	mul.wide.u32 	%rd39, %r222, 2;
	add.s64 	%rd40, %rd38, %rd39;
	add.s64 	%rd1, %rd40, 30720;
	add.s64 	%rd2, %rd40, 31744;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd41, %r1, 1024;
	shl.b64 	%rd42, %rd41, 1;
	add.s64 	%rd43, %rd35, %rd42;
	add.s64 	%rd3, %rd43, %rd39;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	add.s64 	%rd5, %rd40, 32768;
	add.s64 	%rd6, %rd40, 33792;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r50;
	mov.b32 	{%rs35, %rs36}, %r51;
	mov.b32 	{%rs37, %rs38}, %r52;
	mov.b32 	{%rs39, %rs40}, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r54;
	mov.b32 	{%rs43, %rs44}, %r55;
	mov.b32 	{%rs45, %rs46}, %r56;
	mov.b32 	{%rs47, %rs48}, %r57;
	// begin inline asm
	cvt.f32.bf16 %r58, %rs33;
	// end inline asm
	mov.b32 	%f33, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs34;
	// end inline asm
	mov.b32 	%f34, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs35;
	// end inline asm
	mov.b32 	%f35, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs36;
	// end inline asm
	mov.b32 	%f36, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs37;
	// end inline asm
	mov.b32 	%f37, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs38;
	// end inline asm
	mov.b32 	%f38, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs39;
	// end inline asm
	mov.b32 	%f39, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs40;
	// end inline asm
	mov.b32 	%f40, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs41;
	// end inline asm
	mov.b32 	%f41, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs42;
	// end inline asm
	mov.b32 	%f42, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs43;
	// end inline asm
	mov.b32 	%f43, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs44;
	// end inline asm
	mov.b32 	%f44, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs45;
	// end inline asm
	mov.b32 	%f45, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs46;
	// end inline asm
	mov.b32 	%f46, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs47;
	// end inline asm
	mov.b32 	%f47, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs48;
	// end inline asm
	mov.b32 	%f48, %r73;
	add.s64 	%rd44, %rd27, %rd42;
	add.s64 	%rd7, %rd44, %rd39;
	add.s64 	%rd8, %rd7, 1024;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	ld.global.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs49, %rs50}, %r74;
	mov.b32 	{%rs51, %rs52}, %r75;
	mov.b32 	{%rs53, %rs54}, %r76;
	mov.b32 	{%rs55, %rs56}, %r77;
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	ld.global.v4.b32 { %r78, %r79, %r80, %r81 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	{%rs57, %rs58}, %r78;
	mov.b32 	{%rs59, %rs60}, %r79;
	mov.b32 	{%rs61, %rs62}, %r80;
	mov.b32 	{%rs63, %rs64}, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs49;
	// end inline asm
	mov.b32 	%f49, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs50;
	// end inline asm
	mov.b32 	%f50, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs51;
	// end inline asm
	mov.b32 	%f51, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs52;
	// end inline asm
	mov.b32 	%f52, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs53;
	// end inline asm
	mov.b32 	%f53, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs54;
	// end inline asm
	mov.b32 	%f54, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs55;
	// end inline asm
	mov.b32 	%f55, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs56;
	// end inline asm
	mov.b32 	%f56, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs57;
	// end inline asm
	mov.b32 	%f57, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs58;
	// end inline asm
	mov.b32 	%f58, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs59;
	// end inline asm
	mov.b32 	%f59, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs60;
	// end inline asm
	mov.b32 	%f60, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs61;
	// end inline asm
	mov.b32 	%f61, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs62;
	// end inline asm
	mov.b32 	%f62, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs63;
	// end inline asm
	mov.b32 	%f63, %r96;
	// begin inline asm
	cvt.f32.bf16 %r97, %rs64;
	// end inline asm
	mov.b32 	%f64, %r97;
	add.s64 	%rd9, %rd40, 34816;
	add.s64 	%rd10, %rd40, 35840;
	// begin inline asm
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	ld.global.v4.b32 { %r98, %r99, %r100, %r101 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	{%rs65, %rs66}, %r98;
	mov.b32 	{%rs67, %rs68}, %r99;
	mov.b32 	{%rs69, %rs70}, %r100;
	mov.b32 	{%rs71, %rs72}, %r101;
	// begin inline asm
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	ld.global.v4.b32 { %r102, %r103, %r104, %r105 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	{%rs73, %rs74}, %r102;
	mov.b32 	{%rs75, %rs76}, %r103;
	mov.b32 	{%rs77, %rs78}, %r104;
	mov.b32 	{%rs79, %rs80}, %r105;
	// begin inline asm
	cvt.f32.bf16 %r106, %rs65;
	// end inline asm
	mov.b32 	%f65, %r106;
	// begin inline asm
	cvt.f32.bf16 %r107, %rs66;
	// end inline asm
	mov.b32 	%f66, %r107;
	// begin inline asm
	cvt.f32.bf16 %r108, %rs67;
	// end inline asm
	mov.b32 	%f67, %r108;
	// begin inline asm
	cvt.f32.bf16 %r109, %rs68;
	// end inline asm
	mov.b32 	%f68, %r109;
	// begin inline asm
	cvt.f32.bf16 %r110, %rs69;
	// end inline asm
	mov.b32 	%f69, %r110;
	// begin inline asm
	cvt.f32.bf16 %r111, %rs70;
	// end inline asm
	mov.b32 	%f70, %r111;
	// begin inline asm
	cvt.f32.bf16 %r112, %rs71;
	// end inline asm
	mov.b32 	%f71, %r112;
	// begin inline asm
	cvt.f32.bf16 %r113, %rs72;
	// end inline asm
	mov.b32 	%f72, %r113;
	// begin inline asm
	cvt.f32.bf16 %r114, %rs73;
	// end inline asm
	mov.b32 	%f73, %r114;
	// begin inline asm
	cvt.f32.bf16 %r115, %rs74;
	// end inline asm
	mov.b32 	%f74, %r115;
	// begin inline asm
	cvt.f32.bf16 %r116, %rs75;
	// end inline asm
	mov.b32 	%f75, %r116;
	// begin inline asm
	cvt.f32.bf16 %r117, %rs76;
	// end inline asm
	mov.b32 	%f76, %r117;
	// begin inline asm
	cvt.f32.bf16 %r118, %rs77;
	// end inline asm
	mov.b32 	%f77, %r118;
	// begin inline asm
	cvt.f32.bf16 %r119, %rs78;
	// end inline asm
	mov.b32 	%f78, %r119;
	// begin inline asm
	cvt.f32.bf16 %r120, %rs79;
	// end inline asm
	mov.b32 	%f79, %r120;
	// begin inline asm
	cvt.f32.bf16 %r121, %rs80;
	// end inline asm
	mov.b32 	%f80, %r121;
	add.s64 	%rd45, %rd30, %rd42;
	add.s64 	%rd11, %rd45, %rd39;
	add.s64 	%rd12, %rd11, 1024;
	// begin inline asm
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	mov.u32 %r125, 0x0;
	ld.global.v4.b32 { %r122, %r123, %r124, %r125 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	{%rs81, %rs82}, %r122;
	mov.b32 	{%rs83, %rs84}, %r123;
	mov.b32 	{%rs85, %rs86}, %r124;
	mov.b32 	{%rs87, %rs88}, %r125;
	// begin inline asm
	mov.u32 %r126, 0x0;
	mov.u32 %r127, 0x0;
	mov.u32 %r128, 0x0;
	mov.u32 %r129, 0x0;
	ld.global.v4.b32 { %r126, %r127, %r128, %r129 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	{%rs89, %rs90}, %r126;
	mov.b32 	{%rs91, %rs92}, %r127;
	mov.b32 	{%rs93, %rs94}, %r128;
	mov.b32 	{%rs95, %rs96}, %r129;
	// begin inline asm
	cvt.f32.bf16 %r130, %rs81;
	// end inline asm
	mov.b32 	%f81, %r130;
	// begin inline asm
	cvt.f32.bf16 %r131, %rs82;
	// end inline asm
	mov.b32 	%f82, %r131;
	// begin inline asm
	cvt.f32.bf16 %r132, %rs83;
	// end inline asm
	mov.b32 	%f83, %r132;
	// begin inline asm
	cvt.f32.bf16 %r133, %rs84;
	// end inline asm
	mov.b32 	%f84, %r133;
	// begin inline asm
	cvt.f32.bf16 %r134, %rs85;
	// end inline asm
	mov.b32 	%f85, %r134;
	// begin inline asm
	cvt.f32.bf16 %r135, %rs86;
	// end inline asm
	mov.b32 	%f86, %r135;
	// begin inline asm
	cvt.f32.bf16 %r136, %rs87;
	// end inline asm
	mov.b32 	%f87, %r136;
	// begin inline asm
	cvt.f32.bf16 %r137, %rs88;
	// end inline asm
	mov.b32 	%f88, %r137;
	// begin inline asm
	cvt.f32.bf16 %r138, %rs89;
	// end inline asm
	mov.b32 	%f89, %r138;
	// begin inline asm
	cvt.f32.bf16 %r139, %rs90;
	// end inline asm
	mov.b32 	%f90, %r139;
	// begin inline asm
	cvt.f32.bf16 %r140, %rs91;
	// end inline asm
	mov.b32 	%f91, %r140;
	// begin inline asm
	cvt.f32.bf16 %r141, %rs92;
	// end inline asm
	mov.b32 	%f92, %r141;
	// begin inline asm
	cvt.f32.bf16 %r142, %rs93;
	// end inline asm
	mov.b32 	%f93, %r142;
	// begin inline asm
	cvt.f32.bf16 %r143, %rs94;
	// end inline asm
	mov.b32 	%f94, %r143;
	// begin inline asm
	cvt.f32.bf16 %r144, %rs95;
	// end inline asm
	mov.b32 	%f95, %r144;
	// begin inline asm
	cvt.f32.bf16 %r145, %rs96;
	// end inline asm
	mov.b32 	%f96, %r145;
	shl.b64 	%rd46, %rd41, 2;
	add.s64 	%rd47, %rd33, %rd46;
	mul.wide.u32 	%rd48, %r222, 4;
	add.s64 	%rd13, %rd47, %rd48;
	add.s64 	%rd14, %rd13, 16;
	add.s64 	%rd15, %rd13, 2048;
	add.s64 	%rd16, %rd13, 2064;
	// begin inline asm
	mov.u32 %r146, 0x0;
	mov.u32 %r147, 0x0;
	mov.u32 %r148, 0x0;
	mov.u32 %r149, 0x0;
	ld.global.v4.b32 { %r146, %r147, %r148, %r149 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f97, %r146;
	mov.b32 	%f98, %r147;
	mov.b32 	%f99, %r148;
	mov.b32 	%f100, %r149;
	// begin inline asm
	mov.u32 %r150, 0x0;
	mov.u32 %r151, 0x0;
	mov.u32 %r152, 0x0;
	mov.u32 %r153, 0x0;
	ld.global.v4.b32 { %r150, %r151, %r152, %r153 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f101, %r150;
	mov.b32 	%f102, %r151;
	mov.b32 	%f103, %r152;
	mov.b32 	%f104, %r153;
	// begin inline asm
	mov.u32 %r154, 0x0;
	mov.u32 %r155, 0x0;
	mov.u32 %r156, 0x0;
	mov.u32 %r157, 0x0;
	ld.global.v4.b32 { %r154, %r155, %r156, %r157 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f105, %r154;
	mov.b32 	%f106, %r155;
	mov.b32 	%f107, %r156;
	mov.b32 	%f108, %r157;
	// begin inline asm
	mov.u32 %r158, 0x0;
	mov.u32 %r159, 0x0;
	mov.u32 %r160, 0x0;
	mov.u32 %r161, 0x0;
	ld.global.v4.b32 { %r158, %r159, %r160, %r161 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f109, %r158;
	mov.b32 	%f110, %r159;
	mov.b32 	%f111, %r160;
	mov.b32 	%f112, %r161;
	add.rn.f32 	%f113, %f81, %f97;
	add.rn.f32 	%f114, %f82, %f98;
	add.rn.f32 	%f115, %f83, %f99;
	add.rn.f32 	%f116, %f84, %f100;
	add.rn.f32 	%f117, %f85, %f101;
	add.rn.f32 	%f118, %f86, %f102;
	add.rn.f32 	%f119, %f87, %f103;
	add.rn.f32 	%f120, %f88, %f104;
	add.rn.f32 	%f121, %f89, %f105;
	add.rn.f32 	%f122, %f90, %f106;
	add.rn.f32 	%f123, %f91, %f107;
	add.rn.f32 	%f124, %f92, %f108;
	add.rn.f32 	%f125, %f93, %f109;
	add.rn.f32 	%f126, %f94, %f110;
	add.rn.f32 	%f127, %f95, %f111;
	add.rn.f32 	%f128, %f96, %f112;
	add.rn.f32 	%f129, %f65, %f113;
	add.rn.f32 	%f130, %f66, %f114;
	add.rn.f32 	%f131, %f67, %f115;
	add.rn.f32 	%f132, %f68, %f116;
	add.rn.f32 	%f133, %f69, %f117;
	add.rn.f32 	%f134, %f70, %f118;
	add.rn.f32 	%f135, %f71, %f119;
	add.rn.f32 	%f136, %f72, %f120;
	add.rn.f32 	%f137, %f73, %f121;
	add.rn.f32 	%f138, %f74, %f122;
	add.rn.f32 	%f139, %f75, %f123;
	add.rn.f32 	%f140, %f76, %f124;
	add.rn.f32 	%f141, %f77, %f125;
	add.rn.f32 	%f142, %f78, %f126;
	add.rn.f32 	%f143, %f79, %f127;
	add.rn.f32 	%f144, %f80, %f128;
	add.rn.f32 	%f145, %f49, %f129;
	add.rn.f32 	%f146, %f50, %f130;
	add.rn.f32 	%f147, %f51, %f131;
	add.rn.f32 	%f148, %f52, %f132;
	add.rn.f32 	%f149, %f53, %f133;
	add.rn.f32 	%f150, %f54, %f134;
	add.rn.f32 	%f151, %f55, %f135;
	add.rn.f32 	%f152, %f56, %f136;
	add.rn.f32 	%f153, %f57, %f137;
	add.rn.f32 	%f154, %f58, %f138;
	add.rn.f32 	%f155, %f59, %f139;
	add.rn.f32 	%f156, %f60, %f140;
	add.rn.f32 	%f157, %f61, %f141;
	add.rn.f32 	%f158, %f62, %f142;
	add.rn.f32 	%f159, %f63, %f143;
	add.rn.f32 	%f160, %f64, %f144;
	add.rn.f32 	%f161, %f33, %f145;
	add.rn.f32 	%f162, %f34, %f146;
	add.rn.f32 	%f163, %f35, %f147;
	add.rn.f32 	%f164, %f36, %f148;
	add.rn.f32 	%f165, %f37, %f149;
	add.rn.f32 	%f166, %f38, %f150;
	add.rn.f32 	%f167, %f39, %f151;
	add.rn.f32 	%f168, %f40, %f152;
	add.rn.f32 	%f169, %f41, %f153;
	add.rn.f32 	%f170, %f42, %f154;
	add.rn.f32 	%f171, %f43, %f155;
	add.rn.f32 	%f172, %f44, %f156;
	add.rn.f32 	%f173, %f45, %f157;
	add.rn.f32 	%f174, %f46, %f158;
	add.rn.f32 	%f175, %f47, %f159;
	add.rn.f32 	%f176, %f48, %f160;
	add.rn.f32 	%f177, %f17, %f161;
	add.rn.f32 	%f178, %f18, %f162;
	add.rn.f32 	%f179, %f19, %f163;
	add.rn.f32 	%f180, %f20, %f164;
	add.rn.f32 	%f181, %f21, %f165;
	add.rn.f32 	%f182, %f22, %f166;
	add.rn.f32 	%f183, %f23, %f167;
	add.rn.f32 	%f184, %f24, %f168;
	add.rn.f32 	%f185, %f25, %f169;
	add.rn.f32 	%f186, %f26, %f170;
	add.rn.f32 	%f187, %f27, %f171;
	add.rn.f32 	%f188, %f28, %f172;
	add.rn.f32 	%f189, %f29, %f173;
	add.rn.f32 	%f190, %f30, %f174;
	add.rn.f32 	%f191, %f31, %f175;
	add.rn.f32 	%f192, %f32, %f176;
	add.rn.f32 	%f193, %f1, %f177;
	add.rn.f32 	%f194, %f2, %f178;
	add.rn.f32 	%f195, %f3, %f179;
	add.rn.f32 	%f196, %f4, %f180;
	add.rn.f32 	%f197, %f5, %f181;
	add.rn.f32 	%f198, %f6, %f182;
	add.rn.f32 	%f199, %f7, %f183;
	add.rn.f32 	%f200, %f8, %f184;
	add.rn.f32 	%f201, %f9, %f185;
	add.rn.f32 	%f202, %f10, %f186;
	add.rn.f32 	%f203, %f11, %f187;
	add.rn.f32 	%f204, %f12, %f188;
	add.rn.f32 	%f205, %f13, %f189;
	add.rn.f32 	%f206, %f14, %f190;
	add.rn.f32 	%f207, %f15, %f191;
	add.rn.f32 	%f208, %f16, %f192;
	mul.rn.f32 	%f209, %f193, %f193;
	mul.rn.f32 	%f210, %f194, %f194;
	mul.rn.f32 	%f211, %f195, %f195;
	mul.rn.f32 	%f212, %f196, %f196;
	mul.rn.f32 	%f213, %f197, %f197;
	mul.rn.f32 	%f214, %f198, %f198;
	mul.rn.f32 	%f215, %f199, %f199;
	mul.rn.f32 	%f216, %f200, %f200;
	mul.rn.f32 	%f217, %f201, %f201;
	mul.rn.f32 	%f218, %f202, %f202;
	mul.rn.f32 	%f219, %f203, %f203;
	mul.rn.f32 	%f220, %f204, %f204;
	mul.rn.f32 	%f221, %f205, %f205;
	mul.rn.f32 	%f222, %f206, %f206;
	mul.rn.f32 	%f223, %f207, %f207;
	mul.rn.f32 	%f224, %f208, %f208;
	add.rn.f32 	%f225, %f209, %f210;
	add.rn.f32 	%f226, %f211, %f225;
	add.rn.f32 	%f227, %f212, %f226;
	add.rn.f32 	%f228, %f213, %f227;
	add.rn.f32 	%f229, %f214, %f228;
	add.rn.f32 	%f230, %f215, %f229;
	add.rn.f32 	%f231, %f216, %f230;
	add.rn.f32 	%f232, %f217, %f231;
	add.rn.f32 	%f233, %f218, %f232;
	add.rn.f32 	%f234, %f219, %f233;
	add.rn.f32 	%f235, %f220, %f234;
	add.rn.f32 	%f236, %f221, %f235;
	add.rn.f32 	%f237, %f222, %f236;
	add.rn.f32 	%f238, %f223, %f237;
	add.rn.f32 	%f239, %f224, %f238;
	mov.b32 	%r223, %f239;
	shfl.sync.bfly.b32	%r224, %r223, 16, 31, -1;
	mov.b32 	%f240, %r224;
	add.rn.f32 	%f241, %f239, %f240;
	mov.b32 	%r225, %f241;
	shfl.sync.bfly.b32	%r226, %r225, 8, 31, -1;
	mov.b32 	%f242, %r226;
	add.rn.f32 	%f243, %f241, %f242;
	mov.b32 	%r227, %f243;
	shfl.sync.bfly.b32	%r228, %r227, 4, 31, -1;
	mov.b32 	%f244, %r228;
	add.rn.f32 	%f245, %f243, %f244;
	mov.b32 	%r229, %f245;
	shfl.sync.bfly.b32	%r230, %r229, 2, 31, -1;
	mov.b32 	%f246, %r230;
	add.rn.f32 	%f247, %f245, %f246;
	mov.b32 	%r231, %f247;
	shfl.sync.bfly.b32	%r232, %r231, 1, 31, -1;
	mov.b32 	%f248, %r232;
	add.rn.f32 	%f249, %f247, %f248;
	setp.eq.s32 	%p1, %r218, 0;
	shr.u32 	%r233, %r217, 3;
	and.b32  	%r234, %r233, 4;
	cvt.u64.u32 	%rd49, %r234;
	mov.u64 	%rd50, global_smem;
	add.s64 	%rd51, %rd50, %rd49;
	mov.b32 	%r163, %f249;
	cvt.u32.u64 	%r162, %rd51;
	// begin inline asm
	@%p1 st.shared.b32 [ %r162 + 0 ], %r163;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r217, 2;
	shl.b32 	%r235, %r217, 2;
	cvt.u64.u32 	%rd52, %r235;
	add.s64 	%rd53, %rd50, %rd52;
	cvt.u32.u64 	%r165, %rd53;
	// begin inline asm
	@%p2 ld.shared.b32 %r164, [ %r165 + 0 ];
	// end inline asm
	mov.b32 	%f250, %r164;
	shfl.sync.bfly.b32	%r236, %r164, 1, 31, -1;
	mov.b32 	%f251, %r236;
	add.rn.f32 	%f252, %f250, %f251;
	setp.eq.s32 	%p3, %r217, 0;
	mov.b32 	%r167, %f252;
	// begin inline asm
	@%p3 st.shared.b32 [ %r165 + 0 ], %r167;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f253, [global_smem];
	mul.rn.f32 	%f254, %f253, 0f3A800000;
	// begin inline asm
	mov.u32 %r168, 0x0;
	ld.global.b32 { %r168 }, [ %rd17 + 0 ];
	// end inline asm
	mov.b32 	%f255, %r168;
	add.rn.f32 	%f256, %f254, %f255;
	rsqrt.approx.f32 	%f257, %f256;
	mul.rn.f32 	%f258, %f193, %f257;
	mul.rn.f32 	%f259, %f194, %f257;
	mul.rn.f32 	%f260, %f195, %f257;
	mul.rn.f32 	%f261, %f196, %f257;
	mul.rn.f32 	%f262, %f197, %f257;
	mul.rn.f32 	%f263, %f198, %f257;
	mul.rn.f32 	%f264, %f199, %f257;
	mul.rn.f32 	%f265, %f200, %f257;
	mul.rn.f32 	%f266, %f201, %f257;
	mul.rn.f32 	%f267, %f202, %f257;
	mul.rn.f32 	%f268, %f203, %f257;
	mul.rn.f32 	%f269, %f204, %f257;
	mul.rn.f32 	%f270, %f205, %f257;
	mul.rn.f32 	%f271, %f206, %f257;
	mul.rn.f32 	%f272, %f207, %f257;
	mul.rn.f32 	%f273, %f208, %f257;
	add.s64 	%rd18, %rd36, %rd39;
	add.s64 	%rd19, %rd18, 1024;
	// begin inline asm
	mov.u32 %r169, 0x0;
	mov.u32 %r170, 0x0;
	mov.u32 %r171, 0x0;
	mov.u32 %r172, 0x0;
	ld.global.v4.b32 { %r169, %r170, %r171, %r172 }, [ %rd18 + 0 ];
	// end inline asm
	mov.b32 	{%rs97, %rs98}, %r169;
	mov.b32 	{%rs99, %rs100}, %r170;
	mov.b32 	{%rs101, %rs102}, %r171;
	mov.b32 	{%rs103, %rs104}, %r172;
	// begin inline asm
	mov.u32 %r173, 0x0;
	mov.u32 %r174, 0x0;
	mov.u32 %r175, 0x0;
	mov.u32 %r176, 0x0;
	ld.global.v4.b32 { %r173, %r174, %r175, %r176 }, [ %rd19 + 0 ];
	// end inline asm
	mov.b32 	{%rs105, %rs106}, %r173;
	mov.b32 	{%rs107, %rs108}, %r174;
	mov.b32 	{%rs109, %rs110}, %r175;
	mov.b32 	{%rs111, %rs112}, %r176;
	// begin inline asm
	cvt.f32.bf16 %r177, %rs97;
	// end inline asm
	mov.b32 	%f274, %r177;
	// begin inline asm
	cvt.f32.bf16 %r178, %rs98;
	// end inline asm
	mov.b32 	%f275, %r178;
	// begin inline asm
	cvt.f32.bf16 %r179, %rs99;
	// end inline asm
	mov.b32 	%f276, %r179;
	// begin inline asm
	cvt.f32.bf16 %r180, %rs100;
	// end inline asm
	mov.b32 	%f277, %r180;
	// begin inline asm
	cvt.f32.bf16 %r181, %rs101;
	// end inline asm
	mov.b32 	%f278, %r181;
	// begin inline asm
	cvt.f32.bf16 %r182, %rs102;
	// end inline asm
	mov.b32 	%f279, %r182;
	// begin inline asm
	cvt.f32.bf16 %r183, %rs103;
	// end inline asm
	mov.b32 	%f280, %r183;
	// begin inline asm
	cvt.f32.bf16 %r184, %rs104;
	// end inline asm
	mov.b32 	%f281, %r184;
	// begin inline asm
	cvt.f32.bf16 %r185, %rs105;
	// end inline asm
	mov.b32 	%f282, %r185;
	// begin inline asm
	cvt.f32.bf16 %r186, %rs106;
	// end inline asm
	mov.b32 	%f283, %r186;
	// begin inline asm
	cvt.f32.bf16 %r187, %rs107;
	// end inline asm
	mov.b32 	%f284, %r187;
	// begin inline asm
	cvt.f32.bf16 %r188, %rs108;
	// end inline asm
	mov.b32 	%f285, %r188;
	// begin inline asm
	cvt.f32.bf16 %r189, %rs109;
	// end inline asm
	mov.b32 	%f286, %r189;
	// begin inline asm
	cvt.f32.bf16 %r190, %rs110;
	// end inline asm
	mov.b32 	%f287, %r190;
	// begin inline asm
	cvt.f32.bf16 %r191, %rs111;
	// end inline asm
	mov.b32 	%f288, %r191;
	// begin inline asm
	cvt.f32.bf16 %r192, %rs112;
	// end inline asm
	mov.b32 	%f289, %r192;
	mul.rn.f32 	%f290, %f258, %f274;
	mul.rn.f32 	%f291, %f259, %f275;
	mul.rn.f32 	%f292, %f260, %f276;
	mul.rn.f32 	%f293, %f261, %f277;
	mul.rn.f32 	%f294, %f262, %f278;
	mul.rn.f32 	%f295, %f263, %f279;
	mul.rn.f32 	%f296, %f264, %f280;
	mul.rn.f32 	%f297, %f265, %f281;
	mul.rn.f32 	%f298, %f266, %f282;
	mul.rn.f32 	%f299, %f267, %f283;
	mul.rn.f32 	%f300, %f268, %f284;
	mul.rn.f32 	%f301, %f269, %f285;
	mul.rn.f32 	%f302, %f270, %f286;
	mul.rn.f32 	%f303, %f271, %f287;
	mul.rn.f32 	%f304, %f272, %f288;
	mul.rn.f32 	%f305, %f273, %f289;
	mov.b32 	%r193, %f290;
	// begin inline asm
	cvt.rn.bf16.f32 %rs113, %r193;
	// end inline asm
	mov.b32 	%r194, %f291;
	// begin inline asm
	cvt.rn.bf16.f32 %rs114, %r194;
	// end inline asm
	mov.b32 	%r195, %f292;
	// begin inline asm
	cvt.rn.bf16.f32 %rs115, %r195;
	// end inline asm
	mov.b32 	%r196, %f293;
	// begin inline asm
	cvt.rn.bf16.f32 %rs116, %r196;
	// end inline asm
	mov.b32 	%r197, %f294;
	// begin inline asm
	cvt.rn.bf16.f32 %rs117, %r197;
	// end inline asm
	mov.b32 	%r198, %f295;
	// begin inline asm
	cvt.rn.bf16.f32 %rs118, %r198;
	// end inline asm
	mov.b32 	%r199, %f296;
	// begin inline asm
	cvt.rn.bf16.f32 %rs119, %r199;
	// end inline asm
	mov.b32 	%r200, %f297;
	// begin inline asm
	cvt.rn.bf16.f32 %rs120, %r200;
	// end inline asm
	mov.b32 	%r201, %f298;
	// begin inline asm
	cvt.rn.bf16.f32 %rs121, %r201;
	// end inline asm
	mov.b32 	%r202, %f299;
	// begin inline asm
	cvt.rn.bf16.f32 %rs122, %r202;
	// end inline asm
	mov.b32 	%r203, %f300;
	// begin inline asm
	cvt.rn.bf16.f32 %rs123, %r203;
	// end inline asm
	mov.b32 	%r204, %f301;
	// begin inline asm
	cvt.rn.bf16.f32 %rs124, %r204;
	// end inline asm
	mov.b32 	%r205, %f302;
	// begin inline asm
	cvt.rn.bf16.f32 %rs125, %r205;
	// end inline asm
	mov.b32 	%r206, %f303;
	// begin inline asm
	cvt.rn.bf16.f32 %rs126, %r206;
	// end inline asm
	mov.b32 	%r207, %f304;
	// begin inline asm
	cvt.rn.bf16.f32 %rs127, %r207;
	// end inline asm
	mov.b32 	%r208, %f305;
	// begin inline asm
	cvt.rn.bf16.f32 %rs128, %r208;
	// end inline asm
	add.s64 	%rd54, %rd24, %rd42;
	add.s64 	%rd20, %rd54, %rd39;
	add.s64 	%rd21, %rd20, 1024;
	mov.b32 	%r209, {%rs113, %rs114};
	mov.b32 	%r210, {%rs115, %rs116};
	mov.b32 	%r211, {%rs117, %rs118};
	mov.b32 	%r212, {%rs119, %rs120};
	// begin inline asm
	st.global.v4.b32 [ %rd20 + 0 ], { %r209, %r210, %r211, %r212 };
	// end inline asm
	mov.b32 	%r213, {%rs121, %rs122};
	mov.b32 	%r214, {%rs123, %rs124};
	mov.b32 	%r215, {%rs125, %rs126};
	mov.b32 	%r216, {%rs127, %rs128};
	// begin inline asm
	st.global.v4.b32 [ %rd21 + 0 ], { %r213, %r214, %r215, %r216 };
	// end inline asm
	ret;

}
	// .globl	loop_add_fusion_2
.visible .entry loop_add_fusion_2(
	.param .u64 .ptr .align 128 loop_add_fusion_2_param_0,
	.param .u64 .ptr .align 128 loop_add_fusion_2_param_1,
	.param .u64 .ptr .align 128 loop_add_fusion_2_param_2,
	.param .u64 .ptr .align 128 loop_add_fusion_2_param_3,
	.param .u64 .ptr .align 128 loop_add_fusion_2_param_4,
	.param .u64 .ptr .align 128 loop_add_fusion_2_param_5
)
.reqntid 128, 1, 1
{
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<9>;
	.reg .f32 	%f<18>;
	.reg .b64 	%rd<25>;

	ld.param.u64 	%rd1, [loop_add_fusion_2_param_0];
	ld.param.u64 	%rd2, [loop_add_fusion_2_param_5];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.param.u64 	%rd4, [loop_add_fusion_2_param_1];
	ld.param.u64 	%rd5, [loop_add_fusion_2_param_4];
	cvta.to.global.u64 	%rd6, %rd5;
	ld.param.u64 	%rd7, [loop_add_fusion_2_param_2];
	ld.param.u64 	%rd8, [loop_add_fusion_2_param_3];
	cvta.to.global.u64 	%rd9, %rd8;
	cvta.to.global.u64 	%rd10, %rd7;
	cvta.to.global.u64 	%rd11, %rd4;
	cvta.to.global.u64 	%rd12, %rd1;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shr.u32 	%r3, %r2, 3;
	shl.b32 	%r4, %r2, 7;
	and.b32  	%r5, %r4, 896;
	or.b32  	%r6, %r5, %r1;
	or.b32  	%r7, %r4, %r1;
	mul.wide.u32 	%rd13, %r7, 2;
	add.s64 	%rd14, %rd6, %rd13;
	ld.global.nc.u16 	%rs1, [%rd14];
	cvt.f32.bf16 	%f1, %rs1;
	mul.wide.u32 	%rd15, %r7, 4;
	add.s64 	%rd16, %rd9, %rd15;
	ld.global.f32 	%f2, [%rd16];
	add.s64 	%rd17, %rd3, %rd13;
	ld.global.nc.u16 	%rs2, [%rd17];
	mul.lo.s32 	%r8, %r3, 26624;
	cvt.u64.u32 	%rd18, %r6;
	cvt.u64.u32 	%rd19, %r8;
	add.s64 	%rd20, %rd19, %rd18;
	shl.b64 	%rd21, %rd20, 1;
	add.s64 	%rd22, %rd12, %rd21;
	ld.global.nc.u16 	%rs3, [%rd22+34816];
	cvt.f32.bf16 	%f3, %rs3;
	add.rn.f32 	%f4, %f2, %f1;
	cvt.f32.bf16 	%f5, %rs2;
	add.rn.f32 	%f6, %f4, %f3;
	add.s64 	%rd23, %rd10, %rd13;
	ld.global.nc.u16 	%rs4, [%rd23];
	ld.global.nc.u16 	%rs5, [%rd22+32768];
	cvt.f32.bf16 	%f7, %rs5;
	add.rn.f32 	%f8, %f6, %f5;
	cvt.f32.bf16 	%f9, %rs4;
	add.rn.f32 	%f10, %f8, %f7;
	add.s64 	%rd24, %rd11, %rd13;
	ld.global.nc.u16 	%rs6, [%rd24];
	ld.global.nc.u16 	%rs7, [%rd22+30720];
	cvt.f32.bf16 	%f11, %rs7;
	add.rn.f32 	%f12, %f10, %f9;
	cvt.f32.bf16 	%f13, %rs6;
	add.rn.f32 	%f14, %f12, %f11;
	ld.global.nc.u16 	%rs8, [%rd22+28672];
	cvt.f32.bf16 	%f15, %rs8;
	add.rn.f32 	%f16, %f14, %f13;
	add.rn.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd16], %f17;
	ret;

}
	// .globl	fusion_338
.visible .entry fusion_338(
	.param .u64 .ptr .align 16 fusion_338_param_0,
	.param .u64 .ptr .align 16 fusion_338_param_1,
	.param .u64 .ptr .align 128 fusion_338_param_2,
	.param .u64 .ptr .align 128 fusion_338_param_3,
	.param .u64 .ptr .align 128 fusion_338_param_4,
	.param .u64 .ptr .align 128 fusion_338_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<65>;
	.reg .b32 	%r<141>;
	.reg .f32 	%f<178>;
	.reg .b64 	%rd<41>;

	ld.param.u64 	%rd14, [fusion_338_param_0];
	ld.param.u64 	%rd15, [fusion_338_param_5];
	cvta.to.global.u64 	%rd16, %rd15;
	ld.param.u64 	%rd17, [fusion_338_param_1];
	ld.param.u64 	%rd18, [fusion_338_param_4];
	cvta.to.global.u64 	%rd19, %rd18;
	ld.param.u64 	%rd20, [fusion_338_param_2];
	ld.param.u64 	%rd21, [fusion_338_param_3];
	cvta.to.global.u64 	%rd22, %rd21;
	cvta.to.global.u64 	%rd23, %rd20;
	cvta.to.global.u64 	%rd24, %rd17;
	cvta.to.global.u64 	%rd9, %rd14;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd25, %r1, 53248;
	add.s64 	%rd26, %rd19, %rd25;
	mov.u32 	%r121, %tid.x;
	and.b32  	%r122, %r121, 31;
	shl.b32 	%r123, %r121, 3;
	and.b32  	%r124, %r123, 248;
	setp.lt.u32 	%p4, %r121, 32;
	selp.b32 	%r125, 0, 256, %p4;
	or.b32  	%r126, %r124, %r125;
	mul.wide.u32 	%rd27, %r126, 2;
	add.s64 	%rd28, %rd26, %rd27;
	add.s64 	%rd1, %rd28, 26624;
	add.s64 	%rd2, %rd28, 27648;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd29, %r1, 1024;
	shl.b64 	%rd30, %rd29, 1;
	add.s64 	%rd31, %rd22, %rd30;
	add.s64 	%rd3, %rd31, %rd27;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	shl.b64 	%rd32, %rd29, 2;
	add.s64 	%rd33, %rd23, %rd32;
	mul.wide.u32 	%rd34, %r126, 4;
	add.s64 	%rd5, %rd33, %rd34;
	add.s64 	%rd6, %rd5, 16;
	add.s64 	%rd7, %rd5, 2048;
	add.s64 	%rd8, %rd5, 2064;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r50;
	mov.b32 	%f34, %r51;
	mov.b32 	%f35, %r52;
	mov.b32 	%f36, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f37, %r54;
	mov.b32 	%f38, %r55;
	mov.b32 	%f39, %r56;
	mov.b32 	%f40, %r57;
	// begin inline asm
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	ld.global.v4.b32 { %r58, %r59, %r60, %r61 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r58;
	mov.b32 	%f42, %r59;
	mov.b32 	%f43, %r60;
	mov.b32 	%f44, %r61;
	// begin inline asm
	mov.u32 %r62, 0x0;
	mov.u32 %r63, 0x0;
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	ld.global.v4.b32 { %r62, %r63, %r64, %r65 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f45, %r62;
	mov.b32 	%f46, %r63;
	mov.b32 	%f47, %r64;
	mov.b32 	%f48, %r65;
	add.rn.f32 	%f49, %f17, %f33;
	add.rn.f32 	%f50, %f18, %f34;
	add.rn.f32 	%f51, %f19, %f35;
	add.rn.f32 	%f52, %f20, %f36;
	add.rn.f32 	%f53, %f21, %f37;
	add.rn.f32 	%f54, %f22, %f38;
	add.rn.f32 	%f55, %f23, %f39;
	add.rn.f32 	%f56, %f24, %f40;
	add.rn.f32 	%f57, %f25, %f41;
	add.rn.f32 	%f58, %f26, %f42;
	add.rn.f32 	%f59, %f27, %f43;
	add.rn.f32 	%f60, %f28, %f44;
	add.rn.f32 	%f61, %f29, %f45;
	add.rn.f32 	%f62, %f30, %f46;
	add.rn.f32 	%f63, %f31, %f47;
	add.rn.f32 	%f64, %f32, %f48;
	add.rn.f32 	%f65, %f1, %f49;
	add.rn.f32 	%f66, %f2, %f50;
	add.rn.f32 	%f67, %f3, %f51;
	add.rn.f32 	%f68, %f4, %f52;
	add.rn.f32 	%f69, %f5, %f53;
	add.rn.f32 	%f70, %f6, %f54;
	add.rn.f32 	%f71, %f7, %f55;
	add.rn.f32 	%f72, %f8, %f56;
	add.rn.f32 	%f73, %f9, %f57;
	add.rn.f32 	%f74, %f10, %f58;
	add.rn.f32 	%f75, %f11, %f59;
	add.rn.f32 	%f76, %f12, %f60;
	add.rn.f32 	%f77, %f13, %f61;
	add.rn.f32 	%f78, %f14, %f62;
	add.rn.f32 	%f79, %f15, %f63;
	add.rn.f32 	%f80, %f16, %f64;
	mul.rn.f32 	%f81, %f65, %f65;
	mul.rn.f32 	%f82, %f66, %f66;
	mul.rn.f32 	%f83, %f67, %f67;
	mul.rn.f32 	%f84, %f68, %f68;
	mul.rn.f32 	%f85, %f69, %f69;
	mul.rn.f32 	%f86, %f70, %f70;
	mul.rn.f32 	%f87, %f71, %f71;
	mul.rn.f32 	%f88, %f72, %f72;
	mul.rn.f32 	%f89, %f73, %f73;
	mul.rn.f32 	%f90, %f74, %f74;
	mul.rn.f32 	%f91, %f75, %f75;
	mul.rn.f32 	%f92, %f76, %f76;
	mul.rn.f32 	%f93, %f77, %f77;
	mul.rn.f32 	%f94, %f78, %f78;
	mul.rn.f32 	%f95, %f79, %f79;
	mul.rn.f32 	%f96, %f80, %f80;
	add.rn.f32 	%f97, %f81, %f82;
	add.rn.f32 	%f98, %f83, %f97;
	add.rn.f32 	%f99, %f84, %f98;
	add.rn.f32 	%f100, %f85, %f99;
	add.rn.f32 	%f101, %f86, %f100;
	add.rn.f32 	%f102, %f87, %f101;
	add.rn.f32 	%f103, %f88, %f102;
	add.rn.f32 	%f104, %f89, %f103;
	add.rn.f32 	%f105, %f90, %f104;
	add.rn.f32 	%f106, %f91, %f105;
	add.rn.f32 	%f107, %f92, %f106;
	add.rn.f32 	%f108, %f93, %f107;
	add.rn.f32 	%f109, %f94, %f108;
	add.rn.f32 	%f110, %f95, %f109;
	add.rn.f32 	%f111, %f96, %f110;
	mov.b32 	%r127, %f111;
	shfl.sync.bfly.b32	%r128, %r127, 16, 31, -1;
	mov.b32 	%f112, %r128;
	add.rn.f32 	%f113, %f111, %f112;
	mov.b32 	%r129, %f113;
	shfl.sync.bfly.b32	%r130, %r129, 8, 31, -1;
	mov.b32 	%f114, %r130;
	add.rn.f32 	%f115, %f113, %f114;
	mov.b32 	%r131, %f115;
	shfl.sync.bfly.b32	%r132, %r131, 4, 31, -1;
	mov.b32 	%f116, %r132;
	add.rn.f32 	%f117, %f115, %f116;
	mov.b32 	%r133, %f117;
	shfl.sync.bfly.b32	%r134, %r133, 2, 31, -1;
	mov.b32 	%f118, %r134;
	add.rn.f32 	%f119, %f117, %f118;
	mov.b32 	%r135, %f119;
	shfl.sync.bfly.b32	%r136, %r135, 1, 31, -1;
	mov.b32 	%f120, %r136;
	add.rn.f32 	%f121, %f119, %f120;
	setp.eq.s32 	%p1, %r122, 0;
	shr.u32 	%r137, %r121, 3;
	and.b32  	%r138, %r137, 4;
	cvt.u64.u32 	%rd35, %r138;
	mov.u64 	%rd36, global_smem;
	add.s64 	%rd37, %rd36, %rd35;
	mov.b32 	%r67, %f121;
	cvt.u32.u64 	%r66, %rd37;
	// begin inline asm
	@%p1 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r121, 2;
	shl.b32 	%r139, %r121, 2;
	cvt.u64.u32 	%rd38, %r139;
	add.s64 	%rd39, %rd36, %rd38;
	cvt.u32.u64 	%r69, %rd39;
	// begin inline asm
	@%p2 ld.shared.b32 %r68, [ %r69 + 0 ];
	// end inline asm
	mov.b32 	%f122, %r68;
	shfl.sync.bfly.b32	%r140, %r68, 1, 31, -1;
	mov.b32 	%f123, %r140;
	add.rn.f32 	%f124, %f122, %f123;
	setp.eq.s32 	%p3, %r121, 0;
	mov.b32 	%r71, %f124;
	// begin inline asm
	@%p3 st.shared.b32 [ %r69 + 0 ], %r71;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f125, [global_smem];
	mul.rn.f32 	%f126, %f125, 0f3A800000;
	// begin inline asm
	mov.u32 %r72, 0x0;
	ld.global.b32 { %r72 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f127, %r72;
	add.rn.f32 	%f128, %f126, %f127;
	rsqrt.approx.f32 	%f129, %f128;
	mul.rn.f32 	%f130, %f65, %f129;
	mul.rn.f32 	%f131, %f66, %f129;
	mul.rn.f32 	%f132, %f67, %f129;
	mul.rn.f32 	%f133, %f68, %f129;
	mul.rn.f32 	%f134, %f69, %f129;
	mul.rn.f32 	%f135, %f70, %f129;
	mul.rn.f32 	%f136, %f71, %f129;
	mul.rn.f32 	%f137, %f72, %f129;
	mul.rn.f32 	%f138, %f73, %f129;
	mul.rn.f32 	%f139, %f74, %f129;
	mul.rn.f32 	%f140, %f75, %f129;
	mul.rn.f32 	%f141, %f76, %f129;
	mul.rn.f32 	%f142, %f77, %f129;
	mul.rn.f32 	%f143, %f78, %f129;
	mul.rn.f32 	%f144, %f79, %f129;
	mul.rn.f32 	%f145, %f80, %f129;
	add.s64 	%rd10, %rd24, %rd27;
	add.s64 	%rd11, %rd10, 1024;
	// begin inline asm
	mov.u32 %r73, 0x0;
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	ld.global.v4.b32 { %r73, %r74, %r75, %r76 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r73;
	mov.b32 	{%rs35, %rs36}, %r74;
	mov.b32 	{%rs37, %rs38}, %r75;
	mov.b32 	{%rs39, %rs40}, %r76;
	// begin inline asm
	mov.u32 %r77, 0x0;
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	ld.global.v4.b32 { %r77, %r78, %r79, %r80 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r77;
	mov.b32 	{%rs43, %rs44}, %r78;
	mov.b32 	{%rs45, %rs46}, %r79;
	mov.b32 	{%rs47, %rs48}, %r80;
	// begin inline asm
	cvt.f32.bf16 %r81, %rs33;
	// end inline asm
	mov.b32 	%f146, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs34;
	// end inline asm
	mov.b32 	%f147, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs35;
	// end inline asm
	mov.b32 	%f148, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs36;
	// end inline asm
	mov.b32 	%f149, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs37;
	// end inline asm
	mov.b32 	%f150, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs38;
	// end inline asm
	mov.b32 	%f151, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs39;
	// end inline asm
	mov.b32 	%f152, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs40;
	// end inline asm
	mov.b32 	%f153, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs41;
	// end inline asm
	mov.b32 	%f154, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs42;
	// end inline asm
	mov.b32 	%f155, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs43;
	// end inline asm
	mov.b32 	%f156, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs44;
	// end inline asm
	mov.b32 	%f157, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs45;
	// end inline asm
	mov.b32 	%f158, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs46;
	// end inline asm
	mov.b32 	%f159, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs47;
	// end inline asm
	mov.b32 	%f160, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs48;
	// end inline asm
	mov.b32 	%f161, %r96;
	mul.rn.f32 	%f162, %f130, %f146;
	mul.rn.f32 	%f163, %f131, %f147;
	mul.rn.f32 	%f164, %f132, %f148;
	mul.rn.f32 	%f165, %f133, %f149;
	mul.rn.f32 	%f166, %f134, %f150;
	mul.rn.f32 	%f167, %f135, %f151;
	mul.rn.f32 	%f168, %f136, %f152;
	mul.rn.f32 	%f169, %f137, %f153;
	mul.rn.f32 	%f170, %f138, %f154;
	mul.rn.f32 	%f171, %f139, %f155;
	mul.rn.f32 	%f172, %f140, %f156;
	mul.rn.f32 	%f173, %f141, %f157;
	mul.rn.f32 	%f174, %f142, %f158;
	mul.rn.f32 	%f175, %f143, %f159;
	mul.rn.f32 	%f176, %f144, %f160;
	mul.rn.f32 	%f177, %f145, %f161;
	mov.b32 	%r97, %f162;
	// begin inline asm
	cvt.rn.bf16.f32 %rs49, %r97;
	// end inline asm
	mov.b32 	%r98, %f163;
	// begin inline asm
	cvt.rn.bf16.f32 %rs50, %r98;
	// end inline asm
	mov.b32 	%r99, %f164;
	// begin inline asm
	cvt.rn.bf16.f32 %rs51, %r99;
	// end inline asm
	mov.b32 	%r100, %f165;
	// begin inline asm
	cvt.rn.bf16.f32 %rs52, %r100;
	// end inline asm
	mov.b32 	%r101, %f166;
	// begin inline asm
	cvt.rn.bf16.f32 %rs53, %r101;
	// end inline asm
	mov.b32 	%r102, %f167;
	// begin inline asm
	cvt.rn.bf16.f32 %rs54, %r102;
	// end inline asm
	mov.b32 	%r103, %f168;
	// begin inline asm
	cvt.rn.bf16.f32 %rs55, %r103;
	// end inline asm
	mov.b32 	%r104, %f169;
	// begin inline asm
	cvt.rn.bf16.f32 %rs56, %r104;
	// end inline asm
	mov.b32 	%r105, %f170;
	// begin inline asm
	cvt.rn.bf16.f32 %rs57, %r105;
	// end inline asm
	mov.b32 	%r106, %f171;
	// begin inline asm
	cvt.rn.bf16.f32 %rs58, %r106;
	// end inline asm
	mov.b32 	%r107, %f172;
	// begin inline asm
	cvt.rn.bf16.f32 %rs59, %r107;
	// end inline asm
	mov.b32 	%r108, %f173;
	// begin inline asm
	cvt.rn.bf16.f32 %rs60, %r108;
	// end inline asm
	mov.b32 	%r109, %f174;
	// begin inline asm
	cvt.rn.bf16.f32 %rs61, %r109;
	// end inline asm
	mov.b32 	%r110, %f175;
	// begin inline asm
	cvt.rn.bf16.f32 %rs62, %r110;
	// end inline asm
	mov.b32 	%r111, %f176;
	// begin inline asm
	cvt.rn.bf16.f32 %rs63, %r111;
	// end inline asm
	mov.b32 	%r112, %f177;
	// begin inline asm
	cvt.rn.bf16.f32 %rs64, %r112;
	// end inline asm
	add.s64 	%rd40, %rd16, %rd30;
	add.s64 	%rd12, %rd40, %rd27;
	add.s64 	%rd13, %rd12, 1024;
	mov.b32 	%r113, {%rs49, %rs50};
	mov.b32 	%r114, {%rs51, %rs52};
	mov.b32 	%r115, {%rs53, %rs54};
	mov.b32 	%r116, {%rs55, %rs56};
	// begin inline asm
	st.global.v4.b32 [ %rd12 + 0 ], { %r113, %r114, %r115, %r116 };
	// end inline asm
	mov.b32 	%r117, {%rs57, %rs58};
	mov.b32 	%r118, {%rs59, %rs60};
	mov.b32 	%r119, {%rs61, %rs62};
	mov.b32 	%r120, {%rs63, %rs64};
	// begin inline asm
	st.global.v4.b32 [ %rd13 + 0 ], { %r117, %r118, %r119, %r120 };
	// end inline asm
	ret;

}
	// .globl	fusion_339
.visible .entry fusion_339(
	.param .u64 .ptr .align 16 fusion_339_param_0,
	.param .u64 .ptr .align 16 fusion_339_param_1,
	.param .u64 .ptr .align 128 fusion_339_param_2,
	.param .u64 .ptr .align 128 fusion_339_param_3,
	.param .u64 .ptr .align 128 fusion_339_param_4,
	.param .u64 .ptr .align 128 fusion_339_param_5,
	.param .u64 .ptr .align 128 fusion_339_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<97>;
	.reg .b32 	%r<189>;
	.reg .f32 	%f<242>;
	.reg .b64 	%rd<48>;

	ld.param.u64 	%rd18, [fusion_339_param_0];
	ld.param.u64 	%rd19, [fusion_339_param_6];
	cvta.to.global.u64 	%rd20, %rd19;
	ld.param.u64 	%rd21, [fusion_339_param_1];
	ld.param.u64 	%rd22, [fusion_339_param_5];
	cvta.to.global.u64 	%rd23, %rd22;
	ld.param.u64 	%rd24, [fusion_339_param_2];
	ld.param.u64 	%rd25, [fusion_339_param_4];
	cvta.to.global.u64 	%rd26, %rd25;
	ld.param.u64 	%rd27, [fusion_339_param_3];
	cvta.to.global.u64 	%rd28, %rd27;
	cvta.to.global.u64 	%rd29, %rd24;
	cvta.to.global.u64 	%rd30, %rd21;
	cvta.to.global.u64 	%rd13, %rd18;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd31, %r1, 53248;
	add.s64 	%rd32, %rd26, %rd31;
	mov.u32 	%r169, %tid.x;
	and.b32  	%r170, %r169, 31;
	shl.b32 	%r171, %r169, 3;
	and.b32  	%r172, %r171, 248;
	setp.lt.u32 	%p4, %r169, 32;
	selp.b32 	%r173, 0, 256, %p4;
	or.b32  	%r174, %r172, %r173;
	mul.wide.u32 	%rd33, %r174, 2;
	add.s64 	%rd34, %rd32, %rd33;
	add.s64 	%rd1, %rd34, 24576;
	add.s64 	%rd2, %rd34, 25600;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd35, %r1, 1024;
	shl.b64 	%rd36, %rd35, 1;
	add.s64 	%rd37, %rd23, %rd36;
	add.s64 	%rd3, %rd37, %rd33;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	add.s64 	%rd5, %rd34, 26624;
	add.s64 	%rd6, %rd34, 27648;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r50;
	mov.b32 	{%rs35, %rs36}, %r51;
	mov.b32 	{%rs37, %rs38}, %r52;
	mov.b32 	{%rs39, %rs40}, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r54;
	mov.b32 	{%rs43, %rs44}, %r55;
	mov.b32 	{%rs45, %rs46}, %r56;
	mov.b32 	{%rs47, %rs48}, %r57;
	// begin inline asm
	cvt.f32.bf16 %r58, %rs33;
	// end inline asm
	mov.b32 	%f33, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs34;
	// end inline asm
	mov.b32 	%f34, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs35;
	// end inline asm
	mov.b32 	%f35, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs36;
	// end inline asm
	mov.b32 	%f36, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs37;
	// end inline asm
	mov.b32 	%f37, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs38;
	// end inline asm
	mov.b32 	%f38, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs39;
	// end inline asm
	mov.b32 	%f39, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs40;
	// end inline asm
	mov.b32 	%f40, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs41;
	// end inline asm
	mov.b32 	%f41, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs42;
	// end inline asm
	mov.b32 	%f42, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs43;
	// end inline asm
	mov.b32 	%f43, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs44;
	// end inline asm
	mov.b32 	%f44, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs45;
	// end inline asm
	mov.b32 	%f45, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs46;
	// end inline asm
	mov.b32 	%f46, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs47;
	// end inline asm
	mov.b32 	%f47, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs48;
	// end inline asm
	mov.b32 	%f48, %r73;
	add.s64 	%rd38, %rd28, %rd36;
	add.s64 	%rd7, %rd38, %rd33;
	add.s64 	%rd8, %rd7, 1024;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	ld.global.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs49, %rs50}, %r74;
	mov.b32 	{%rs51, %rs52}, %r75;
	mov.b32 	{%rs53, %rs54}, %r76;
	mov.b32 	{%rs55, %rs56}, %r77;
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	ld.global.v4.b32 { %r78, %r79, %r80, %r81 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	{%rs57, %rs58}, %r78;
	mov.b32 	{%rs59, %rs60}, %r79;
	mov.b32 	{%rs61, %rs62}, %r80;
	mov.b32 	{%rs63, %rs64}, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs49;
	// end inline asm
	mov.b32 	%f49, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs50;
	// end inline asm
	mov.b32 	%f50, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs51;
	// end inline asm
	mov.b32 	%f51, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs52;
	// end inline asm
	mov.b32 	%f52, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs53;
	// end inline asm
	mov.b32 	%f53, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs54;
	// end inline asm
	mov.b32 	%f54, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs55;
	// end inline asm
	mov.b32 	%f55, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs56;
	// end inline asm
	mov.b32 	%f56, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs57;
	// end inline asm
	mov.b32 	%f57, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs58;
	// end inline asm
	mov.b32 	%f58, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs59;
	// end inline asm
	mov.b32 	%f59, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs60;
	// end inline asm
	mov.b32 	%f60, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs61;
	// end inline asm
	mov.b32 	%f61, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs62;
	// end inline asm
	mov.b32 	%f62, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs63;
	// end inline asm
	mov.b32 	%f63, %r96;
	// begin inline asm
	cvt.f32.bf16 %r97, %rs64;
	// end inline asm
	mov.b32 	%f64, %r97;
	shl.b64 	%rd39, %rd35, 2;
	add.s64 	%rd40, %rd29, %rd39;
	mul.wide.u32 	%rd41, %r174, 4;
	add.s64 	%rd9, %rd40, %rd41;
	add.s64 	%rd10, %rd9, 16;
	add.s64 	%rd11, %rd9, 2048;
	add.s64 	%rd12, %rd9, 2064;
	// begin inline asm
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	ld.global.v4.b32 { %r98, %r99, %r100, %r101 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f65, %r98;
	mov.b32 	%f66, %r99;
	mov.b32 	%f67, %r100;
	mov.b32 	%f68, %r101;
	// begin inline asm
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	ld.global.v4.b32 { %r102, %r103, %r104, %r105 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f69, %r102;
	mov.b32 	%f70, %r103;
	mov.b32 	%f71, %r104;
	mov.b32 	%f72, %r105;
	// begin inline asm
	mov.u32 %r106, 0x0;
	mov.u32 %r107, 0x0;
	mov.u32 %r108, 0x0;
	mov.u32 %r109, 0x0;
	ld.global.v4.b32 { %r106, %r107, %r108, %r109 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f73, %r106;
	mov.b32 	%f74, %r107;
	mov.b32 	%f75, %r108;
	mov.b32 	%f76, %r109;
	// begin inline asm
	mov.u32 %r110, 0x0;
	mov.u32 %r111, 0x0;
	mov.u32 %r112, 0x0;
	mov.u32 %r113, 0x0;
	ld.global.v4.b32 { %r110, %r111, %r112, %r113 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f77, %r110;
	mov.b32 	%f78, %r111;
	mov.b32 	%f79, %r112;
	mov.b32 	%f80, %r113;
	add.rn.f32 	%f81, %f49, %f65;
	add.rn.f32 	%f82, %f50, %f66;
	add.rn.f32 	%f83, %f51, %f67;
	add.rn.f32 	%f84, %f52, %f68;
	add.rn.f32 	%f85, %f53, %f69;
	add.rn.f32 	%f86, %f54, %f70;
	add.rn.f32 	%f87, %f55, %f71;
	add.rn.f32 	%f88, %f56, %f72;
	add.rn.f32 	%f89, %f57, %f73;
	add.rn.f32 	%f90, %f58, %f74;
	add.rn.f32 	%f91, %f59, %f75;
	add.rn.f32 	%f92, %f60, %f76;
	add.rn.f32 	%f93, %f61, %f77;
	add.rn.f32 	%f94, %f62, %f78;
	add.rn.f32 	%f95, %f63, %f79;
	add.rn.f32 	%f96, %f64, %f80;
	add.rn.f32 	%f97, %f33, %f81;
	add.rn.f32 	%f98, %f34, %f82;
	add.rn.f32 	%f99, %f35, %f83;
	add.rn.f32 	%f100, %f36, %f84;
	add.rn.f32 	%f101, %f37, %f85;
	add.rn.f32 	%f102, %f38, %f86;
	add.rn.f32 	%f103, %f39, %f87;
	add.rn.f32 	%f104, %f40, %f88;
	add.rn.f32 	%f105, %f41, %f89;
	add.rn.f32 	%f106, %f42, %f90;
	add.rn.f32 	%f107, %f43, %f91;
	add.rn.f32 	%f108, %f44, %f92;
	add.rn.f32 	%f109, %f45, %f93;
	add.rn.f32 	%f110, %f46, %f94;
	add.rn.f32 	%f111, %f47, %f95;
	add.rn.f32 	%f112, %f48, %f96;
	add.rn.f32 	%f113, %f17, %f97;
	add.rn.f32 	%f114, %f18, %f98;
	add.rn.f32 	%f115, %f19, %f99;
	add.rn.f32 	%f116, %f20, %f100;
	add.rn.f32 	%f117, %f21, %f101;
	add.rn.f32 	%f118, %f22, %f102;
	add.rn.f32 	%f119, %f23, %f103;
	add.rn.f32 	%f120, %f24, %f104;
	add.rn.f32 	%f121, %f25, %f105;
	add.rn.f32 	%f122, %f26, %f106;
	add.rn.f32 	%f123, %f27, %f107;
	add.rn.f32 	%f124, %f28, %f108;
	add.rn.f32 	%f125, %f29, %f109;
	add.rn.f32 	%f126, %f30, %f110;
	add.rn.f32 	%f127, %f31, %f111;
	add.rn.f32 	%f128, %f32, %f112;
	add.rn.f32 	%f129, %f1, %f113;
	add.rn.f32 	%f130, %f2, %f114;
	add.rn.f32 	%f131, %f3, %f115;
	add.rn.f32 	%f132, %f4, %f116;
	add.rn.f32 	%f133, %f5, %f117;
	add.rn.f32 	%f134, %f6, %f118;
	add.rn.f32 	%f135, %f7, %f119;
	add.rn.f32 	%f136, %f8, %f120;
	add.rn.f32 	%f137, %f9, %f121;
	add.rn.f32 	%f138, %f10, %f122;
	add.rn.f32 	%f139, %f11, %f123;
	add.rn.f32 	%f140, %f12, %f124;
	add.rn.f32 	%f141, %f13, %f125;
	add.rn.f32 	%f142, %f14, %f126;
	add.rn.f32 	%f143, %f15, %f127;
	add.rn.f32 	%f144, %f16, %f128;
	mul.rn.f32 	%f145, %f129, %f129;
	mul.rn.f32 	%f146, %f130, %f130;
	mul.rn.f32 	%f147, %f131, %f131;
	mul.rn.f32 	%f148, %f132, %f132;
	mul.rn.f32 	%f149, %f133, %f133;
	mul.rn.f32 	%f150, %f134, %f134;
	mul.rn.f32 	%f151, %f135, %f135;
	mul.rn.f32 	%f152, %f136, %f136;
	mul.rn.f32 	%f153, %f137, %f137;
	mul.rn.f32 	%f154, %f138, %f138;
	mul.rn.f32 	%f155, %f139, %f139;
	mul.rn.f32 	%f156, %f140, %f140;
	mul.rn.f32 	%f157, %f141, %f141;
	mul.rn.f32 	%f158, %f142, %f142;
	mul.rn.f32 	%f159, %f143, %f143;
	mul.rn.f32 	%f160, %f144, %f144;
	add.rn.f32 	%f161, %f145, %f146;
	add.rn.f32 	%f162, %f147, %f161;
	add.rn.f32 	%f163, %f148, %f162;
	add.rn.f32 	%f164, %f149, %f163;
	add.rn.f32 	%f165, %f150, %f164;
	add.rn.f32 	%f166, %f151, %f165;
	add.rn.f32 	%f167, %f152, %f166;
	add.rn.f32 	%f168, %f153, %f167;
	add.rn.f32 	%f169, %f154, %f168;
	add.rn.f32 	%f170, %f155, %f169;
	add.rn.f32 	%f171, %f156, %f170;
	add.rn.f32 	%f172, %f157, %f171;
	add.rn.f32 	%f173, %f158, %f172;
	add.rn.f32 	%f174, %f159, %f173;
	add.rn.f32 	%f175, %f160, %f174;
	mov.b32 	%r175, %f175;
	shfl.sync.bfly.b32	%r176, %r175, 16, 31, -1;
	mov.b32 	%f176, %r176;
	add.rn.f32 	%f177, %f175, %f176;
	mov.b32 	%r177, %f177;
	shfl.sync.bfly.b32	%r178, %r177, 8, 31, -1;
	mov.b32 	%f178, %r178;
	add.rn.f32 	%f179, %f177, %f178;
	mov.b32 	%r179, %f179;
	shfl.sync.bfly.b32	%r180, %r179, 4, 31, -1;
	mov.b32 	%f180, %r180;
	add.rn.f32 	%f181, %f179, %f180;
	mov.b32 	%r181, %f181;
	shfl.sync.bfly.b32	%r182, %r181, 2, 31, -1;
	mov.b32 	%f182, %r182;
	add.rn.f32 	%f183, %f181, %f182;
	mov.b32 	%r183, %f183;
	shfl.sync.bfly.b32	%r184, %r183, 1, 31, -1;
	mov.b32 	%f184, %r184;
	add.rn.f32 	%f185, %f183, %f184;
	setp.eq.s32 	%p1, %r170, 0;
	shr.u32 	%r185, %r169, 3;
	and.b32  	%r186, %r185, 4;
	cvt.u64.u32 	%rd42, %r186;
	mov.u64 	%rd43, global_smem;
	add.s64 	%rd44, %rd43, %rd42;
	mov.b32 	%r115, %f185;
	cvt.u32.u64 	%r114, %rd44;
	// begin inline asm
	@%p1 st.shared.b32 [ %r114 + 0 ], %r115;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r169, 2;
	shl.b32 	%r187, %r169, 2;
	cvt.u64.u32 	%rd45, %r187;
	add.s64 	%rd46, %rd43, %rd45;
	cvt.u32.u64 	%r117, %rd46;
	// begin inline asm
	@%p2 ld.shared.b32 %r116, [ %r117 + 0 ];
	// end inline asm
	mov.b32 	%f186, %r116;
	shfl.sync.bfly.b32	%r188, %r116, 1, 31, -1;
	mov.b32 	%f187, %r188;
	add.rn.f32 	%f188, %f186, %f187;
	setp.eq.s32 	%p3, %r169, 0;
	mov.b32 	%r119, %f188;
	// begin inline asm
	@%p3 st.shared.b32 [ %r117 + 0 ], %r119;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f189, [global_smem];
	mul.rn.f32 	%f190, %f189, 0f3A800000;
	// begin inline asm
	mov.u32 %r120, 0x0;
	ld.global.b32 { %r120 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f191, %r120;
	add.rn.f32 	%f192, %f190, %f191;
	rsqrt.approx.f32 	%f193, %f192;
	mul.rn.f32 	%f194, %f129, %f193;
	mul.rn.f32 	%f195, %f130, %f193;
	mul.rn.f32 	%f196, %f131, %f193;
	mul.rn.f32 	%f197, %f132, %f193;
	mul.rn.f32 	%f198, %f133, %f193;
	mul.rn.f32 	%f199, %f134, %f193;
	mul.rn.f32 	%f200, %f135, %f193;
	mul.rn.f32 	%f201, %f136, %f193;
	mul.rn.f32 	%f202, %f137, %f193;
	mul.rn.f32 	%f203, %f138, %f193;
	mul.rn.f32 	%f204, %f139, %f193;
	mul.rn.f32 	%f205, %f140, %f193;
	mul.rn.f32 	%f206, %f141, %f193;
	mul.rn.f32 	%f207, %f142, %f193;
	mul.rn.f32 	%f208, %f143, %f193;
	mul.rn.f32 	%f209, %f144, %f193;
	add.s64 	%rd14, %rd30, %rd33;
	add.s64 	%rd15, %rd14, 1024;
	// begin inline asm
	mov.u32 %r121, 0x0;
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	ld.global.v4.b32 { %r121, %r122, %r123, %r124 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	{%rs65, %rs66}, %r121;
	mov.b32 	{%rs67, %rs68}, %r122;
	mov.b32 	{%rs69, %rs70}, %r123;
	mov.b32 	{%rs71, %rs72}, %r124;
	// begin inline asm
	mov.u32 %r125, 0x0;
	mov.u32 %r126, 0x0;
	mov.u32 %r127, 0x0;
	mov.u32 %r128, 0x0;
	ld.global.v4.b32 { %r125, %r126, %r127, %r128 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	{%rs73, %rs74}, %r125;
	mov.b32 	{%rs75, %rs76}, %r126;
	mov.b32 	{%rs77, %rs78}, %r127;
	mov.b32 	{%rs79, %rs80}, %r128;
	// begin inline asm
	cvt.f32.bf16 %r129, %rs65;
	// end inline asm
	mov.b32 	%f210, %r129;
	// begin inline asm
	cvt.f32.bf16 %r130, %rs66;
	// end inline asm
	mov.b32 	%f211, %r130;
	// begin inline asm
	cvt.f32.bf16 %r131, %rs67;
	// end inline asm
	mov.b32 	%f212, %r131;
	// begin inline asm
	cvt.f32.bf16 %r132, %rs68;
	// end inline asm
	mov.b32 	%f213, %r132;
	// begin inline asm
	cvt.f32.bf16 %r133, %rs69;
	// end inline asm
	mov.b32 	%f214, %r133;
	// begin inline asm
	cvt.f32.bf16 %r134, %rs70;
	// end inline asm
	mov.b32 	%f215, %r134;
	// begin inline asm
	cvt.f32.bf16 %r135, %rs71;
	// end inline asm
	mov.b32 	%f216, %r135;
	// begin inline asm
	cvt.f32.bf16 %r136, %rs72;
	// end inline asm
	mov.b32 	%f217, %r136;
	// begin inline asm
	cvt.f32.bf16 %r137, %rs73;
	// end inline asm
	mov.b32 	%f218, %r137;
	// begin inline asm
	cvt.f32.bf16 %r138, %rs74;
	// end inline asm
	mov.b32 	%f219, %r138;
	// begin inline asm
	cvt.f32.bf16 %r139, %rs75;
	// end inline asm
	mov.b32 	%f220, %r139;
	// begin inline asm
	cvt.f32.bf16 %r140, %rs76;
	// end inline asm
	mov.b32 	%f221, %r140;
	// begin inline asm
	cvt.f32.bf16 %r141, %rs77;
	// end inline asm
	mov.b32 	%f222, %r141;
	// begin inline asm
	cvt.f32.bf16 %r142, %rs78;
	// end inline asm
	mov.b32 	%f223, %r142;
	// begin inline asm
	cvt.f32.bf16 %r143, %rs79;
	// end inline asm
	mov.b32 	%f224, %r143;
	// begin inline asm
	cvt.f32.bf16 %r144, %rs80;
	// end inline asm
	mov.b32 	%f225, %r144;
	mul.rn.f32 	%f226, %f194, %f210;
	mul.rn.f32 	%f227, %f195, %f211;
	mul.rn.f32 	%f228, %f196, %f212;
	mul.rn.f32 	%f229, %f197, %f213;
	mul.rn.f32 	%f230, %f198, %f214;
	mul.rn.f32 	%f231, %f199, %f215;
	mul.rn.f32 	%f232, %f200, %f216;
	mul.rn.f32 	%f233, %f201, %f217;
	mul.rn.f32 	%f234, %f202, %f218;
	mul.rn.f32 	%f235, %f203, %f219;
	mul.rn.f32 	%f236, %f204, %f220;
	mul.rn.f32 	%f237, %f205, %f221;
	mul.rn.f32 	%f238, %f206, %f222;
	mul.rn.f32 	%f239, %f207, %f223;
	mul.rn.f32 	%f240, %f208, %f224;
	mul.rn.f32 	%f241, %f209, %f225;
	mov.b32 	%r145, %f226;
	// begin inline asm
	cvt.rn.bf16.f32 %rs81, %r145;
	// end inline asm
	mov.b32 	%r146, %f227;
	// begin inline asm
	cvt.rn.bf16.f32 %rs82, %r146;
	// end inline asm
	mov.b32 	%r147, %f228;
	// begin inline asm
	cvt.rn.bf16.f32 %rs83, %r147;
	// end inline asm
	mov.b32 	%r148, %f229;
	// begin inline asm
	cvt.rn.bf16.f32 %rs84, %r148;
	// end inline asm
	mov.b32 	%r149, %f230;
	// begin inline asm
	cvt.rn.bf16.f32 %rs85, %r149;
	// end inline asm
	mov.b32 	%r150, %f231;
	// begin inline asm
	cvt.rn.bf16.f32 %rs86, %r150;
	// end inline asm
	mov.b32 	%r151, %f232;
	// begin inline asm
	cvt.rn.bf16.f32 %rs87, %r151;
	// end inline asm
	mov.b32 	%r152, %f233;
	// begin inline asm
	cvt.rn.bf16.f32 %rs88, %r152;
	// end inline asm
	mov.b32 	%r153, %f234;
	// begin inline asm
	cvt.rn.bf16.f32 %rs89, %r153;
	// end inline asm
	mov.b32 	%r154, %f235;
	// begin inline asm
	cvt.rn.bf16.f32 %rs90, %r154;
	// end inline asm
	mov.b32 	%r155, %f236;
	// begin inline asm
	cvt.rn.bf16.f32 %rs91, %r155;
	// end inline asm
	mov.b32 	%r156, %f237;
	// begin inline asm
	cvt.rn.bf16.f32 %rs92, %r156;
	// end inline asm
	mov.b32 	%r157, %f238;
	// begin inline asm
	cvt.rn.bf16.f32 %rs93, %r157;
	// end inline asm
	mov.b32 	%r158, %f239;
	// begin inline asm
	cvt.rn.bf16.f32 %rs94, %r158;
	// end inline asm
	mov.b32 	%r159, %f240;
	// begin inline asm
	cvt.rn.bf16.f32 %rs95, %r159;
	// end inline asm
	mov.b32 	%r160, %f241;
	// begin inline asm
	cvt.rn.bf16.f32 %rs96, %r160;
	// end inline asm
	add.s64 	%rd47, %rd20, %rd36;
	add.s64 	%rd16, %rd47, %rd33;
	add.s64 	%rd17, %rd16, 1024;
	mov.b32 	%r161, {%rs81, %rs82};
	mov.b32 	%r162, {%rs83, %rs84};
	mov.b32 	%r163, {%rs85, %rs86};
	mov.b32 	%r164, {%rs87, %rs88};
	// begin inline asm
	st.global.v4.b32 [ %rd16 + 0 ], { %r161, %r162, %r163, %r164 };
	// end inline asm
	mov.b32 	%r165, {%rs89, %rs90};
	mov.b32 	%r166, {%rs91, %rs92};
	mov.b32 	%r167, {%rs93, %rs94};
	mov.b32 	%r168, {%rs95, %rs96};
	// begin inline asm
	st.global.v4.b32 [ %rd17 + 0 ], { %r165, %r166, %r167, %r168 };
	// end inline asm
	ret;

}
	// .globl	fusion_340
.visible .entry fusion_340(
	.param .u64 .ptr .align 16 fusion_340_param_0,
	.param .u64 .ptr .align 16 fusion_340_param_1,
	.param .u64 .ptr .align 128 fusion_340_param_2,
	.param .u64 .ptr .align 128 fusion_340_param_3,
	.param .u64 .ptr .align 128 fusion_340_param_4,
	.param .u64 .ptr .align 128 fusion_340_param_5,
	.param .u64 .ptr .align 128 fusion_340_param_6,
	.param .u64 .ptr .align 128 fusion_340_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<129>;
	.reg .b32 	%r<237>;
	.reg .f32 	%f<306>;
	.reg .b64 	%rd<55>;

	ld.param.u64 	%rd22, [fusion_340_param_0];
	ld.param.u64 	%rd23, [fusion_340_param_7];
	cvta.to.global.u64 	%rd24, %rd23;
	ld.param.u64 	%rd25, [fusion_340_param_1];
	ld.param.u64 	%rd26, [fusion_340_param_6];
	cvta.to.global.u64 	%rd27, %rd26;
	ld.param.u64 	%rd28, [fusion_340_param_2];
	ld.param.u64 	%rd29, [fusion_340_param_5];
	cvta.to.global.u64 	%rd30, %rd29;
	ld.param.u64 	%rd31, [fusion_340_param_3];
	ld.param.u64 	%rd32, [fusion_340_param_4];
	cvta.to.global.u64 	%rd33, %rd32;
	cvta.to.global.u64 	%rd34, %rd31;
	cvta.to.global.u64 	%rd35, %rd28;
	cvta.to.global.u64 	%rd36, %rd25;
	cvta.to.global.u64 	%rd17, %rd22;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd37, %r1, 53248;
	add.s64 	%rd38, %rd34, %rd37;
	mov.u32 	%r217, %tid.x;
	and.b32  	%r218, %r217, 31;
	shl.b32 	%r219, %r217, 3;
	and.b32  	%r220, %r219, 248;
	setp.lt.u32 	%p4, %r217, 32;
	selp.b32 	%r221, 0, 256, %p4;
	or.b32  	%r222, %r220, %r221;
	mul.wide.u32 	%rd39, %r222, 2;
	add.s64 	%rd40, %rd38, %rd39;
	add.s64 	%rd1, %rd40, 22528;
	add.s64 	%rd2, %rd40, 23552;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd41, %r1, 1024;
	shl.b64 	%rd42, %rd41, 1;
	add.s64 	%rd43, %rd35, %rd42;
	add.s64 	%rd3, %rd43, %rd39;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	add.s64 	%rd5, %rd40, 24576;
	add.s64 	%rd6, %rd40, 25600;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r50;
	mov.b32 	{%rs35, %rs36}, %r51;
	mov.b32 	{%rs37, %rs38}, %r52;
	mov.b32 	{%rs39, %rs40}, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r54;
	mov.b32 	{%rs43, %rs44}, %r55;
	mov.b32 	{%rs45, %rs46}, %r56;
	mov.b32 	{%rs47, %rs48}, %r57;
	// begin inline asm
	cvt.f32.bf16 %r58, %rs33;
	// end inline asm
	mov.b32 	%f33, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs34;
	// end inline asm
	mov.b32 	%f34, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs35;
	// end inline asm
	mov.b32 	%f35, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs36;
	// end inline asm
	mov.b32 	%f36, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs37;
	// end inline asm
	mov.b32 	%f37, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs38;
	// end inline asm
	mov.b32 	%f38, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs39;
	// end inline asm
	mov.b32 	%f39, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs40;
	// end inline asm
	mov.b32 	%f40, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs41;
	// end inline asm
	mov.b32 	%f41, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs42;
	// end inline asm
	mov.b32 	%f42, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs43;
	// end inline asm
	mov.b32 	%f43, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs44;
	// end inline asm
	mov.b32 	%f44, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs45;
	// end inline asm
	mov.b32 	%f45, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs46;
	// end inline asm
	mov.b32 	%f46, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs47;
	// end inline asm
	mov.b32 	%f47, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs48;
	// end inline asm
	mov.b32 	%f48, %r73;
	add.s64 	%rd44, %rd27, %rd42;
	add.s64 	%rd7, %rd44, %rd39;
	add.s64 	%rd8, %rd7, 1024;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	ld.global.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs49, %rs50}, %r74;
	mov.b32 	{%rs51, %rs52}, %r75;
	mov.b32 	{%rs53, %rs54}, %r76;
	mov.b32 	{%rs55, %rs56}, %r77;
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	ld.global.v4.b32 { %r78, %r79, %r80, %r81 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	{%rs57, %rs58}, %r78;
	mov.b32 	{%rs59, %rs60}, %r79;
	mov.b32 	{%rs61, %rs62}, %r80;
	mov.b32 	{%rs63, %rs64}, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs49;
	// end inline asm
	mov.b32 	%f49, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs50;
	// end inline asm
	mov.b32 	%f50, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs51;
	// end inline asm
	mov.b32 	%f51, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs52;
	// end inline asm
	mov.b32 	%f52, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs53;
	// end inline asm
	mov.b32 	%f53, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs54;
	// end inline asm
	mov.b32 	%f54, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs55;
	// end inline asm
	mov.b32 	%f55, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs56;
	// end inline asm
	mov.b32 	%f56, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs57;
	// end inline asm
	mov.b32 	%f57, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs58;
	// end inline asm
	mov.b32 	%f58, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs59;
	// end inline asm
	mov.b32 	%f59, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs60;
	// end inline asm
	mov.b32 	%f60, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs61;
	// end inline asm
	mov.b32 	%f61, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs62;
	// end inline asm
	mov.b32 	%f62, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs63;
	// end inline asm
	mov.b32 	%f63, %r96;
	// begin inline asm
	cvt.f32.bf16 %r97, %rs64;
	// end inline asm
	mov.b32 	%f64, %r97;
	add.s64 	%rd9, %rd40, 26624;
	add.s64 	%rd10, %rd40, 27648;
	// begin inline asm
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	ld.global.v4.b32 { %r98, %r99, %r100, %r101 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	{%rs65, %rs66}, %r98;
	mov.b32 	{%rs67, %rs68}, %r99;
	mov.b32 	{%rs69, %rs70}, %r100;
	mov.b32 	{%rs71, %rs72}, %r101;
	// begin inline asm
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	ld.global.v4.b32 { %r102, %r103, %r104, %r105 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	{%rs73, %rs74}, %r102;
	mov.b32 	{%rs75, %rs76}, %r103;
	mov.b32 	{%rs77, %rs78}, %r104;
	mov.b32 	{%rs79, %rs80}, %r105;
	// begin inline asm
	cvt.f32.bf16 %r106, %rs65;
	// end inline asm
	mov.b32 	%f65, %r106;
	// begin inline asm
	cvt.f32.bf16 %r107, %rs66;
	// end inline asm
	mov.b32 	%f66, %r107;
	// begin inline asm
	cvt.f32.bf16 %r108, %rs67;
	// end inline asm
	mov.b32 	%f67, %r108;
	// begin inline asm
	cvt.f32.bf16 %r109, %rs68;
	// end inline asm
	mov.b32 	%f68, %r109;
	// begin inline asm
	cvt.f32.bf16 %r110, %rs69;
	// end inline asm
	mov.b32 	%f69, %r110;
	// begin inline asm
	cvt.f32.bf16 %r111, %rs70;
	// end inline asm
	mov.b32 	%f70, %r111;
	// begin inline asm
	cvt.f32.bf16 %r112, %rs71;
	// end inline asm
	mov.b32 	%f71, %r112;
	// begin inline asm
	cvt.f32.bf16 %r113, %rs72;
	// end inline asm
	mov.b32 	%f72, %r113;
	// begin inline asm
	cvt.f32.bf16 %r114, %rs73;
	// end inline asm
	mov.b32 	%f73, %r114;
	// begin inline asm
	cvt.f32.bf16 %r115, %rs74;
	// end inline asm
	mov.b32 	%f74, %r115;
	// begin inline asm
	cvt.f32.bf16 %r116, %rs75;
	// end inline asm
	mov.b32 	%f75, %r116;
	// begin inline asm
	cvt.f32.bf16 %r117, %rs76;
	// end inline asm
	mov.b32 	%f76, %r117;
	// begin inline asm
	cvt.f32.bf16 %r118, %rs77;
	// end inline asm
	mov.b32 	%f77, %r118;
	// begin inline asm
	cvt.f32.bf16 %r119, %rs78;
	// end inline asm
	mov.b32 	%f78, %r119;
	// begin inline asm
	cvt.f32.bf16 %r120, %rs79;
	// end inline asm
	mov.b32 	%f79, %r120;
	// begin inline asm
	cvt.f32.bf16 %r121, %rs80;
	// end inline asm
	mov.b32 	%f80, %r121;
	add.s64 	%rd45, %rd30, %rd42;
	add.s64 	%rd11, %rd45, %rd39;
	add.s64 	%rd12, %rd11, 1024;
	// begin inline asm
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	mov.u32 %r125, 0x0;
	ld.global.v4.b32 { %r122, %r123, %r124, %r125 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	{%rs81, %rs82}, %r122;
	mov.b32 	{%rs83, %rs84}, %r123;
	mov.b32 	{%rs85, %rs86}, %r124;
	mov.b32 	{%rs87, %rs88}, %r125;
	// begin inline asm
	mov.u32 %r126, 0x0;
	mov.u32 %r127, 0x0;
	mov.u32 %r128, 0x0;
	mov.u32 %r129, 0x0;
	ld.global.v4.b32 { %r126, %r127, %r128, %r129 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	{%rs89, %rs90}, %r126;
	mov.b32 	{%rs91, %rs92}, %r127;
	mov.b32 	{%rs93, %rs94}, %r128;
	mov.b32 	{%rs95, %rs96}, %r129;
	// begin inline asm
	cvt.f32.bf16 %r130, %rs81;
	// end inline asm
	mov.b32 	%f81, %r130;
	// begin inline asm
	cvt.f32.bf16 %r131, %rs82;
	// end inline asm
	mov.b32 	%f82, %r131;
	// begin inline asm
	cvt.f32.bf16 %r132, %rs83;
	// end inline asm
	mov.b32 	%f83, %r132;
	// begin inline asm
	cvt.f32.bf16 %r133, %rs84;
	// end inline asm
	mov.b32 	%f84, %r133;
	// begin inline asm
	cvt.f32.bf16 %r134, %rs85;
	// end inline asm
	mov.b32 	%f85, %r134;
	// begin inline asm
	cvt.f32.bf16 %r135, %rs86;
	// end inline asm
	mov.b32 	%f86, %r135;
	// begin inline asm
	cvt.f32.bf16 %r136, %rs87;
	// end inline asm
	mov.b32 	%f87, %r136;
	// begin inline asm
	cvt.f32.bf16 %r137, %rs88;
	// end inline asm
	mov.b32 	%f88, %r137;
	// begin inline asm
	cvt.f32.bf16 %r138, %rs89;
	// end inline asm
	mov.b32 	%f89, %r138;
	// begin inline asm
	cvt.f32.bf16 %r139, %rs90;
	// end inline asm
	mov.b32 	%f90, %r139;
	// begin inline asm
	cvt.f32.bf16 %r140, %rs91;
	// end inline asm
	mov.b32 	%f91, %r140;
	// begin inline asm
	cvt.f32.bf16 %r141, %rs92;
	// end inline asm
	mov.b32 	%f92, %r141;
	// begin inline asm
	cvt.f32.bf16 %r142, %rs93;
	// end inline asm
	mov.b32 	%f93, %r142;
	// begin inline asm
	cvt.f32.bf16 %r143, %rs94;
	// end inline asm
	mov.b32 	%f94, %r143;
	// begin inline asm
	cvt.f32.bf16 %r144, %rs95;
	// end inline asm
	mov.b32 	%f95, %r144;
	// begin inline asm
	cvt.f32.bf16 %r145, %rs96;
	// end inline asm
	mov.b32 	%f96, %r145;
	shl.b64 	%rd46, %rd41, 2;
	add.s64 	%rd47, %rd33, %rd46;
	mul.wide.u32 	%rd48, %r222, 4;
	add.s64 	%rd13, %rd47, %rd48;
	add.s64 	%rd14, %rd13, 16;
	add.s64 	%rd15, %rd13, 2048;
	add.s64 	%rd16, %rd13, 2064;
	// begin inline asm
	mov.u32 %r146, 0x0;
	mov.u32 %r147, 0x0;
	mov.u32 %r148, 0x0;
	mov.u32 %r149, 0x0;
	ld.global.v4.b32 { %r146, %r147, %r148, %r149 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f97, %r146;
	mov.b32 	%f98, %r147;
	mov.b32 	%f99, %r148;
	mov.b32 	%f100, %r149;
	// begin inline asm
	mov.u32 %r150, 0x0;
	mov.u32 %r151, 0x0;
	mov.u32 %r152, 0x0;
	mov.u32 %r153, 0x0;
	ld.global.v4.b32 { %r150, %r151, %r152, %r153 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f101, %r150;
	mov.b32 	%f102, %r151;
	mov.b32 	%f103, %r152;
	mov.b32 	%f104, %r153;
	// begin inline asm
	mov.u32 %r154, 0x0;
	mov.u32 %r155, 0x0;
	mov.u32 %r156, 0x0;
	mov.u32 %r157, 0x0;
	ld.global.v4.b32 { %r154, %r155, %r156, %r157 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f105, %r154;
	mov.b32 	%f106, %r155;
	mov.b32 	%f107, %r156;
	mov.b32 	%f108, %r157;
	// begin inline asm
	mov.u32 %r158, 0x0;
	mov.u32 %r159, 0x0;
	mov.u32 %r160, 0x0;
	mov.u32 %r161, 0x0;
	ld.global.v4.b32 { %r158, %r159, %r160, %r161 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f109, %r158;
	mov.b32 	%f110, %r159;
	mov.b32 	%f111, %r160;
	mov.b32 	%f112, %r161;
	add.rn.f32 	%f113, %f81, %f97;
	add.rn.f32 	%f114, %f82, %f98;
	add.rn.f32 	%f115, %f83, %f99;
	add.rn.f32 	%f116, %f84, %f100;
	add.rn.f32 	%f117, %f85, %f101;
	add.rn.f32 	%f118, %f86, %f102;
	add.rn.f32 	%f119, %f87, %f103;
	add.rn.f32 	%f120, %f88, %f104;
	add.rn.f32 	%f121, %f89, %f105;
	add.rn.f32 	%f122, %f90, %f106;
	add.rn.f32 	%f123, %f91, %f107;
	add.rn.f32 	%f124, %f92, %f108;
	add.rn.f32 	%f125, %f93, %f109;
	add.rn.f32 	%f126, %f94, %f110;
	add.rn.f32 	%f127, %f95, %f111;
	add.rn.f32 	%f128, %f96, %f112;
	add.rn.f32 	%f129, %f65, %f113;
	add.rn.f32 	%f130, %f66, %f114;
	add.rn.f32 	%f131, %f67, %f115;
	add.rn.f32 	%f132, %f68, %f116;
	add.rn.f32 	%f133, %f69, %f117;
	add.rn.f32 	%f134, %f70, %f118;
	add.rn.f32 	%f135, %f71, %f119;
	add.rn.f32 	%f136, %f72, %f120;
	add.rn.f32 	%f137, %f73, %f121;
	add.rn.f32 	%f138, %f74, %f122;
	add.rn.f32 	%f139, %f75, %f123;
	add.rn.f32 	%f140, %f76, %f124;
	add.rn.f32 	%f141, %f77, %f125;
	add.rn.f32 	%f142, %f78, %f126;
	add.rn.f32 	%f143, %f79, %f127;
	add.rn.f32 	%f144, %f80, %f128;
	add.rn.f32 	%f145, %f49, %f129;
	add.rn.f32 	%f146, %f50, %f130;
	add.rn.f32 	%f147, %f51, %f131;
	add.rn.f32 	%f148, %f52, %f132;
	add.rn.f32 	%f149, %f53, %f133;
	add.rn.f32 	%f150, %f54, %f134;
	add.rn.f32 	%f151, %f55, %f135;
	add.rn.f32 	%f152, %f56, %f136;
	add.rn.f32 	%f153, %f57, %f137;
	add.rn.f32 	%f154, %f58, %f138;
	add.rn.f32 	%f155, %f59, %f139;
	add.rn.f32 	%f156, %f60, %f140;
	add.rn.f32 	%f157, %f61, %f141;
	add.rn.f32 	%f158, %f62, %f142;
	add.rn.f32 	%f159, %f63, %f143;
	add.rn.f32 	%f160, %f64, %f144;
	add.rn.f32 	%f161, %f33, %f145;
	add.rn.f32 	%f162, %f34, %f146;
	add.rn.f32 	%f163, %f35, %f147;
	add.rn.f32 	%f164, %f36, %f148;
	add.rn.f32 	%f165, %f37, %f149;
	add.rn.f32 	%f166, %f38, %f150;
	add.rn.f32 	%f167, %f39, %f151;
	add.rn.f32 	%f168, %f40, %f152;
	add.rn.f32 	%f169, %f41, %f153;
	add.rn.f32 	%f170, %f42, %f154;
	add.rn.f32 	%f171, %f43, %f155;
	add.rn.f32 	%f172, %f44, %f156;
	add.rn.f32 	%f173, %f45, %f157;
	add.rn.f32 	%f174, %f46, %f158;
	add.rn.f32 	%f175, %f47, %f159;
	add.rn.f32 	%f176, %f48, %f160;
	add.rn.f32 	%f177, %f17, %f161;
	add.rn.f32 	%f178, %f18, %f162;
	add.rn.f32 	%f179, %f19, %f163;
	add.rn.f32 	%f180, %f20, %f164;
	add.rn.f32 	%f181, %f21, %f165;
	add.rn.f32 	%f182, %f22, %f166;
	add.rn.f32 	%f183, %f23, %f167;
	add.rn.f32 	%f184, %f24, %f168;
	add.rn.f32 	%f185, %f25, %f169;
	add.rn.f32 	%f186, %f26, %f170;
	add.rn.f32 	%f187, %f27, %f171;
	add.rn.f32 	%f188, %f28, %f172;
	add.rn.f32 	%f189, %f29, %f173;
	add.rn.f32 	%f190, %f30, %f174;
	add.rn.f32 	%f191, %f31, %f175;
	add.rn.f32 	%f192, %f32, %f176;
	add.rn.f32 	%f193, %f1, %f177;
	add.rn.f32 	%f194, %f2, %f178;
	add.rn.f32 	%f195, %f3, %f179;
	add.rn.f32 	%f196, %f4, %f180;
	add.rn.f32 	%f197, %f5, %f181;
	add.rn.f32 	%f198, %f6, %f182;
	add.rn.f32 	%f199, %f7, %f183;
	add.rn.f32 	%f200, %f8, %f184;
	add.rn.f32 	%f201, %f9, %f185;
	add.rn.f32 	%f202, %f10, %f186;
	add.rn.f32 	%f203, %f11, %f187;
	add.rn.f32 	%f204, %f12, %f188;
	add.rn.f32 	%f205, %f13, %f189;
	add.rn.f32 	%f206, %f14, %f190;
	add.rn.f32 	%f207, %f15, %f191;
	add.rn.f32 	%f208, %f16, %f192;
	mul.rn.f32 	%f209, %f193, %f193;
	mul.rn.f32 	%f210, %f194, %f194;
	mul.rn.f32 	%f211, %f195, %f195;
	mul.rn.f32 	%f212, %f196, %f196;
	mul.rn.f32 	%f213, %f197, %f197;
	mul.rn.f32 	%f214, %f198, %f198;
	mul.rn.f32 	%f215, %f199, %f199;
	mul.rn.f32 	%f216, %f200, %f200;
	mul.rn.f32 	%f217, %f201, %f201;
	mul.rn.f32 	%f218, %f202, %f202;
	mul.rn.f32 	%f219, %f203, %f203;
	mul.rn.f32 	%f220, %f204, %f204;
	mul.rn.f32 	%f221, %f205, %f205;
	mul.rn.f32 	%f222, %f206, %f206;
	mul.rn.f32 	%f223, %f207, %f207;
	mul.rn.f32 	%f224, %f208, %f208;
	add.rn.f32 	%f225, %f209, %f210;
	add.rn.f32 	%f226, %f211, %f225;
	add.rn.f32 	%f227, %f212, %f226;
	add.rn.f32 	%f228, %f213, %f227;
	add.rn.f32 	%f229, %f214, %f228;
	add.rn.f32 	%f230, %f215, %f229;
	add.rn.f32 	%f231, %f216, %f230;
	add.rn.f32 	%f232, %f217, %f231;
	add.rn.f32 	%f233, %f218, %f232;
	add.rn.f32 	%f234, %f219, %f233;
	add.rn.f32 	%f235, %f220, %f234;
	add.rn.f32 	%f236, %f221, %f235;
	add.rn.f32 	%f237, %f222, %f236;
	add.rn.f32 	%f238, %f223, %f237;
	add.rn.f32 	%f239, %f224, %f238;
	mov.b32 	%r223, %f239;
	shfl.sync.bfly.b32	%r224, %r223, 16, 31, -1;
	mov.b32 	%f240, %r224;
	add.rn.f32 	%f241, %f239, %f240;
	mov.b32 	%r225, %f241;
	shfl.sync.bfly.b32	%r226, %r225, 8, 31, -1;
	mov.b32 	%f242, %r226;
	add.rn.f32 	%f243, %f241, %f242;
	mov.b32 	%r227, %f243;
	shfl.sync.bfly.b32	%r228, %r227, 4, 31, -1;
	mov.b32 	%f244, %r228;
	add.rn.f32 	%f245, %f243, %f244;
	mov.b32 	%r229, %f245;
	shfl.sync.bfly.b32	%r230, %r229, 2, 31, -1;
	mov.b32 	%f246, %r230;
	add.rn.f32 	%f247, %f245, %f246;
	mov.b32 	%r231, %f247;
	shfl.sync.bfly.b32	%r232, %r231, 1, 31, -1;
	mov.b32 	%f248, %r232;
	add.rn.f32 	%f249, %f247, %f248;
	setp.eq.s32 	%p1, %r218, 0;
	shr.u32 	%r233, %r217, 3;
	and.b32  	%r234, %r233, 4;
	cvt.u64.u32 	%rd49, %r234;
	mov.u64 	%rd50, global_smem;
	add.s64 	%rd51, %rd50, %rd49;
	mov.b32 	%r163, %f249;
	cvt.u32.u64 	%r162, %rd51;
	// begin inline asm
	@%p1 st.shared.b32 [ %r162 + 0 ], %r163;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r217, 2;
	shl.b32 	%r235, %r217, 2;
	cvt.u64.u32 	%rd52, %r235;
	add.s64 	%rd53, %rd50, %rd52;
	cvt.u32.u64 	%r165, %rd53;
	// begin inline asm
	@%p2 ld.shared.b32 %r164, [ %r165 + 0 ];
	// end inline asm
	mov.b32 	%f250, %r164;
	shfl.sync.bfly.b32	%r236, %r164, 1, 31, -1;
	mov.b32 	%f251, %r236;
	add.rn.f32 	%f252, %f250, %f251;
	setp.eq.s32 	%p3, %r217, 0;
	mov.b32 	%r167, %f252;
	// begin inline asm
	@%p3 st.shared.b32 [ %r165 + 0 ], %r167;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f253, [global_smem];
	mul.rn.f32 	%f254, %f253, 0f3A800000;
	// begin inline asm
	mov.u32 %r168, 0x0;
	ld.global.b32 { %r168 }, [ %rd17 + 0 ];
	// end inline asm
	mov.b32 	%f255, %r168;
	add.rn.f32 	%f256, %f254, %f255;
	rsqrt.approx.f32 	%f257, %f256;
	mul.rn.f32 	%f258, %f193, %f257;
	mul.rn.f32 	%f259, %f194, %f257;
	mul.rn.f32 	%f260, %f195, %f257;
	mul.rn.f32 	%f261, %f196, %f257;
	mul.rn.f32 	%f262, %f197, %f257;
	mul.rn.f32 	%f263, %f198, %f257;
	mul.rn.f32 	%f264, %f199, %f257;
	mul.rn.f32 	%f265, %f200, %f257;
	mul.rn.f32 	%f266, %f201, %f257;
	mul.rn.f32 	%f267, %f202, %f257;
	mul.rn.f32 	%f268, %f203, %f257;
	mul.rn.f32 	%f269, %f204, %f257;
	mul.rn.f32 	%f270, %f205, %f257;
	mul.rn.f32 	%f271, %f206, %f257;
	mul.rn.f32 	%f272, %f207, %f257;
	mul.rn.f32 	%f273, %f208, %f257;
	add.s64 	%rd18, %rd36, %rd39;
	add.s64 	%rd19, %rd18, 1024;
	// begin inline asm
	mov.u32 %r169, 0x0;
	mov.u32 %r170, 0x0;
	mov.u32 %r171, 0x0;
	mov.u32 %r172, 0x0;
	ld.global.v4.b32 { %r169, %r170, %r171, %r172 }, [ %rd18 + 0 ];
	// end inline asm
	mov.b32 	{%rs97, %rs98}, %r169;
	mov.b32 	{%rs99, %rs100}, %r170;
	mov.b32 	{%rs101, %rs102}, %r171;
	mov.b32 	{%rs103, %rs104}, %r172;
	// begin inline asm
	mov.u32 %r173, 0x0;
	mov.u32 %r174, 0x0;
	mov.u32 %r175, 0x0;
	mov.u32 %r176, 0x0;
	ld.global.v4.b32 { %r173, %r174, %r175, %r176 }, [ %rd19 + 0 ];
	// end inline asm
	mov.b32 	{%rs105, %rs106}, %r173;
	mov.b32 	{%rs107, %rs108}, %r174;
	mov.b32 	{%rs109, %rs110}, %r175;
	mov.b32 	{%rs111, %rs112}, %r176;
	// begin inline asm
	cvt.f32.bf16 %r177, %rs97;
	// end inline asm
	mov.b32 	%f274, %r177;
	// begin inline asm
	cvt.f32.bf16 %r178, %rs98;
	// end inline asm
	mov.b32 	%f275, %r178;
	// begin inline asm
	cvt.f32.bf16 %r179, %rs99;
	// end inline asm
	mov.b32 	%f276, %r179;
	// begin inline asm
	cvt.f32.bf16 %r180, %rs100;
	// end inline asm
	mov.b32 	%f277, %r180;
	// begin inline asm
	cvt.f32.bf16 %r181, %rs101;
	// end inline asm
	mov.b32 	%f278, %r181;
	// begin inline asm
	cvt.f32.bf16 %r182, %rs102;
	// end inline asm
	mov.b32 	%f279, %r182;
	// begin inline asm
	cvt.f32.bf16 %r183, %rs103;
	// end inline asm
	mov.b32 	%f280, %r183;
	// begin inline asm
	cvt.f32.bf16 %r184, %rs104;
	// end inline asm
	mov.b32 	%f281, %r184;
	// begin inline asm
	cvt.f32.bf16 %r185, %rs105;
	// end inline asm
	mov.b32 	%f282, %r185;
	// begin inline asm
	cvt.f32.bf16 %r186, %rs106;
	// end inline asm
	mov.b32 	%f283, %r186;
	// begin inline asm
	cvt.f32.bf16 %r187, %rs107;
	// end inline asm
	mov.b32 	%f284, %r187;
	// begin inline asm
	cvt.f32.bf16 %r188, %rs108;
	// end inline asm
	mov.b32 	%f285, %r188;
	// begin inline asm
	cvt.f32.bf16 %r189, %rs109;
	// end inline asm
	mov.b32 	%f286, %r189;
	// begin inline asm
	cvt.f32.bf16 %r190, %rs110;
	// end inline asm
	mov.b32 	%f287, %r190;
	// begin inline asm
	cvt.f32.bf16 %r191, %rs111;
	// end inline asm
	mov.b32 	%f288, %r191;
	// begin inline asm
	cvt.f32.bf16 %r192, %rs112;
	// end inline asm
	mov.b32 	%f289, %r192;
	mul.rn.f32 	%f290, %f258, %f274;
	mul.rn.f32 	%f291, %f259, %f275;
	mul.rn.f32 	%f292, %f260, %f276;
	mul.rn.f32 	%f293, %f261, %f277;
	mul.rn.f32 	%f294, %f262, %f278;
	mul.rn.f32 	%f295, %f263, %f279;
	mul.rn.f32 	%f296, %f264, %f280;
	mul.rn.f32 	%f297, %f265, %f281;
	mul.rn.f32 	%f298, %f266, %f282;
	mul.rn.f32 	%f299, %f267, %f283;
	mul.rn.f32 	%f300, %f268, %f284;
	mul.rn.f32 	%f301, %f269, %f285;
	mul.rn.f32 	%f302, %f270, %f286;
	mul.rn.f32 	%f303, %f271, %f287;
	mul.rn.f32 	%f304, %f272, %f288;
	mul.rn.f32 	%f305, %f273, %f289;
	mov.b32 	%r193, %f290;
	// begin inline asm
	cvt.rn.bf16.f32 %rs113, %r193;
	// end inline asm
	mov.b32 	%r194, %f291;
	// begin inline asm
	cvt.rn.bf16.f32 %rs114, %r194;
	// end inline asm
	mov.b32 	%r195, %f292;
	// begin inline asm
	cvt.rn.bf16.f32 %rs115, %r195;
	// end inline asm
	mov.b32 	%r196, %f293;
	// begin inline asm
	cvt.rn.bf16.f32 %rs116, %r196;
	// end inline asm
	mov.b32 	%r197, %f294;
	// begin inline asm
	cvt.rn.bf16.f32 %rs117, %r197;
	// end inline asm
	mov.b32 	%r198, %f295;
	// begin inline asm
	cvt.rn.bf16.f32 %rs118, %r198;
	// end inline asm
	mov.b32 	%r199, %f296;
	// begin inline asm
	cvt.rn.bf16.f32 %rs119, %r199;
	// end inline asm
	mov.b32 	%r200, %f297;
	// begin inline asm
	cvt.rn.bf16.f32 %rs120, %r200;
	// end inline asm
	mov.b32 	%r201, %f298;
	// begin inline asm
	cvt.rn.bf16.f32 %rs121, %r201;
	// end inline asm
	mov.b32 	%r202, %f299;
	// begin inline asm
	cvt.rn.bf16.f32 %rs122, %r202;
	// end inline asm
	mov.b32 	%r203, %f300;
	// begin inline asm
	cvt.rn.bf16.f32 %rs123, %r203;
	// end inline asm
	mov.b32 	%r204, %f301;
	// begin inline asm
	cvt.rn.bf16.f32 %rs124, %r204;
	// end inline asm
	mov.b32 	%r205, %f302;
	// begin inline asm
	cvt.rn.bf16.f32 %rs125, %r205;
	// end inline asm
	mov.b32 	%r206, %f303;
	// begin inline asm
	cvt.rn.bf16.f32 %rs126, %r206;
	// end inline asm
	mov.b32 	%r207, %f304;
	// begin inline asm
	cvt.rn.bf16.f32 %rs127, %r207;
	// end inline asm
	mov.b32 	%r208, %f305;
	// begin inline asm
	cvt.rn.bf16.f32 %rs128, %r208;
	// end inline asm
	add.s64 	%rd54, %rd24, %rd42;
	add.s64 	%rd20, %rd54, %rd39;
	add.s64 	%rd21, %rd20, 1024;
	mov.b32 	%r209, {%rs113, %rs114};
	mov.b32 	%r210, {%rs115, %rs116};
	mov.b32 	%r211, {%rs117, %rs118};
	mov.b32 	%r212, {%rs119, %rs120};
	// begin inline asm
	st.global.v4.b32 [ %rd20 + 0 ], { %r209, %r210, %r211, %r212 };
	// end inline asm
	mov.b32 	%r213, {%rs121, %rs122};
	mov.b32 	%r214, {%rs123, %rs124};
	mov.b32 	%r215, {%rs125, %rs126};
	mov.b32 	%r216, {%rs127, %rs128};
	// begin inline asm
	st.global.v4.b32 [ %rd21 + 0 ], { %r213, %r214, %r215, %r216 };
	// end inline asm
	ret;

}
	// .globl	loop_add_fusion_3
.visible .entry loop_add_fusion_3(
	.param .u64 .ptr .align 128 loop_add_fusion_3_param_0,
	.param .u64 .ptr .align 128 loop_add_fusion_3_param_1,
	.param .u64 .ptr .align 128 loop_add_fusion_3_param_2,
	.param .u64 .ptr .align 128 loop_add_fusion_3_param_3,
	.param .u64 .ptr .align 128 loop_add_fusion_3_param_4,
	.param .u64 .ptr .align 128 loop_add_fusion_3_param_5
)
.reqntid 128, 1, 1
{
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<9>;
	.reg .f32 	%f<18>;
	.reg .b64 	%rd<25>;

	ld.param.u64 	%rd1, [loop_add_fusion_3_param_0];
	ld.param.u64 	%rd2, [loop_add_fusion_3_param_5];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.param.u64 	%rd4, [loop_add_fusion_3_param_1];
	ld.param.u64 	%rd5, [loop_add_fusion_3_param_4];
	cvta.to.global.u64 	%rd6, %rd5;
	ld.param.u64 	%rd7, [loop_add_fusion_3_param_2];
	ld.param.u64 	%rd8, [loop_add_fusion_3_param_3];
	cvta.to.global.u64 	%rd9, %rd8;
	cvta.to.global.u64 	%rd10, %rd7;
	cvta.to.global.u64 	%rd11, %rd4;
	cvta.to.global.u64 	%rd12, %rd1;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shr.u32 	%r3, %r2, 3;
	shl.b32 	%r4, %r2, 7;
	and.b32  	%r5, %r4, 896;
	or.b32  	%r6, %r5, %r1;
	or.b32  	%r7, %r4, %r1;
	mul.wide.u32 	%rd13, %r7, 2;
	add.s64 	%rd14, %rd6, %rd13;
	ld.global.nc.u16 	%rs1, [%rd14];
	cvt.f32.bf16 	%f1, %rs1;
	mul.wide.u32 	%rd15, %r7, 4;
	add.s64 	%rd16, %rd9, %rd15;
	ld.global.f32 	%f2, [%rd16];
	add.s64 	%rd17, %rd3, %rd13;
	ld.global.nc.u16 	%rs2, [%rd17];
	mul.lo.s32 	%r8, %r3, 26624;
	cvt.u64.u32 	%rd18, %r6;
	cvt.u64.u32 	%rd19, %r8;
	add.s64 	%rd20, %rd19, %rd18;
	shl.b64 	%rd21, %rd20, 1;
	add.s64 	%rd22, %rd12, %rd21;
	ld.global.nc.u16 	%rs3, [%rd22+26624];
	cvt.f32.bf16 	%f3, %rs3;
	add.rn.f32 	%f4, %f2, %f1;
	cvt.f32.bf16 	%f5, %rs2;
	add.rn.f32 	%f6, %f4, %f3;
	add.s64 	%rd23, %rd10, %rd13;
	ld.global.nc.u16 	%rs4, [%rd23];
	ld.global.nc.u16 	%rs5, [%rd22+24576];
	cvt.f32.bf16 	%f7, %rs5;
	add.rn.f32 	%f8, %f6, %f5;
	cvt.f32.bf16 	%f9, %rs4;
	add.rn.f32 	%f10, %f8, %f7;
	add.s64 	%rd24, %rd11, %rd13;
	ld.global.nc.u16 	%rs6, [%rd24];
	ld.global.nc.u16 	%rs7, [%rd22+22528];
	cvt.f32.bf16 	%f11, %rs7;
	add.rn.f32 	%f12, %f10, %f9;
	cvt.f32.bf16 	%f13, %rs6;
	add.rn.f32 	%f14, %f12, %f11;
	ld.global.nc.u16 	%rs8, [%rd22+20480];
	cvt.f32.bf16 	%f15, %rs8;
	add.rn.f32 	%f16, %f14, %f13;
	add.rn.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd16], %f17;
	ret;

}
	// .globl	fusion_342
.visible .entry fusion_342(
	.param .u64 .ptr .align 16 fusion_342_param_0,
	.param .u64 .ptr .align 16 fusion_342_param_1,
	.param .u64 .ptr .align 128 fusion_342_param_2,
	.param .u64 .ptr .align 128 fusion_342_param_3,
	.param .u64 .ptr .align 128 fusion_342_param_4,
	.param .u64 .ptr .align 128 fusion_342_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<65>;
	.reg .b32 	%r<141>;
	.reg .f32 	%f<178>;
	.reg .b64 	%rd<41>;

	ld.param.u64 	%rd14, [fusion_342_param_0];
	ld.param.u64 	%rd15, [fusion_342_param_5];
	cvta.to.global.u64 	%rd16, %rd15;
	ld.param.u64 	%rd17, [fusion_342_param_1];
	ld.param.u64 	%rd18, [fusion_342_param_4];
	cvta.to.global.u64 	%rd19, %rd18;
	ld.param.u64 	%rd20, [fusion_342_param_2];
	ld.param.u64 	%rd21, [fusion_342_param_3];
	cvta.to.global.u64 	%rd22, %rd21;
	cvta.to.global.u64 	%rd23, %rd20;
	cvta.to.global.u64 	%rd24, %rd17;
	cvta.to.global.u64 	%rd9, %rd14;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd25, %r1, 53248;
	add.s64 	%rd26, %rd19, %rd25;
	mov.u32 	%r121, %tid.x;
	and.b32  	%r122, %r121, 31;
	shl.b32 	%r123, %r121, 3;
	and.b32  	%r124, %r123, 248;
	setp.lt.u32 	%p4, %r121, 32;
	selp.b32 	%r125, 0, 256, %p4;
	or.b32  	%r126, %r124, %r125;
	mul.wide.u32 	%rd27, %r126, 2;
	add.s64 	%rd28, %rd26, %rd27;
	add.s64 	%rd1, %rd28, 18432;
	add.s64 	%rd2, %rd28, 19456;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd29, %r1, 1024;
	shl.b64 	%rd30, %rd29, 1;
	add.s64 	%rd31, %rd22, %rd30;
	add.s64 	%rd3, %rd31, %rd27;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	shl.b64 	%rd32, %rd29, 2;
	add.s64 	%rd33, %rd23, %rd32;
	mul.wide.u32 	%rd34, %r126, 4;
	add.s64 	%rd5, %rd33, %rd34;
	add.s64 	%rd6, %rd5, 16;
	add.s64 	%rd7, %rd5, 2048;
	add.s64 	%rd8, %rd5, 2064;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r50;
	mov.b32 	%f34, %r51;
	mov.b32 	%f35, %r52;
	mov.b32 	%f36, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f37, %r54;
	mov.b32 	%f38, %r55;
	mov.b32 	%f39, %r56;
	mov.b32 	%f40, %r57;
	// begin inline asm
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	ld.global.v4.b32 { %r58, %r59, %r60, %r61 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r58;
	mov.b32 	%f42, %r59;
	mov.b32 	%f43, %r60;
	mov.b32 	%f44, %r61;
	// begin inline asm
	mov.u32 %r62, 0x0;
	mov.u32 %r63, 0x0;
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	ld.global.v4.b32 { %r62, %r63, %r64, %r65 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f45, %r62;
	mov.b32 	%f46, %r63;
	mov.b32 	%f47, %r64;
	mov.b32 	%f48, %r65;
	add.rn.f32 	%f49, %f17, %f33;
	add.rn.f32 	%f50, %f18, %f34;
	add.rn.f32 	%f51, %f19, %f35;
	add.rn.f32 	%f52, %f20, %f36;
	add.rn.f32 	%f53, %f21, %f37;
	add.rn.f32 	%f54, %f22, %f38;
	add.rn.f32 	%f55, %f23, %f39;
	add.rn.f32 	%f56, %f24, %f40;
	add.rn.f32 	%f57, %f25, %f41;
	add.rn.f32 	%f58, %f26, %f42;
	add.rn.f32 	%f59, %f27, %f43;
	add.rn.f32 	%f60, %f28, %f44;
	add.rn.f32 	%f61, %f29, %f45;
	add.rn.f32 	%f62, %f30, %f46;
	add.rn.f32 	%f63, %f31, %f47;
	add.rn.f32 	%f64, %f32, %f48;
	add.rn.f32 	%f65, %f1, %f49;
	add.rn.f32 	%f66, %f2, %f50;
	add.rn.f32 	%f67, %f3, %f51;
	add.rn.f32 	%f68, %f4, %f52;
	add.rn.f32 	%f69, %f5, %f53;
	add.rn.f32 	%f70, %f6, %f54;
	add.rn.f32 	%f71, %f7, %f55;
	add.rn.f32 	%f72, %f8, %f56;
	add.rn.f32 	%f73, %f9, %f57;
	add.rn.f32 	%f74, %f10, %f58;
	add.rn.f32 	%f75, %f11, %f59;
	add.rn.f32 	%f76, %f12, %f60;
	add.rn.f32 	%f77, %f13, %f61;
	add.rn.f32 	%f78, %f14, %f62;
	add.rn.f32 	%f79, %f15, %f63;
	add.rn.f32 	%f80, %f16, %f64;
	mul.rn.f32 	%f81, %f65, %f65;
	mul.rn.f32 	%f82, %f66, %f66;
	mul.rn.f32 	%f83, %f67, %f67;
	mul.rn.f32 	%f84, %f68, %f68;
	mul.rn.f32 	%f85, %f69, %f69;
	mul.rn.f32 	%f86, %f70, %f70;
	mul.rn.f32 	%f87, %f71, %f71;
	mul.rn.f32 	%f88, %f72, %f72;
	mul.rn.f32 	%f89, %f73, %f73;
	mul.rn.f32 	%f90, %f74, %f74;
	mul.rn.f32 	%f91, %f75, %f75;
	mul.rn.f32 	%f92, %f76, %f76;
	mul.rn.f32 	%f93, %f77, %f77;
	mul.rn.f32 	%f94, %f78, %f78;
	mul.rn.f32 	%f95, %f79, %f79;
	mul.rn.f32 	%f96, %f80, %f80;
	add.rn.f32 	%f97, %f81, %f82;
	add.rn.f32 	%f98, %f83, %f97;
	add.rn.f32 	%f99, %f84, %f98;
	add.rn.f32 	%f100, %f85, %f99;
	add.rn.f32 	%f101, %f86, %f100;
	add.rn.f32 	%f102, %f87, %f101;
	add.rn.f32 	%f103, %f88, %f102;
	add.rn.f32 	%f104, %f89, %f103;
	add.rn.f32 	%f105, %f90, %f104;
	add.rn.f32 	%f106, %f91, %f105;
	add.rn.f32 	%f107, %f92, %f106;
	add.rn.f32 	%f108, %f93, %f107;
	add.rn.f32 	%f109, %f94, %f108;
	add.rn.f32 	%f110, %f95, %f109;
	add.rn.f32 	%f111, %f96, %f110;
	mov.b32 	%r127, %f111;
	shfl.sync.bfly.b32	%r128, %r127, 16, 31, -1;
	mov.b32 	%f112, %r128;
	add.rn.f32 	%f113, %f111, %f112;
	mov.b32 	%r129, %f113;
	shfl.sync.bfly.b32	%r130, %r129, 8, 31, -1;
	mov.b32 	%f114, %r130;
	add.rn.f32 	%f115, %f113, %f114;
	mov.b32 	%r131, %f115;
	shfl.sync.bfly.b32	%r132, %r131, 4, 31, -1;
	mov.b32 	%f116, %r132;
	add.rn.f32 	%f117, %f115, %f116;
	mov.b32 	%r133, %f117;
	shfl.sync.bfly.b32	%r134, %r133, 2, 31, -1;
	mov.b32 	%f118, %r134;
	add.rn.f32 	%f119, %f117, %f118;
	mov.b32 	%r135, %f119;
	shfl.sync.bfly.b32	%r136, %r135, 1, 31, -1;
	mov.b32 	%f120, %r136;
	add.rn.f32 	%f121, %f119, %f120;
	setp.eq.s32 	%p1, %r122, 0;
	shr.u32 	%r137, %r121, 3;
	and.b32  	%r138, %r137, 4;
	cvt.u64.u32 	%rd35, %r138;
	mov.u64 	%rd36, global_smem;
	add.s64 	%rd37, %rd36, %rd35;
	mov.b32 	%r67, %f121;
	cvt.u32.u64 	%r66, %rd37;
	// begin inline asm
	@%p1 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r121, 2;
	shl.b32 	%r139, %r121, 2;
	cvt.u64.u32 	%rd38, %r139;
	add.s64 	%rd39, %rd36, %rd38;
	cvt.u32.u64 	%r69, %rd39;
	// begin inline asm
	@%p2 ld.shared.b32 %r68, [ %r69 + 0 ];
	// end inline asm
	mov.b32 	%f122, %r68;
	shfl.sync.bfly.b32	%r140, %r68, 1, 31, -1;
	mov.b32 	%f123, %r140;
	add.rn.f32 	%f124, %f122, %f123;
	setp.eq.s32 	%p3, %r121, 0;
	mov.b32 	%r71, %f124;
	// begin inline asm
	@%p3 st.shared.b32 [ %r69 + 0 ], %r71;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f125, [global_smem];
	mul.rn.f32 	%f126, %f125, 0f3A800000;
	// begin inline asm
	mov.u32 %r72, 0x0;
	ld.global.b32 { %r72 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f127, %r72;
	add.rn.f32 	%f128, %f126, %f127;
	rsqrt.approx.f32 	%f129, %f128;
	mul.rn.f32 	%f130, %f65, %f129;
	mul.rn.f32 	%f131, %f66, %f129;
	mul.rn.f32 	%f132, %f67, %f129;
	mul.rn.f32 	%f133, %f68, %f129;
	mul.rn.f32 	%f134, %f69, %f129;
	mul.rn.f32 	%f135, %f70, %f129;
	mul.rn.f32 	%f136, %f71, %f129;
	mul.rn.f32 	%f137, %f72, %f129;
	mul.rn.f32 	%f138, %f73, %f129;
	mul.rn.f32 	%f139, %f74, %f129;
	mul.rn.f32 	%f140, %f75, %f129;
	mul.rn.f32 	%f141, %f76, %f129;
	mul.rn.f32 	%f142, %f77, %f129;
	mul.rn.f32 	%f143, %f78, %f129;
	mul.rn.f32 	%f144, %f79, %f129;
	mul.rn.f32 	%f145, %f80, %f129;
	add.s64 	%rd10, %rd24, %rd27;
	add.s64 	%rd11, %rd10, 1024;
	// begin inline asm
	mov.u32 %r73, 0x0;
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	ld.global.v4.b32 { %r73, %r74, %r75, %r76 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r73;
	mov.b32 	{%rs35, %rs36}, %r74;
	mov.b32 	{%rs37, %rs38}, %r75;
	mov.b32 	{%rs39, %rs40}, %r76;
	// begin inline asm
	mov.u32 %r77, 0x0;
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	ld.global.v4.b32 { %r77, %r78, %r79, %r80 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r77;
	mov.b32 	{%rs43, %rs44}, %r78;
	mov.b32 	{%rs45, %rs46}, %r79;
	mov.b32 	{%rs47, %rs48}, %r80;
	// begin inline asm
	cvt.f32.bf16 %r81, %rs33;
	// end inline asm
	mov.b32 	%f146, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs34;
	// end inline asm
	mov.b32 	%f147, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs35;
	// end inline asm
	mov.b32 	%f148, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs36;
	// end inline asm
	mov.b32 	%f149, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs37;
	// end inline asm
	mov.b32 	%f150, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs38;
	// end inline asm
	mov.b32 	%f151, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs39;
	// end inline asm
	mov.b32 	%f152, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs40;
	// end inline asm
	mov.b32 	%f153, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs41;
	// end inline asm
	mov.b32 	%f154, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs42;
	// end inline asm
	mov.b32 	%f155, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs43;
	// end inline asm
	mov.b32 	%f156, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs44;
	// end inline asm
	mov.b32 	%f157, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs45;
	// end inline asm
	mov.b32 	%f158, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs46;
	// end inline asm
	mov.b32 	%f159, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs47;
	// end inline asm
	mov.b32 	%f160, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs48;
	// end inline asm
	mov.b32 	%f161, %r96;
	mul.rn.f32 	%f162, %f130, %f146;
	mul.rn.f32 	%f163, %f131, %f147;
	mul.rn.f32 	%f164, %f132, %f148;
	mul.rn.f32 	%f165, %f133, %f149;
	mul.rn.f32 	%f166, %f134, %f150;
	mul.rn.f32 	%f167, %f135, %f151;
	mul.rn.f32 	%f168, %f136, %f152;
	mul.rn.f32 	%f169, %f137, %f153;
	mul.rn.f32 	%f170, %f138, %f154;
	mul.rn.f32 	%f171, %f139, %f155;
	mul.rn.f32 	%f172, %f140, %f156;
	mul.rn.f32 	%f173, %f141, %f157;
	mul.rn.f32 	%f174, %f142, %f158;
	mul.rn.f32 	%f175, %f143, %f159;
	mul.rn.f32 	%f176, %f144, %f160;
	mul.rn.f32 	%f177, %f145, %f161;
	mov.b32 	%r97, %f162;
	// begin inline asm
	cvt.rn.bf16.f32 %rs49, %r97;
	// end inline asm
	mov.b32 	%r98, %f163;
	// begin inline asm
	cvt.rn.bf16.f32 %rs50, %r98;
	// end inline asm
	mov.b32 	%r99, %f164;
	// begin inline asm
	cvt.rn.bf16.f32 %rs51, %r99;
	// end inline asm
	mov.b32 	%r100, %f165;
	// begin inline asm
	cvt.rn.bf16.f32 %rs52, %r100;
	// end inline asm
	mov.b32 	%r101, %f166;
	// begin inline asm
	cvt.rn.bf16.f32 %rs53, %r101;
	// end inline asm
	mov.b32 	%r102, %f167;
	// begin inline asm
	cvt.rn.bf16.f32 %rs54, %r102;
	// end inline asm
	mov.b32 	%r103, %f168;
	// begin inline asm
	cvt.rn.bf16.f32 %rs55, %r103;
	// end inline asm
	mov.b32 	%r104, %f169;
	// begin inline asm
	cvt.rn.bf16.f32 %rs56, %r104;
	// end inline asm
	mov.b32 	%r105, %f170;
	// begin inline asm
	cvt.rn.bf16.f32 %rs57, %r105;
	// end inline asm
	mov.b32 	%r106, %f171;
	// begin inline asm
	cvt.rn.bf16.f32 %rs58, %r106;
	// end inline asm
	mov.b32 	%r107, %f172;
	// begin inline asm
	cvt.rn.bf16.f32 %rs59, %r107;
	// end inline asm
	mov.b32 	%r108, %f173;
	// begin inline asm
	cvt.rn.bf16.f32 %rs60, %r108;
	// end inline asm
	mov.b32 	%r109, %f174;
	// begin inline asm
	cvt.rn.bf16.f32 %rs61, %r109;
	// end inline asm
	mov.b32 	%r110, %f175;
	// begin inline asm
	cvt.rn.bf16.f32 %rs62, %r110;
	// end inline asm
	mov.b32 	%r111, %f176;
	// begin inline asm
	cvt.rn.bf16.f32 %rs63, %r111;
	// end inline asm
	mov.b32 	%r112, %f177;
	// begin inline asm
	cvt.rn.bf16.f32 %rs64, %r112;
	// end inline asm
	add.s64 	%rd40, %rd16, %rd30;
	add.s64 	%rd12, %rd40, %rd27;
	add.s64 	%rd13, %rd12, 1024;
	mov.b32 	%r113, {%rs49, %rs50};
	mov.b32 	%r114, {%rs51, %rs52};
	mov.b32 	%r115, {%rs53, %rs54};
	mov.b32 	%r116, {%rs55, %rs56};
	// begin inline asm
	st.global.v4.b32 [ %rd12 + 0 ], { %r113, %r114, %r115, %r116 };
	// end inline asm
	mov.b32 	%r117, {%rs57, %rs58};
	mov.b32 	%r118, {%rs59, %rs60};
	mov.b32 	%r119, {%rs61, %rs62};
	mov.b32 	%r120, {%rs63, %rs64};
	// begin inline asm
	st.global.v4.b32 [ %rd13 + 0 ], { %r117, %r118, %r119, %r120 };
	// end inline asm
	ret;

}
	// .globl	fusion_343
.visible .entry fusion_343(
	.param .u64 .ptr .align 16 fusion_343_param_0,
	.param .u64 .ptr .align 16 fusion_343_param_1,
	.param .u64 .ptr .align 128 fusion_343_param_2,
	.param .u64 .ptr .align 128 fusion_343_param_3,
	.param .u64 .ptr .align 128 fusion_343_param_4,
	.param .u64 .ptr .align 128 fusion_343_param_5,
	.param .u64 .ptr .align 128 fusion_343_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<97>;
	.reg .b32 	%r<189>;
	.reg .f32 	%f<242>;
	.reg .b64 	%rd<48>;

	ld.param.u64 	%rd18, [fusion_343_param_0];
	ld.param.u64 	%rd19, [fusion_343_param_6];
	cvta.to.global.u64 	%rd20, %rd19;
	ld.param.u64 	%rd21, [fusion_343_param_1];
	ld.param.u64 	%rd22, [fusion_343_param_5];
	cvta.to.global.u64 	%rd23, %rd22;
	ld.param.u64 	%rd24, [fusion_343_param_2];
	ld.param.u64 	%rd25, [fusion_343_param_4];
	cvta.to.global.u64 	%rd26, %rd25;
	ld.param.u64 	%rd27, [fusion_343_param_3];
	cvta.to.global.u64 	%rd28, %rd27;
	cvta.to.global.u64 	%rd29, %rd24;
	cvta.to.global.u64 	%rd30, %rd21;
	cvta.to.global.u64 	%rd13, %rd18;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd31, %r1, 53248;
	add.s64 	%rd32, %rd26, %rd31;
	mov.u32 	%r169, %tid.x;
	and.b32  	%r170, %r169, 31;
	shl.b32 	%r171, %r169, 3;
	and.b32  	%r172, %r171, 248;
	setp.lt.u32 	%p4, %r169, 32;
	selp.b32 	%r173, 0, 256, %p4;
	or.b32  	%r174, %r172, %r173;
	mul.wide.u32 	%rd33, %r174, 2;
	add.s64 	%rd34, %rd32, %rd33;
	add.s64 	%rd1, %rd34, 16384;
	add.s64 	%rd2, %rd34, 17408;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd35, %r1, 1024;
	shl.b64 	%rd36, %rd35, 1;
	add.s64 	%rd37, %rd23, %rd36;
	add.s64 	%rd3, %rd37, %rd33;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	add.s64 	%rd5, %rd34, 18432;
	add.s64 	%rd6, %rd34, 19456;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r50;
	mov.b32 	{%rs35, %rs36}, %r51;
	mov.b32 	{%rs37, %rs38}, %r52;
	mov.b32 	{%rs39, %rs40}, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r54;
	mov.b32 	{%rs43, %rs44}, %r55;
	mov.b32 	{%rs45, %rs46}, %r56;
	mov.b32 	{%rs47, %rs48}, %r57;
	// begin inline asm
	cvt.f32.bf16 %r58, %rs33;
	// end inline asm
	mov.b32 	%f33, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs34;
	// end inline asm
	mov.b32 	%f34, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs35;
	// end inline asm
	mov.b32 	%f35, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs36;
	// end inline asm
	mov.b32 	%f36, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs37;
	// end inline asm
	mov.b32 	%f37, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs38;
	// end inline asm
	mov.b32 	%f38, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs39;
	// end inline asm
	mov.b32 	%f39, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs40;
	// end inline asm
	mov.b32 	%f40, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs41;
	// end inline asm
	mov.b32 	%f41, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs42;
	// end inline asm
	mov.b32 	%f42, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs43;
	// end inline asm
	mov.b32 	%f43, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs44;
	// end inline asm
	mov.b32 	%f44, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs45;
	// end inline asm
	mov.b32 	%f45, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs46;
	// end inline asm
	mov.b32 	%f46, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs47;
	// end inline asm
	mov.b32 	%f47, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs48;
	// end inline asm
	mov.b32 	%f48, %r73;
	add.s64 	%rd38, %rd28, %rd36;
	add.s64 	%rd7, %rd38, %rd33;
	add.s64 	%rd8, %rd7, 1024;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	ld.global.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs49, %rs50}, %r74;
	mov.b32 	{%rs51, %rs52}, %r75;
	mov.b32 	{%rs53, %rs54}, %r76;
	mov.b32 	{%rs55, %rs56}, %r77;
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	ld.global.v4.b32 { %r78, %r79, %r80, %r81 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	{%rs57, %rs58}, %r78;
	mov.b32 	{%rs59, %rs60}, %r79;
	mov.b32 	{%rs61, %rs62}, %r80;
	mov.b32 	{%rs63, %rs64}, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs49;
	// end inline asm
	mov.b32 	%f49, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs50;
	// end inline asm
	mov.b32 	%f50, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs51;
	// end inline asm
	mov.b32 	%f51, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs52;
	// end inline asm
	mov.b32 	%f52, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs53;
	// end inline asm
	mov.b32 	%f53, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs54;
	// end inline asm
	mov.b32 	%f54, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs55;
	// end inline asm
	mov.b32 	%f55, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs56;
	// end inline asm
	mov.b32 	%f56, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs57;
	// end inline asm
	mov.b32 	%f57, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs58;
	// end inline asm
	mov.b32 	%f58, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs59;
	// end inline asm
	mov.b32 	%f59, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs60;
	// end inline asm
	mov.b32 	%f60, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs61;
	// end inline asm
	mov.b32 	%f61, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs62;
	// end inline asm
	mov.b32 	%f62, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs63;
	// end inline asm
	mov.b32 	%f63, %r96;
	// begin inline asm
	cvt.f32.bf16 %r97, %rs64;
	// end inline asm
	mov.b32 	%f64, %r97;
	shl.b64 	%rd39, %rd35, 2;
	add.s64 	%rd40, %rd29, %rd39;
	mul.wide.u32 	%rd41, %r174, 4;
	add.s64 	%rd9, %rd40, %rd41;
	add.s64 	%rd10, %rd9, 16;
	add.s64 	%rd11, %rd9, 2048;
	add.s64 	%rd12, %rd9, 2064;
	// begin inline asm
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	ld.global.v4.b32 { %r98, %r99, %r100, %r101 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f65, %r98;
	mov.b32 	%f66, %r99;
	mov.b32 	%f67, %r100;
	mov.b32 	%f68, %r101;
	// begin inline asm
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	ld.global.v4.b32 { %r102, %r103, %r104, %r105 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f69, %r102;
	mov.b32 	%f70, %r103;
	mov.b32 	%f71, %r104;
	mov.b32 	%f72, %r105;
	// begin inline asm
	mov.u32 %r106, 0x0;
	mov.u32 %r107, 0x0;
	mov.u32 %r108, 0x0;
	mov.u32 %r109, 0x0;
	ld.global.v4.b32 { %r106, %r107, %r108, %r109 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f73, %r106;
	mov.b32 	%f74, %r107;
	mov.b32 	%f75, %r108;
	mov.b32 	%f76, %r109;
	// begin inline asm
	mov.u32 %r110, 0x0;
	mov.u32 %r111, 0x0;
	mov.u32 %r112, 0x0;
	mov.u32 %r113, 0x0;
	ld.global.v4.b32 { %r110, %r111, %r112, %r113 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f77, %r110;
	mov.b32 	%f78, %r111;
	mov.b32 	%f79, %r112;
	mov.b32 	%f80, %r113;
	add.rn.f32 	%f81, %f49, %f65;
	add.rn.f32 	%f82, %f50, %f66;
	add.rn.f32 	%f83, %f51, %f67;
	add.rn.f32 	%f84, %f52, %f68;
	add.rn.f32 	%f85, %f53, %f69;
	add.rn.f32 	%f86, %f54, %f70;
	add.rn.f32 	%f87, %f55, %f71;
	add.rn.f32 	%f88, %f56, %f72;
	add.rn.f32 	%f89, %f57, %f73;
	add.rn.f32 	%f90, %f58, %f74;
	add.rn.f32 	%f91, %f59, %f75;
	add.rn.f32 	%f92, %f60, %f76;
	add.rn.f32 	%f93, %f61, %f77;
	add.rn.f32 	%f94, %f62, %f78;
	add.rn.f32 	%f95, %f63, %f79;
	add.rn.f32 	%f96, %f64, %f80;
	add.rn.f32 	%f97, %f33, %f81;
	add.rn.f32 	%f98, %f34, %f82;
	add.rn.f32 	%f99, %f35, %f83;
	add.rn.f32 	%f100, %f36, %f84;
	add.rn.f32 	%f101, %f37, %f85;
	add.rn.f32 	%f102, %f38, %f86;
	add.rn.f32 	%f103, %f39, %f87;
	add.rn.f32 	%f104, %f40, %f88;
	add.rn.f32 	%f105, %f41, %f89;
	add.rn.f32 	%f106, %f42, %f90;
	add.rn.f32 	%f107, %f43, %f91;
	add.rn.f32 	%f108, %f44, %f92;
	add.rn.f32 	%f109, %f45, %f93;
	add.rn.f32 	%f110, %f46, %f94;
	add.rn.f32 	%f111, %f47, %f95;
	add.rn.f32 	%f112, %f48, %f96;
	add.rn.f32 	%f113, %f17, %f97;
	add.rn.f32 	%f114, %f18, %f98;
	add.rn.f32 	%f115, %f19, %f99;
	add.rn.f32 	%f116, %f20, %f100;
	add.rn.f32 	%f117, %f21, %f101;
	add.rn.f32 	%f118, %f22, %f102;
	add.rn.f32 	%f119, %f23, %f103;
	add.rn.f32 	%f120, %f24, %f104;
	add.rn.f32 	%f121, %f25, %f105;
	add.rn.f32 	%f122, %f26, %f106;
	add.rn.f32 	%f123, %f27, %f107;
	add.rn.f32 	%f124, %f28, %f108;
	add.rn.f32 	%f125, %f29, %f109;
	add.rn.f32 	%f126, %f30, %f110;
	add.rn.f32 	%f127, %f31, %f111;
	add.rn.f32 	%f128, %f32, %f112;
	add.rn.f32 	%f129, %f1, %f113;
	add.rn.f32 	%f130, %f2, %f114;
	add.rn.f32 	%f131, %f3, %f115;
	add.rn.f32 	%f132, %f4, %f116;
	add.rn.f32 	%f133, %f5, %f117;
	add.rn.f32 	%f134, %f6, %f118;
	add.rn.f32 	%f135, %f7, %f119;
	add.rn.f32 	%f136, %f8, %f120;
	add.rn.f32 	%f137, %f9, %f121;
	add.rn.f32 	%f138, %f10, %f122;
	add.rn.f32 	%f139, %f11, %f123;
	add.rn.f32 	%f140, %f12, %f124;
	add.rn.f32 	%f141, %f13, %f125;
	add.rn.f32 	%f142, %f14, %f126;
	add.rn.f32 	%f143, %f15, %f127;
	add.rn.f32 	%f144, %f16, %f128;
	mul.rn.f32 	%f145, %f129, %f129;
	mul.rn.f32 	%f146, %f130, %f130;
	mul.rn.f32 	%f147, %f131, %f131;
	mul.rn.f32 	%f148, %f132, %f132;
	mul.rn.f32 	%f149, %f133, %f133;
	mul.rn.f32 	%f150, %f134, %f134;
	mul.rn.f32 	%f151, %f135, %f135;
	mul.rn.f32 	%f152, %f136, %f136;
	mul.rn.f32 	%f153, %f137, %f137;
	mul.rn.f32 	%f154, %f138, %f138;
	mul.rn.f32 	%f155, %f139, %f139;
	mul.rn.f32 	%f156, %f140, %f140;
	mul.rn.f32 	%f157, %f141, %f141;
	mul.rn.f32 	%f158, %f142, %f142;
	mul.rn.f32 	%f159, %f143, %f143;
	mul.rn.f32 	%f160, %f144, %f144;
	add.rn.f32 	%f161, %f145, %f146;
	add.rn.f32 	%f162, %f147, %f161;
	add.rn.f32 	%f163, %f148, %f162;
	add.rn.f32 	%f164, %f149, %f163;
	add.rn.f32 	%f165, %f150, %f164;
	add.rn.f32 	%f166, %f151, %f165;
	add.rn.f32 	%f167, %f152, %f166;
	add.rn.f32 	%f168, %f153, %f167;
	add.rn.f32 	%f169, %f154, %f168;
	add.rn.f32 	%f170, %f155, %f169;
	add.rn.f32 	%f171, %f156, %f170;
	add.rn.f32 	%f172, %f157, %f171;
	add.rn.f32 	%f173, %f158, %f172;
	add.rn.f32 	%f174, %f159, %f173;
	add.rn.f32 	%f175, %f160, %f174;
	mov.b32 	%r175, %f175;
	shfl.sync.bfly.b32	%r176, %r175, 16, 31, -1;
	mov.b32 	%f176, %r176;
	add.rn.f32 	%f177, %f175, %f176;
	mov.b32 	%r177, %f177;
	shfl.sync.bfly.b32	%r178, %r177, 8, 31, -1;
	mov.b32 	%f178, %r178;
	add.rn.f32 	%f179, %f177, %f178;
	mov.b32 	%r179, %f179;
	shfl.sync.bfly.b32	%r180, %r179, 4, 31, -1;
	mov.b32 	%f180, %r180;
	add.rn.f32 	%f181, %f179, %f180;
	mov.b32 	%r181, %f181;
	shfl.sync.bfly.b32	%r182, %r181, 2, 31, -1;
	mov.b32 	%f182, %r182;
	add.rn.f32 	%f183, %f181, %f182;
	mov.b32 	%r183, %f183;
	shfl.sync.bfly.b32	%r184, %r183, 1, 31, -1;
	mov.b32 	%f184, %r184;
	add.rn.f32 	%f185, %f183, %f184;
	setp.eq.s32 	%p1, %r170, 0;
	shr.u32 	%r185, %r169, 3;
	and.b32  	%r186, %r185, 4;
	cvt.u64.u32 	%rd42, %r186;
	mov.u64 	%rd43, global_smem;
	add.s64 	%rd44, %rd43, %rd42;
	mov.b32 	%r115, %f185;
	cvt.u32.u64 	%r114, %rd44;
	// begin inline asm
	@%p1 st.shared.b32 [ %r114 + 0 ], %r115;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r169, 2;
	shl.b32 	%r187, %r169, 2;
	cvt.u64.u32 	%rd45, %r187;
	add.s64 	%rd46, %rd43, %rd45;
	cvt.u32.u64 	%r117, %rd46;
	// begin inline asm
	@%p2 ld.shared.b32 %r116, [ %r117 + 0 ];
	// end inline asm
	mov.b32 	%f186, %r116;
	shfl.sync.bfly.b32	%r188, %r116, 1, 31, -1;
	mov.b32 	%f187, %r188;
	add.rn.f32 	%f188, %f186, %f187;
	setp.eq.s32 	%p3, %r169, 0;
	mov.b32 	%r119, %f188;
	// begin inline asm
	@%p3 st.shared.b32 [ %r117 + 0 ], %r119;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f189, [global_smem];
	mul.rn.f32 	%f190, %f189, 0f3A800000;
	// begin inline asm
	mov.u32 %r120, 0x0;
	ld.global.b32 { %r120 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f191, %r120;
	add.rn.f32 	%f192, %f190, %f191;
	rsqrt.approx.f32 	%f193, %f192;
	mul.rn.f32 	%f194, %f129, %f193;
	mul.rn.f32 	%f195, %f130, %f193;
	mul.rn.f32 	%f196, %f131, %f193;
	mul.rn.f32 	%f197, %f132, %f193;
	mul.rn.f32 	%f198, %f133, %f193;
	mul.rn.f32 	%f199, %f134, %f193;
	mul.rn.f32 	%f200, %f135, %f193;
	mul.rn.f32 	%f201, %f136, %f193;
	mul.rn.f32 	%f202, %f137, %f193;
	mul.rn.f32 	%f203, %f138, %f193;
	mul.rn.f32 	%f204, %f139, %f193;
	mul.rn.f32 	%f205, %f140, %f193;
	mul.rn.f32 	%f206, %f141, %f193;
	mul.rn.f32 	%f207, %f142, %f193;
	mul.rn.f32 	%f208, %f143, %f193;
	mul.rn.f32 	%f209, %f144, %f193;
	add.s64 	%rd14, %rd30, %rd33;
	add.s64 	%rd15, %rd14, 1024;
	// begin inline asm
	mov.u32 %r121, 0x0;
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	ld.global.v4.b32 { %r121, %r122, %r123, %r124 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	{%rs65, %rs66}, %r121;
	mov.b32 	{%rs67, %rs68}, %r122;
	mov.b32 	{%rs69, %rs70}, %r123;
	mov.b32 	{%rs71, %rs72}, %r124;
	// begin inline asm
	mov.u32 %r125, 0x0;
	mov.u32 %r126, 0x0;
	mov.u32 %r127, 0x0;
	mov.u32 %r128, 0x0;
	ld.global.v4.b32 { %r125, %r126, %r127, %r128 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	{%rs73, %rs74}, %r125;
	mov.b32 	{%rs75, %rs76}, %r126;
	mov.b32 	{%rs77, %rs78}, %r127;
	mov.b32 	{%rs79, %rs80}, %r128;
	// begin inline asm
	cvt.f32.bf16 %r129, %rs65;
	// end inline asm
	mov.b32 	%f210, %r129;
	// begin inline asm
	cvt.f32.bf16 %r130, %rs66;
	// end inline asm
	mov.b32 	%f211, %r130;
	// begin inline asm
	cvt.f32.bf16 %r131, %rs67;
	// end inline asm
	mov.b32 	%f212, %r131;
	// begin inline asm
	cvt.f32.bf16 %r132, %rs68;
	// end inline asm
	mov.b32 	%f213, %r132;
	// begin inline asm
	cvt.f32.bf16 %r133, %rs69;
	// end inline asm
	mov.b32 	%f214, %r133;
	// begin inline asm
	cvt.f32.bf16 %r134, %rs70;
	// end inline asm
	mov.b32 	%f215, %r134;
	// begin inline asm
	cvt.f32.bf16 %r135, %rs71;
	// end inline asm
	mov.b32 	%f216, %r135;
	// begin inline asm
	cvt.f32.bf16 %r136, %rs72;
	// end inline asm
	mov.b32 	%f217, %r136;
	// begin inline asm
	cvt.f32.bf16 %r137, %rs73;
	// end inline asm
	mov.b32 	%f218, %r137;
	// begin inline asm
	cvt.f32.bf16 %r138, %rs74;
	// end inline asm
	mov.b32 	%f219, %r138;
	// begin inline asm
	cvt.f32.bf16 %r139, %rs75;
	// end inline asm
	mov.b32 	%f220, %r139;
	// begin inline asm
	cvt.f32.bf16 %r140, %rs76;
	// end inline asm
	mov.b32 	%f221, %r140;
	// begin inline asm
	cvt.f32.bf16 %r141, %rs77;
	// end inline asm
	mov.b32 	%f222, %r141;
	// begin inline asm
	cvt.f32.bf16 %r142, %rs78;
	// end inline asm
	mov.b32 	%f223, %r142;
	// begin inline asm
	cvt.f32.bf16 %r143, %rs79;
	// end inline asm
	mov.b32 	%f224, %r143;
	// begin inline asm
	cvt.f32.bf16 %r144, %rs80;
	// end inline asm
	mov.b32 	%f225, %r144;
	mul.rn.f32 	%f226, %f194, %f210;
	mul.rn.f32 	%f227, %f195, %f211;
	mul.rn.f32 	%f228, %f196, %f212;
	mul.rn.f32 	%f229, %f197, %f213;
	mul.rn.f32 	%f230, %f198, %f214;
	mul.rn.f32 	%f231, %f199, %f215;
	mul.rn.f32 	%f232, %f200, %f216;
	mul.rn.f32 	%f233, %f201, %f217;
	mul.rn.f32 	%f234, %f202, %f218;
	mul.rn.f32 	%f235, %f203, %f219;
	mul.rn.f32 	%f236, %f204, %f220;
	mul.rn.f32 	%f237, %f205, %f221;
	mul.rn.f32 	%f238, %f206, %f222;
	mul.rn.f32 	%f239, %f207, %f223;
	mul.rn.f32 	%f240, %f208, %f224;
	mul.rn.f32 	%f241, %f209, %f225;
	mov.b32 	%r145, %f226;
	// begin inline asm
	cvt.rn.bf16.f32 %rs81, %r145;
	// end inline asm
	mov.b32 	%r146, %f227;
	// begin inline asm
	cvt.rn.bf16.f32 %rs82, %r146;
	// end inline asm
	mov.b32 	%r147, %f228;
	// begin inline asm
	cvt.rn.bf16.f32 %rs83, %r147;
	// end inline asm
	mov.b32 	%r148, %f229;
	// begin inline asm
	cvt.rn.bf16.f32 %rs84, %r148;
	// end inline asm
	mov.b32 	%r149, %f230;
	// begin inline asm
	cvt.rn.bf16.f32 %rs85, %r149;
	// end inline asm
	mov.b32 	%r150, %f231;
	// begin inline asm
	cvt.rn.bf16.f32 %rs86, %r150;
	// end inline asm
	mov.b32 	%r151, %f232;
	// begin inline asm
	cvt.rn.bf16.f32 %rs87, %r151;
	// end inline asm
	mov.b32 	%r152, %f233;
	// begin inline asm
	cvt.rn.bf16.f32 %rs88, %r152;
	// end inline asm
	mov.b32 	%r153, %f234;
	// begin inline asm
	cvt.rn.bf16.f32 %rs89, %r153;
	// end inline asm
	mov.b32 	%r154, %f235;
	// begin inline asm
	cvt.rn.bf16.f32 %rs90, %r154;
	// end inline asm
	mov.b32 	%r155, %f236;
	// begin inline asm
	cvt.rn.bf16.f32 %rs91, %r155;
	// end inline asm
	mov.b32 	%r156, %f237;
	// begin inline asm
	cvt.rn.bf16.f32 %rs92, %r156;
	// end inline asm
	mov.b32 	%r157, %f238;
	// begin inline asm
	cvt.rn.bf16.f32 %rs93, %r157;
	// end inline asm
	mov.b32 	%r158, %f239;
	// begin inline asm
	cvt.rn.bf16.f32 %rs94, %r158;
	// end inline asm
	mov.b32 	%r159, %f240;
	// begin inline asm
	cvt.rn.bf16.f32 %rs95, %r159;
	// end inline asm
	mov.b32 	%r160, %f241;
	// begin inline asm
	cvt.rn.bf16.f32 %rs96, %r160;
	// end inline asm
	add.s64 	%rd47, %rd20, %rd36;
	add.s64 	%rd16, %rd47, %rd33;
	add.s64 	%rd17, %rd16, 1024;
	mov.b32 	%r161, {%rs81, %rs82};
	mov.b32 	%r162, {%rs83, %rs84};
	mov.b32 	%r163, {%rs85, %rs86};
	mov.b32 	%r164, {%rs87, %rs88};
	// begin inline asm
	st.global.v4.b32 [ %rd16 + 0 ], { %r161, %r162, %r163, %r164 };
	// end inline asm
	mov.b32 	%r165, {%rs89, %rs90};
	mov.b32 	%r166, {%rs91, %rs92};
	mov.b32 	%r167, {%rs93, %rs94};
	mov.b32 	%r168, {%rs95, %rs96};
	// begin inline asm
	st.global.v4.b32 [ %rd17 + 0 ], { %r165, %r166, %r167, %r168 };
	// end inline asm
	ret;

}
	// .globl	fusion_344
.visible .entry fusion_344(
	.param .u64 .ptr .align 16 fusion_344_param_0,
	.param .u64 .ptr .align 16 fusion_344_param_1,
	.param .u64 .ptr .align 128 fusion_344_param_2,
	.param .u64 .ptr .align 128 fusion_344_param_3,
	.param .u64 .ptr .align 128 fusion_344_param_4,
	.param .u64 .ptr .align 128 fusion_344_param_5,
	.param .u64 .ptr .align 128 fusion_344_param_6,
	.param .u64 .ptr .align 128 fusion_344_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<129>;
	.reg .b32 	%r<237>;
	.reg .f32 	%f<306>;
	.reg .b64 	%rd<55>;

	ld.param.u64 	%rd22, [fusion_344_param_0];
	ld.param.u64 	%rd23, [fusion_344_param_7];
	cvta.to.global.u64 	%rd24, %rd23;
	ld.param.u64 	%rd25, [fusion_344_param_1];
	ld.param.u64 	%rd26, [fusion_344_param_6];
	cvta.to.global.u64 	%rd27, %rd26;
	ld.param.u64 	%rd28, [fusion_344_param_2];
	ld.param.u64 	%rd29, [fusion_344_param_5];
	cvta.to.global.u64 	%rd30, %rd29;
	ld.param.u64 	%rd31, [fusion_344_param_3];
	ld.param.u64 	%rd32, [fusion_344_param_4];
	cvta.to.global.u64 	%rd33, %rd32;
	cvta.to.global.u64 	%rd34, %rd31;
	cvta.to.global.u64 	%rd35, %rd28;
	cvta.to.global.u64 	%rd36, %rd25;
	cvta.to.global.u64 	%rd17, %rd22;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd37, %r1, 53248;
	add.s64 	%rd38, %rd34, %rd37;
	mov.u32 	%r217, %tid.x;
	and.b32  	%r218, %r217, 31;
	shl.b32 	%r219, %r217, 3;
	and.b32  	%r220, %r219, 248;
	setp.lt.u32 	%p4, %r217, 32;
	selp.b32 	%r221, 0, 256, %p4;
	or.b32  	%r222, %r220, %r221;
	mul.wide.u32 	%rd39, %r222, 2;
	add.s64 	%rd40, %rd38, %rd39;
	add.s64 	%rd1, %rd40, 14336;
	add.s64 	%rd2, %rd40, 15360;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd41, %r1, 1024;
	shl.b64 	%rd42, %rd41, 1;
	add.s64 	%rd43, %rd35, %rd42;
	add.s64 	%rd3, %rd43, %rd39;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	add.s64 	%rd5, %rd40, 16384;
	add.s64 	%rd6, %rd40, 17408;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r50;
	mov.b32 	{%rs35, %rs36}, %r51;
	mov.b32 	{%rs37, %rs38}, %r52;
	mov.b32 	{%rs39, %rs40}, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r54;
	mov.b32 	{%rs43, %rs44}, %r55;
	mov.b32 	{%rs45, %rs46}, %r56;
	mov.b32 	{%rs47, %rs48}, %r57;
	// begin inline asm
	cvt.f32.bf16 %r58, %rs33;
	// end inline asm
	mov.b32 	%f33, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs34;
	// end inline asm
	mov.b32 	%f34, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs35;
	// end inline asm
	mov.b32 	%f35, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs36;
	// end inline asm
	mov.b32 	%f36, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs37;
	// end inline asm
	mov.b32 	%f37, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs38;
	// end inline asm
	mov.b32 	%f38, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs39;
	// end inline asm
	mov.b32 	%f39, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs40;
	// end inline asm
	mov.b32 	%f40, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs41;
	// end inline asm
	mov.b32 	%f41, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs42;
	// end inline asm
	mov.b32 	%f42, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs43;
	// end inline asm
	mov.b32 	%f43, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs44;
	// end inline asm
	mov.b32 	%f44, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs45;
	// end inline asm
	mov.b32 	%f45, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs46;
	// end inline asm
	mov.b32 	%f46, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs47;
	// end inline asm
	mov.b32 	%f47, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs48;
	// end inline asm
	mov.b32 	%f48, %r73;
	add.s64 	%rd44, %rd27, %rd42;
	add.s64 	%rd7, %rd44, %rd39;
	add.s64 	%rd8, %rd7, 1024;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	ld.global.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs49, %rs50}, %r74;
	mov.b32 	{%rs51, %rs52}, %r75;
	mov.b32 	{%rs53, %rs54}, %r76;
	mov.b32 	{%rs55, %rs56}, %r77;
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	ld.global.v4.b32 { %r78, %r79, %r80, %r81 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	{%rs57, %rs58}, %r78;
	mov.b32 	{%rs59, %rs60}, %r79;
	mov.b32 	{%rs61, %rs62}, %r80;
	mov.b32 	{%rs63, %rs64}, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs49;
	// end inline asm
	mov.b32 	%f49, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs50;
	// end inline asm
	mov.b32 	%f50, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs51;
	// end inline asm
	mov.b32 	%f51, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs52;
	// end inline asm
	mov.b32 	%f52, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs53;
	// end inline asm
	mov.b32 	%f53, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs54;
	// end inline asm
	mov.b32 	%f54, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs55;
	// end inline asm
	mov.b32 	%f55, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs56;
	// end inline asm
	mov.b32 	%f56, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs57;
	// end inline asm
	mov.b32 	%f57, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs58;
	// end inline asm
	mov.b32 	%f58, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs59;
	// end inline asm
	mov.b32 	%f59, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs60;
	// end inline asm
	mov.b32 	%f60, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs61;
	// end inline asm
	mov.b32 	%f61, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs62;
	// end inline asm
	mov.b32 	%f62, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs63;
	// end inline asm
	mov.b32 	%f63, %r96;
	// begin inline asm
	cvt.f32.bf16 %r97, %rs64;
	// end inline asm
	mov.b32 	%f64, %r97;
	add.s64 	%rd9, %rd40, 18432;
	add.s64 	%rd10, %rd40, 19456;
	// begin inline asm
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	ld.global.v4.b32 { %r98, %r99, %r100, %r101 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	{%rs65, %rs66}, %r98;
	mov.b32 	{%rs67, %rs68}, %r99;
	mov.b32 	{%rs69, %rs70}, %r100;
	mov.b32 	{%rs71, %rs72}, %r101;
	// begin inline asm
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	ld.global.v4.b32 { %r102, %r103, %r104, %r105 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	{%rs73, %rs74}, %r102;
	mov.b32 	{%rs75, %rs76}, %r103;
	mov.b32 	{%rs77, %rs78}, %r104;
	mov.b32 	{%rs79, %rs80}, %r105;
	// begin inline asm
	cvt.f32.bf16 %r106, %rs65;
	// end inline asm
	mov.b32 	%f65, %r106;
	// begin inline asm
	cvt.f32.bf16 %r107, %rs66;
	// end inline asm
	mov.b32 	%f66, %r107;
	// begin inline asm
	cvt.f32.bf16 %r108, %rs67;
	// end inline asm
	mov.b32 	%f67, %r108;
	// begin inline asm
	cvt.f32.bf16 %r109, %rs68;
	// end inline asm
	mov.b32 	%f68, %r109;
	// begin inline asm
	cvt.f32.bf16 %r110, %rs69;
	// end inline asm
	mov.b32 	%f69, %r110;
	// begin inline asm
	cvt.f32.bf16 %r111, %rs70;
	// end inline asm
	mov.b32 	%f70, %r111;
	// begin inline asm
	cvt.f32.bf16 %r112, %rs71;
	// end inline asm
	mov.b32 	%f71, %r112;
	// begin inline asm
	cvt.f32.bf16 %r113, %rs72;
	// end inline asm
	mov.b32 	%f72, %r113;
	// begin inline asm
	cvt.f32.bf16 %r114, %rs73;
	// end inline asm
	mov.b32 	%f73, %r114;
	// begin inline asm
	cvt.f32.bf16 %r115, %rs74;
	// end inline asm
	mov.b32 	%f74, %r115;
	// begin inline asm
	cvt.f32.bf16 %r116, %rs75;
	// end inline asm
	mov.b32 	%f75, %r116;
	// begin inline asm
	cvt.f32.bf16 %r117, %rs76;
	// end inline asm
	mov.b32 	%f76, %r117;
	// begin inline asm
	cvt.f32.bf16 %r118, %rs77;
	// end inline asm
	mov.b32 	%f77, %r118;
	// begin inline asm
	cvt.f32.bf16 %r119, %rs78;
	// end inline asm
	mov.b32 	%f78, %r119;
	// begin inline asm
	cvt.f32.bf16 %r120, %rs79;
	// end inline asm
	mov.b32 	%f79, %r120;
	// begin inline asm
	cvt.f32.bf16 %r121, %rs80;
	// end inline asm
	mov.b32 	%f80, %r121;
	add.s64 	%rd45, %rd30, %rd42;
	add.s64 	%rd11, %rd45, %rd39;
	add.s64 	%rd12, %rd11, 1024;
	// begin inline asm
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	mov.u32 %r125, 0x0;
	ld.global.v4.b32 { %r122, %r123, %r124, %r125 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	{%rs81, %rs82}, %r122;
	mov.b32 	{%rs83, %rs84}, %r123;
	mov.b32 	{%rs85, %rs86}, %r124;
	mov.b32 	{%rs87, %rs88}, %r125;
	// begin inline asm
	mov.u32 %r126, 0x0;
	mov.u32 %r127, 0x0;
	mov.u32 %r128, 0x0;
	mov.u32 %r129, 0x0;
	ld.global.v4.b32 { %r126, %r127, %r128, %r129 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	{%rs89, %rs90}, %r126;
	mov.b32 	{%rs91, %rs92}, %r127;
	mov.b32 	{%rs93, %rs94}, %r128;
	mov.b32 	{%rs95, %rs96}, %r129;
	// begin inline asm
	cvt.f32.bf16 %r130, %rs81;
	// end inline asm
	mov.b32 	%f81, %r130;
	// begin inline asm
	cvt.f32.bf16 %r131, %rs82;
	// end inline asm
	mov.b32 	%f82, %r131;
	// begin inline asm
	cvt.f32.bf16 %r132, %rs83;
	// end inline asm
	mov.b32 	%f83, %r132;
	// begin inline asm
	cvt.f32.bf16 %r133, %rs84;
	// end inline asm
	mov.b32 	%f84, %r133;
	// begin inline asm
	cvt.f32.bf16 %r134, %rs85;
	// end inline asm
	mov.b32 	%f85, %r134;
	// begin inline asm
	cvt.f32.bf16 %r135, %rs86;
	// end inline asm
	mov.b32 	%f86, %r135;
	// begin inline asm
	cvt.f32.bf16 %r136, %rs87;
	// end inline asm
	mov.b32 	%f87, %r136;
	// begin inline asm
	cvt.f32.bf16 %r137, %rs88;
	// end inline asm
	mov.b32 	%f88, %r137;
	// begin inline asm
	cvt.f32.bf16 %r138, %rs89;
	// end inline asm
	mov.b32 	%f89, %r138;
	// begin inline asm
	cvt.f32.bf16 %r139, %rs90;
	// end inline asm
	mov.b32 	%f90, %r139;
	// begin inline asm
	cvt.f32.bf16 %r140, %rs91;
	// end inline asm
	mov.b32 	%f91, %r140;
	// begin inline asm
	cvt.f32.bf16 %r141, %rs92;
	// end inline asm
	mov.b32 	%f92, %r141;
	// begin inline asm
	cvt.f32.bf16 %r142, %rs93;
	// end inline asm
	mov.b32 	%f93, %r142;
	// begin inline asm
	cvt.f32.bf16 %r143, %rs94;
	// end inline asm
	mov.b32 	%f94, %r143;
	// begin inline asm
	cvt.f32.bf16 %r144, %rs95;
	// end inline asm
	mov.b32 	%f95, %r144;
	// begin inline asm
	cvt.f32.bf16 %r145, %rs96;
	// end inline asm
	mov.b32 	%f96, %r145;
	shl.b64 	%rd46, %rd41, 2;
	add.s64 	%rd47, %rd33, %rd46;
	mul.wide.u32 	%rd48, %r222, 4;
	add.s64 	%rd13, %rd47, %rd48;
	add.s64 	%rd14, %rd13, 16;
	add.s64 	%rd15, %rd13, 2048;
	add.s64 	%rd16, %rd13, 2064;
	// begin inline asm
	mov.u32 %r146, 0x0;
	mov.u32 %r147, 0x0;
	mov.u32 %r148, 0x0;
	mov.u32 %r149, 0x0;
	ld.global.v4.b32 { %r146, %r147, %r148, %r149 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f97, %r146;
	mov.b32 	%f98, %r147;
	mov.b32 	%f99, %r148;
	mov.b32 	%f100, %r149;
	// begin inline asm
	mov.u32 %r150, 0x0;
	mov.u32 %r151, 0x0;
	mov.u32 %r152, 0x0;
	mov.u32 %r153, 0x0;
	ld.global.v4.b32 { %r150, %r151, %r152, %r153 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f101, %r150;
	mov.b32 	%f102, %r151;
	mov.b32 	%f103, %r152;
	mov.b32 	%f104, %r153;
	// begin inline asm
	mov.u32 %r154, 0x0;
	mov.u32 %r155, 0x0;
	mov.u32 %r156, 0x0;
	mov.u32 %r157, 0x0;
	ld.global.v4.b32 { %r154, %r155, %r156, %r157 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f105, %r154;
	mov.b32 	%f106, %r155;
	mov.b32 	%f107, %r156;
	mov.b32 	%f108, %r157;
	// begin inline asm
	mov.u32 %r158, 0x0;
	mov.u32 %r159, 0x0;
	mov.u32 %r160, 0x0;
	mov.u32 %r161, 0x0;
	ld.global.v4.b32 { %r158, %r159, %r160, %r161 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f109, %r158;
	mov.b32 	%f110, %r159;
	mov.b32 	%f111, %r160;
	mov.b32 	%f112, %r161;
	add.rn.f32 	%f113, %f81, %f97;
	add.rn.f32 	%f114, %f82, %f98;
	add.rn.f32 	%f115, %f83, %f99;
	add.rn.f32 	%f116, %f84, %f100;
	add.rn.f32 	%f117, %f85, %f101;
	add.rn.f32 	%f118, %f86, %f102;
	add.rn.f32 	%f119, %f87, %f103;
	add.rn.f32 	%f120, %f88, %f104;
	add.rn.f32 	%f121, %f89, %f105;
	add.rn.f32 	%f122, %f90, %f106;
	add.rn.f32 	%f123, %f91, %f107;
	add.rn.f32 	%f124, %f92, %f108;
	add.rn.f32 	%f125, %f93, %f109;
	add.rn.f32 	%f126, %f94, %f110;
	add.rn.f32 	%f127, %f95, %f111;
	add.rn.f32 	%f128, %f96, %f112;
	add.rn.f32 	%f129, %f65, %f113;
	add.rn.f32 	%f130, %f66, %f114;
	add.rn.f32 	%f131, %f67, %f115;
	add.rn.f32 	%f132, %f68, %f116;
	add.rn.f32 	%f133, %f69, %f117;
	add.rn.f32 	%f134, %f70, %f118;
	add.rn.f32 	%f135, %f71, %f119;
	add.rn.f32 	%f136, %f72, %f120;
	add.rn.f32 	%f137, %f73, %f121;
	add.rn.f32 	%f138, %f74, %f122;
	add.rn.f32 	%f139, %f75, %f123;
	add.rn.f32 	%f140, %f76, %f124;
	add.rn.f32 	%f141, %f77, %f125;
	add.rn.f32 	%f142, %f78, %f126;
	add.rn.f32 	%f143, %f79, %f127;
	add.rn.f32 	%f144, %f80, %f128;
	add.rn.f32 	%f145, %f49, %f129;
	add.rn.f32 	%f146, %f50, %f130;
	add.rn.f32 	%f147, %f51, %f131;
	add.rn.f32 	%f148, %f52, %f132;
	add.rn.f32 	%f149, %f53, %f133;
	add.rn.f32 	%f150, %f54, %f134;
	add.rn.f32 	%f151, %f55, %f135;
	add.rn.f32 	%f152, %f56, %f136;
	add.rn.f32 	%f153, %f57, %f137;
	add.rn.f32 	%f154, %f58, %f138;
	add.rn.f32 	%f155, %f59, %f139;
	add.rn.f32 	%f156, %f60, %f140;
	add.rn.f32 	%f157, %f61, %f141;
	add.rn.f32 	%f158, %f62, %f142;
	add.rn.f32 	%f159, %f63, %f143;
	add.rn.f32 	%f160, %f64, %f144;
	add.rn.f32 	%f161, %f33, %f145;
	add.rn.f32 	%f162, %f34, %f146;
	add.rn.f32 	%f163, %f35, %f147;
	add.rn.f32 	%f164, %f36, %f148;
	add.rn.f32 	%f165, %f37, %f149;
	add.rn.f32 	%f166, %f38, %f150;
	add.rn.f32 	%f167, %f39, %f151;
	add.rn.f32 	%f168, %f40, %f152;
	add.rn.f32 	%f169, %f41, %f153;
	add.rn.f32 	%f170, %f42, %f154;
	add.rn.f32 	%f171, %f43, %f155;
	add.rn.f32 	%f172, %f44, %f156;
	add.rn.f32 	%f173, %f45, %f157;
	add.rn.f32 	%f174, %f46, %f158;
	add.rn.f32 	%f175, %f47, %f159;
	add.rn.f32 	%f176, %f48, %f160;
	add.rn.f32 	%f177, %f17, %f161;
	add.rn.f32 	%f178, %f18, %f162;
	add.rn.f32 	%f179, %f19, %f163;
	add.rn.f32 	%f180, %f20, %f164;
	add.rn.f32 	%f181, %f21, %f165;
	add.rn.f32 	%f182, %f22, %f166;
	add.rn.f32 	%f183, %f23, %f167;
	add.rn.f32 	%f184, %f24, %f168;
	add.rn.f32 	%f185, %f25, %f169;
	add.rn.f32 	%f186, %f26, %f170;
	add.rn.f32 	%f187, %f27, %f171;
	add.rn.f32 	%f188, %f28, %f172;
	add.rn.f32 	%f189, %f29, %f173;
	add.rn.f32 	%f190, %f30, %f174;
	add.rn.f32 	%f191, %f31, %f175;
	add.rn.f32 	%f192, %f32, %f176;
	add.rn.f32 	%f193, %f1, %f177;
	add.rn.f32 	%f194, %f2, %f178;
	add.rn.f32 	%f195, %f3, %f179;
	add.rn.f32 	%f196, %f4, %f180;
	add.rn.f32 	%f197, %f5, %f181;
	add.rn.f32 	%f198, %f6, %f182;
	add.rn.f32 	%f199, %f7, %f183;
	add.rn.f32 	%f200, %f8, %f184;
	add.rn.f32 	%f201, %f9, %f185;
	add.rn.f32 	%f202, %f10, %f186;
	add.rn.f32 	%f203, %f11, %f187;
	add.rn.f32 	%f204, %f12, %f188;
	add.rn.f32 	%f205, %f13, %f189;
	add.rn.f32 	%f206, %f14, %f190;
	add.rn.f32 	%f207, %f15, %f191;
	add.rn.f32 	%f208, %f16, %f192;
	mul.rn.f32 	%f209, %f193, %f193;
	mul.rn.f32 	%f210, %f194, %f194;
	mul.rn.f32 	%f211, %f195, %f195;
	mul.rn.f32 	%f212, %f196, %f196;
	mul.rn.f32 	%f213, %f197, %f197;
	mul.rn.f32 	%f214, %f198, %f198;
	mul.rn.f32 	%f215, %f199, %f199;
	mul.rn.f32 	%f216, %f200, %f200;
	mul.rn.f32 	%f217, %f201, %f201;
	mul.rn.f32 	%f218, %f202, %f202;
	mul.rn.f32 	%f219, %f203, %f203;
	mul.rn.f32 	%f220, %f204, %f204;
	mul.rn.f32 	%f221, %f205, %f205;
	mul.rn.f32 	%f222, %f206, %f206;
	mul.rn.f32 	%f223, %f207, %f207;
	mul.rn.f32 	%f224, %f208, %f208;
	add.rn.f32 	%f225, %f209, %f210;
	add.rn.f32 	%f226, %f211, %f225;
	add.rn.f32 	%f227, %f212, %f226;
	add.rn.f32 	%f228, %f213, %f227;
	add.rn.f32 	%f229, %f214, %f228;
	add.rn.f32 	%f230, %f215, %f229;
	add.rn.f32 	%f231, %f216, %f230;
	add.rn.f32 	%f232, %f217, %f231;
	add.rn.f32 	%f233, %f218, %f232;
	add.rn.f32 	%f234, %f219, %f233;
	add.rn.f32 	%f235, %f220, %f234;
	add.rn.f32 	%f236, %f221, %f235;
	add.rn.f32 	%f237, %f222, %f236;
	add.rn.f32 	%f238, %f223, %f237;
	add.rn.f32 	%f239, %f224, %f238;
	mov.b32 	%r223, %f239;
	shfl.sync.bfly.b32	%r224, %r223, 16, 31, -1;
	mov.b32 	%f240, %r224;
	add.rn.f32 	%f241, %f239, %f240;
	mov.b32 	%r225, %f241;
	shfl.sync.bfly.b32	%r226, %r225, 8, 31, -1;
	mov.b32 	%f242, %r226;
	add.rn.f32 	%f243, %f241, %f242;
	mov.b32 	%r227, %f243;
	shfl.sync.bfly.b32	%r228, %r227, 4, 31, -1;
	mov.b32 	%f244, %r228;
	add.rn.f32 	%f245, %f243, %f244;
	mov.b32 	%r229, %f245;
	shfl.sync.bfly.b32	%r230, %r229, 2, 31, -1;
	mov.b32 	%f246, %r230;
	add.rn.f32 	%f247, %f245, %f246;
	mov.b32 	%r231, %f247;
	shfl.sync.bfly.b32	%r232, %r231, 1, 31, -1;
	mov.b32 	%f248, %r232;
	add.rn.f32 	%f249, %f247, %f248;
	setp.eq.s32 	%p1, %r218, 0;
	shr.u32 	%r233, %r217, 3;
	and.b32  	%r234, %r233, 4;
	cvt.u64.u32 	%rd49, %r234;
	mov.u64 	%rd50, global_smem;
	add.s64 	%rd51, %rd50, %rd49;
	mov.b32 	%r163, %f249;
	cvt.u32.u64 	%r162, %rd51;
	// begin inline asm
	@%p1 st.shared.b32 [ %r162 + 0 ], %r163;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r217, 2;
	shl.b32 	%r235, %r217, 2;
	cvt.u64.u32 	%rd52, %r235;
	add.s64 	%rd53, %rd50, %rd52;
	cvt.u32.u64 	%r165, %rd53;
	// begin inline asm
	@%p2 ld.shared.b32 %r164, [ %r165 + 0 ];
	// end inline asm
	mov.b32 	%f250, %r164;
	shfl.sync.bfly.b32	%r236, %r164, 1, 31, -1;
	mov.b32 	%f251, %r236;
	add.rn.f32 	%f252, %f250, %f251;
	setp.eq.s32 	%p3, %r217, 0;
	mov.b32 	%r167, %f252;
	// begin inline asm
	@%p3 st.shared.b32 [ %r165 + 0 ], %r167;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f253, [global_smem];
	mul.rn.f32 	%f254, %f253, 0f3A800000;
	// begin inline asm
	mov.u32 %r168, 0x0;
	ld.global.b32 { %r168 }, [ %rd17 + 0 ];
	// end inline asm
	mov.b32 	%f255, %r168;
	add.rn.f32 	%f256, %f254, %f255;
	rsqrt.approx.f32 	%f257, %f256;
	mul.rn.f32 	%f258, %f193, %f257;
	mul.rn.f32 	%f259, %f194, %f257;
	mul.rn.f32 	%f260, %f195, %f257;
	mul.rn.f32 	%f261, %f196, %f257;
	mul.rn.f32 	%f262, %f197, %f257;
	mul.rn.f32 	%f263, %f198, %f257;
	mul.rn.f32 	%f264, %f199, %f257;
	mul.rn.f32 	%f265, %f200, %f257;
	mul.rn.f32 	%f266, %f201, %f257;
	mul.rn.f32 	%f267, %f202, %f257;
	mul.rn.f32 	%f268, %f203, %f257;
	mul.rn.f32 	%f269, %f204, %f257;
	mul.rn.f32 	%f270, %f205, %f257;
	mul.rn.f32 	%f271, %f206, %f257;
	mul.rn.f32 	%f272, %f207, %f257;
	mul.rn.f32 	%f273, %f208, %f257;
	add.s64 	%rd18, %rd36, %rd39;
	add.s64 	%rd19, %rd18, 1024;
	// begin inline asm
	mov.u32 %r169, 0x0;
	mov.u32 %r170, 0x0;
	mov.u32 %r171, 0x0;
	mov.u32 %r172, 0x0;
	ld.global.v4.b32 { %r169, %r170, %r171, %r172 }, [ %rd18 + 0 ];
	// end inline asm
	mov.b32 	{%rs97, %rs98}, %r169;
	mov.b32 	{%rs99, %rs100}, %r170;
	mov.b32 	{%rs101, %rs102}, %r171;
	mov.b32 	{%rs103, %rs104}, %r172;
	// begin inline asm
	mov.u32 %r173, 0x0;
	mov.u32 %r174, 0x0;
	mov.u32 %r175, 0x0;
	mov.u32 %r176, 0x0;
	ld.global.v4.b32 { %r173, %r174, %r175, %r176 }, [ %rd19 + 0 ];
	// end inline asm
	mov.b32 	{%rs105, %rs106}, %r173;
	mov.b32 	{%rs107, %rs108}, %r174;
	mov.b32 	{%rs109, %rs110}, %r175;
	mov.b32 	{%rs111, %rs112}, %r176;
	// begin inline asm
	cvt.f32.bf16 %r177, %rs97;
	// end inline asm
	mov.b32 	%f274, %r177;
	// begin inline asm
	cvt.f32.bf16 %r178, %rs98;
	// end inline asm
	mov.b32 	%f275, %r178;
	// begin inline asm
	cvt.f32.bf16 %r179, %rs99;
	// end inline asm
	mov.b32 	%f276, %r179;
	// begin inline asm
	cvt.f32.bf16 %r180, %rs100;
	// end inline asm
	mov.b32 	%f277, %r180;
	// begin inline asm
	cvt.f32.bf16 %r181, %rs101;
	// end inline asm
	mov.b32 	%f278, %r181;
	// begin inline asm
	cvt.f32.bf16 %r182, %rs102;
	// end inline asm
	mov.b32 	%f279, %r182;
	// begin inline asm
	cvt.f32.bf16 %r183, %rs103;
	// end inline asm
	mov.b32 	%f280, %r183;
	// begin inline asm
	cvt.f32.bf16 %r184, %rs104;
	// end inline asm
	mov.b32 	%f281, %r184;
	// begin inline asm
	cvt.f32.bf16 %r185, %rs105;
	// end inline asm
	mov.b32 	%f282, %r185;
	// begin inline asm
	cvt.f32.bf16 %r186, %rs106;
	// end inline asm
	mov.b32 	%f283, %r186;
	// begin inline asm
	cvt.f32.bf16 %r187, %rs107;
	// end inline asm
	mov.b32 	%f284, %r187;
	// begin inline asm
	cvt.f32.bf16 %r188, %rs108;
	// end inline asm
	mov.b32 	%f285, %r188;
	// begin inline asm
	cvt.f32.bf16 %r189, %rs109;
	// end inline asm
	mov.b32 	%f286, %r189;
	// begin inline asm
	cvt.f32.bf16 %r190, %rs110;
	// end inline asm
	mov.b32 	%f287, %r190;
	// begin inline asm
	cvt.f32.bf16 %r191, %rs111;
	// end inline asm
	mov.b32 	%f288, %r191;
	// begin inline asm
	cvt.f32.bf16 %r192, %rs112;
	// end inline asm
	mov.b32 	%f289, %r192;
	mul.rn.f32 	%f290, %f258, %f274;
	mul.rn.f32 	%f291, %f259, %f275;
	mul.rn.f32 	%f292, %f260, %f276;
	mul.rn.f32 	%f293, %f261, %f277;
	mul.rn.f32 	%f294, %f262, %f278;
	mul.rn.f32 	%f295, %f263, %f279;
	mul.rn.f32 	%f296, %f264, %f280;
	mul.rn.f32 	%f297, %f265, %f281;
	mul.rn.f32 	%f298, %f266, %f282;
	mul.rn.f32 	%f299, %f267, %f283;
	mul.rn.f32 	%f300, %f268, %f284;
	mul.rn.f32 	%f301, %f269, %f285;
	mul.rn.f32 	%f302, %f270, %f286;
	mul.rn.f32 	%f303, %f271, %f287;
	mul.rn.f32 	%f304, %f272, %f288;
	mul.rn.f32 	%f305, %f273, %f289;
	mov.b32 	%r193, %f290;
	// begin inline asm
	cvt.rn.bf16.f32 %rs113, %r193;
	// end inline asm
	mov.b32 	%r194, %f291;
	// begin inline asm
	cvt.rn.bf16.f32 %rs114, %r194;
	// end inline asm
	mov.b32 	%r195, %f292;
	// begin inline asm
	cvt.rn.bf16.f32 %rs115, %r195;
	// end inline asm
	mov.b32 	%r196, %f293;
	// begin inline asm
	cvt.rn.bf16.f32 %rs116, %r196;
	// end inline asm
	mov.b32 	%r197, %f294;
	// begin inline asm
	cvt.rn.bf16.f32 %rs117, %r197;
	// end inline asm
	mov.b32 	%r198, %f295;
	// begin inline asm
	cvt.rn.bf16.f32 %rs118, %r198;
	// end inline asm
	mov.b32 	%r199, %f296;
	// begin inline asm
	cvt.rn.bf16.f32 %rs119, %r199;
	// end inline asm
	mov.b32 	%r200, %f297;
	// begin inline asm
	cvt.rn.bf16.f32 %rs120, %r200;
	// end inline asm
	mov.b32 	%r201, %f298;
	// begin inline asm
	cvt.rn.bf16.f32 %rs121, %r201;
	// end inline asm
	mov.b32 	%r202, %f299;
	// begin inline asm
	cvt.rn.bf16.f32 %rs122, %r202;
	// end inline asm
	mov.b32 	%r203, %f300;
	// begin inline asm
	cvt.rn.bf16.f32 %rs123, %r203;
	// end inline asm
	mov.b32 	%r204, %f301;
	// begin inline asm
	cvt.rn.bf16.f32 %rs124, %r204;
	// end inline asm
	mov.b32 	%r205, %f302;
	// begin inline asm
	cvt.rn.bf16.f32 %rs125, %r205;
	// end inline asm
	mov.b32 	%r206, %f303;
	// begin inline asm
	cvt.rn.bf16.f32 %rs126, %r206;
	// end inline asm
	mov.b32 	%r207, %f304;
	// begin inline asm
	cvt.rn.bf16.f32 %rs127, %r207;
	// end inline asm
	mov.b32 	%r208, %f305;
	// begin inline asm
	cvt.rn.bf16.f32 %rs128, %r208;
	// end inline asm
	add.s64 	%rd54, %rd24, %rd42;
	add.s64 	%rd20, %rd54, %rd39;
	add.s64 	%rd21, %rd20, 1024;
	mov.b32 	%r209, {%rs113, %rs114};
	mov.b32 	%r210, {%rs115, %rs116};
	mov.b32 	%r211, {%rs117, %rs118};
	mov.b32 	%r212, {%rs119, %rs120};
	// begin inline asm
	st.global.v4.b32 [ %rd20 + 0 ], { %r209, %r210, %r211, %r212 };
	// end inline asm
	mov.b32 	%r213, {%rs121, %rs122};
	mov.b32 	%r214, {%rs123, %rs124};
	mov.b32 	%r215, {%rs125, %rs126};
	mov.b32 	%r216, {%rs127, %rs128};
	// begin inline asm
	st.global.v4.b32 [ %rd21 + 0 ], { %r213, %r214, %r215, %r216 };
	// end inline asm
	ret;

}
	// .globl	loop_add_fusion_4
.visible .entry loop_add_fusion_4(
	.param .u64 .ptr .align 128 loop_add_fusion_4_param_0,
	.param .u64 .ptr .align 128 loop_add_fusion_4_param_1,
	.param .u64 .ptr .align 128 loop_add_fusion_4_param_2,
	.param .u64 .ptr .align 128 loop_add_fusion_4_param_3,
	.param .u64 .ptr .align 128 loop_add_fusion_4_param_4,
	.param .u64 .ptr .align 128 loop_add_fusion_4_param_5
)
.reqntid 128, 1, 1
{
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<9>;
	.reg .f32 	%f<18>;
	.reg .b64 	%rd<25>;

	ld.param.u64 	%rd1, [loop_add_fusion_4_param_0];
	ld.param.u64 	%rd2, [loop_add_fusion_4_param_5];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.param.u64 	%rd4, [loop_add_fusion_4_param_1];
	ld.param.u64 	%rd5, [loop_add_fusion_4_param_4];
	cvta.to.global.u64 	%rd6, %rd5;
	ld.param.u64 	%rd7, [loop_add_fusion_4_param_2];
	ld.param.u64 	%rd8, [loop_add_fusion_4_param_3];
	cvta.to.global.u64 	%rd9, %rd8;
	cvta.to.global.u64 	%rd10, %rd7;
	cvta.to.global.u64 	%rd11, %rd4;
	cvta.to.global.u64 	%rd12, %rd1;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shr.u32 	%r3, %r2, 3;
	shl.b32 	%r4, %r2, 7;
	and.b32  	%r5, %r4, 896;
	or.b32  	%r6, %r5, %r1;
	or.b32  	%r7, %r4, %r1;
	mul.wide.u32 	%rd13, %r7, 2;
	add.s64 	%rd14, %rd6, %rd13;
	ld.global.nc.u16 	%rs1, [%rd14];
	cvt.f32.bf16 	%f1, %rs1;
	mul.wide.u32 	%rd15, %r7, 4;
	add.s64 	%rd16, %rd9, %rd15;
	ld.global.f32 	%f2, [%rd16];
	add.s64 	%rd17, %rd3, %rd13;
	ld.global.nc.u16 	%rs2, [%rd17];
	mul.lo.s32 	%r8, %r3, 26624;
	cvt.u64.u32 	%rd18, %r6;
	cvt.u64.u32 	%rd19, %r8;
	add.s64 	%rd20, %rd19, %rd18;
	shl.b64 	%rd21, %rd20, 1;
	add.s64 	%rd22, %rd12, %rd21;
	ld.global.nc.u16 	%rs3, [%rd22+18432];
	cvt.f32.bf16 	%f3, %rs3;
	add.rn.f32 	%f4, %f2, %f1;
	cvt.f32.bf16 	%f5, %rs2;
	add.rn.f32 	%f6, %f4, %f3;
	add.s64 	%rd23, %rd10, %rd13;
	ld.global.nc.u16 	%rs4, [%rd23];
	ld.global.nc.u16 	%rs5, [%rd22+16384];
	cvt.f32.bf16 	%f7, %rs5;
	add.rn.f32 	%f8, %f6, %f5;
	cvt.f32.bf16 	%f9, %rs4;
	add.rn.f32 	%f10, %f8, %f7;
	add.s64 	%rd24, %rd11, %rd13;
	ld.global.nc.u16 	%rs6, [%rd24];
	ld.global.nc.u16 	%rs7, [%rd22+14336];
	cvt.f32.bf16 	%f11, %rs7;
	add.rn.f32 	%f12, %f10, %f9;
	cvt.f32.bf16 	%f13, %rs6;
	add.rn.f32 	%f14, %f12, %f11;
	ld.global.nc.u16 	%rs8, [%rd22+12288];
	cvt.f32.bf16 	%f15, %rs8;
	add.rn.f32 	%f16, %f14, %f13;
	add.rn.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd16], %f17;
	ret;

}
	// .globl	fusion_346
.visible .entry fusion_346(
	.param .u64 .ptr .align 16 fusion_346_param_0,
	.param .u64 .ptr .align 16 fusion_346_param_1,
	.param .u64 .ptr .align 128 fusion_346_param_2,
	.param .u64 .ptr .align 128 fusion_346_param_3,
	.param .u64 .ptr .align 128 fusion_346_param_4,
	.param .u64 .ptr .align 128 fusion_346_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<65>;
	.reg .b32 	%r<141>;
	.reg .f32 	%f<178>;
	.reg .b64 	%rd<41>;

	ld.param.u64 	%rd14, [fusion_346_param_0];
	ld.param.u64 	%rd15, [fusion_346_param_5];
	cvta.to.global.u64 	%rd16, %rd15;
	ld.param.u64 	%rd17, [fusion_346_param_1];
	ld.param.u64 	%rd18, [fusion_346_param_4];
	cvta.to.global.u64 	%rd19, %rd18;
	ld.param.u64 	%rd20, [fusion_346_param_2];
	ld.param.u64 	%rd21, [fusion_346_param_3];
	cvta.to.global.u64 	%rd22, %rd21;
	cvta.to.global.u64 	%rd23, %rd20;
	cvta.to.global.u64 	%rd24, %rd17;
	cvta.to.global.u64 	%rd9, %rd14;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd25, %r1, 53248;
	add.s64 	%rd26, %rd19, %rd25;
	mov.u32 	%r121, %tid.x;
	and.b32  	%r122, %r121, 31;
	shl.b32 	%r123, %r121, 3;
	and.b32  	%r124, %r123, 248;
	setp.lt.u32 	%p4, %r121, 32;
	selp.b32 	%r125, 0, 256, %p4;
	or.b32  	%r126, %r124, %r125;
	mul.wide.u32 	%rd27, %r126, 2;
	add.s64 	%rd28, %rd26, %rd27;
	add.s64 	%rd1, %rd28, 10240;
	add.s64 	%rd2, %rd28, 11264;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd29, %r1, 1024;
	shl.b64 	%rd30, %rd29, 1;
	add.s64 	%rd31, %rd22, %rd30;
	add.s64 	%rd3, %rd31, %rd27;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	shl.b64 	%rd32, %rd29, 2;
	add.s64 	%rd33, %rd23, %rd32;
	mul.wide.u32 	%rd34, %r126, 4;
	add.s64 	%rd5, %rd33, %rd34;
	add.s64 	%rd6, %rd5, 16;
	add.s64 	%rd7, %rd5, 2048;
	add.s64 	%rd8, %rd5, 2064;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r50;
	mov.b32 	%f34, %r51;
	mov.b32 	%f35, %r52;
	mov.b32 	%f36, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f37, %r54;
	mov.b32 	%f38, %r55;
	mov.b32 	%f39, %r56;
	mov.b32 	%f40, %r57;
	// begin inline asm
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	ld.global.v4.b32 { %r58, %r59, %r60, %r61 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r58;
	mov.b32 	%f42, %r59;
	mov.b32 	%f43, %r60;
	mov.b32 	%f44, %r61;
	// begin inline asm
	mov.u32 %r62, 0x0;
	mov.u32 %r63, 0x0;
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	ld.global.v4.b32 { %r62, %r63, %r64, %r65 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f45, %r62;
	mov.b32 	%f46, %r63;
	mov.b32 	%f47, %r64;
	mov.b32 	%f48, %r65;
	add.rn.f32 	%f49, %f17, %f33;
	add.rn.f32 	%f50, %f18, %f34;
	add.rn.f32 	%f51, %f19, %f35;
	add.rn.f32 	%f52, %f20, %f36;
	add.rn.f32 	%f53, %f21, %f37;
	add.rn.f32 	%f54, %f22, %f38;
	add.rn.f32 	%f55, %f23, %f39;
	add.rn.f32 	%f56, %f24, %f40;
	add.rn.f32 	%f57, %f25, %f41;
	add.rn.f32 	%f58, %f26, %f42;
	add.rn.f32 	%f59, %f27, %f43;
	add.rn.f32 	%f60, %f28, %f44;
	add.rn.f32 	%f61, %f29, %f45;
	add.rn.f32 	%f62, %f30, %f46;
	add.rn.f32 	%f63, %f31, %f47;
	add.rn.f32 	%f64, %f32, %f48;
	add.rn.f32 	%f65, %f1, %f49;
	add.rn.f32 	%f66, %f2, %f50;
	add.rn.f32 	%f67, %f3, %f51;
	add.rn.f32 	%f68, %f4, %f52;
	add.rn.f32 	%f69, %f5, %f53;
	add.rn.f32 	%f70, %f6, %f54;
	add.rn.f32 	%f71, %f7, %f55;
	add.rn.f32 	%f72, %f8, %f56;
	add.rn.f32 	%f73, %f9, %f57;
	add.rn.f32 	%f74, %f10, %f58;
	add.rn.f32 	%f75, %f11, %f59;
	add.rn.f32 	%f76, %f12, %f60;
	add.rn.f32 	%f77, %f13, %f61;
	add.rn.f32 	%f78, %f14, %f62;
	add.rn.f32 	%f79, %f15, %f63;
	add.rn.f32 	%f80, %f16, %f64;
	mul.rn.f32 	%f81, %f65, %f65;
	mul.rn.f32 	%f82, %f66, %f66;
	mul.rn.f32 	%f83, %f67, %f67;
	mul.rn.f32 	%f84, %f68, %f68;
	mul.rn.f32 	%f85, %f69, %f69;
	mul.rn.f32 	%f86, %f70, %f70;
	mul.rn.f32 	%f87, %f71, %f71;
	mul.rn.f32 	%f88, %f72, %f72;
	mul.rn.f32 	%f89, %f73, %f73;
	mul.rn.f32 	%f90, %f74, %f74;
	mul.rn.f32 	%f91, %f75, %f75;
	mul.rn.f32 	%f92, %f76, %f76;
	mul.rn.f32 	%f93, %f77, %f77;
	mul.rn.f32 	%f94, %f78, %f78;
	mul.rn.f32 	%f95, %f79, %f79;
	mul.rn.f32 	%f96, %f80, %f80;
	add.rn.f32 	%f97, %f81, %f82;
	add.rn.f32 	%f98, %f83, %f97;
	add.rn.f32 	%f99, %f84, %f98;
	add.rn.f32 	%f100, %f85, %f99;
	add.rn.f32 	%f101, %f86, %f100;
	add.rn.f32 	%f102, %f87, %f101;
	add.rn.f32 	%f103, %f88, %f102;
	add.rn.f32 	%f104, %f89, %f103;
	add.rn.f32 	%f105, %f90, %f104;
	add.rn.f32 	%f106, %f91, %f105;
	add.rn.f32 	%f107, %f92, %f106;
	add.rn.f32 	%f108, %f93, %f107;
	add.rn.f32 	%f109, %f94, %f108;
	add.rn.f32 	%f110, %f95, %f109;
	add.rn.f32 	%f111, %f96, %f110;
	mov.b32 	%r127, %f111;
	shfl.sync.bfly.b32	%r128, %r127, 16, 31, -1;
	mov.b32 	%f112, %r128;
	add.rn.f32 	%f113, %f111, %f112;
	mov.b32 	%r129, %f113;
	shfl.sync.bfly.b32	%r130, %r129, 8, 31, -1;
	mov.b32 	%f114, %r130;
	add.rn.f32 	%f115, %f113, %f114;
	mov.b32 	%r131, %f115;
	shfl.sync.bfly.b32	%r132, %r131, 4, 31, -1;
	mov.b32 	%f116, %r132;
	add.rn.f32 	%f117, %f115, %f116;
	mov.b32 	%r133, %f117;
	shfl.sync.bfly.b32	%r134, %r133, 2, 31, -1;
	mov.b32 	%f118, %r134;
	add.rn.f32 	%f119, %f117, %f118;
	mov.b32 	%r135, %f119;
	shfl.sync.bfly.b32	%r136, %r135, 1, 31, -1;
	mov.b32 	%f120, %r136;
	add.rn.f32 	%f121, %f119, %f120;
	setp.eq.s32 	%p1, %r122, 0;
	shr.u32 	%r137, %r121, 3;
	and.b32  	%r138, %r137, 4;
	cvt.u64.u32 	%rd35, %r138;
	mov.u64 	%rd36, global_smem;
	add.s64 	%rd37, %rd36, %rd35;
	mov.b32 	%r67, %f121;
	cvt.u32.u64 	%r66, %rd37;
	// begin inline asm
	@%p1 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r121, 2;
	shl.b32 	%r139, %r121, 2;
	cvt.u64.u32 	%rd38, %r139;
	add.s64 	%rd39, %rd36, %rd38;
	cvt.u32.u64 	%r69, %rd39;
	// begin inline asm
	@%p2 ld.shared.b32 %r68, [ %r69 + 0 ];
	// end inline asm
	mov.b32 	%f122, %r68;
	shfl.sync.bfly.b32	%r140, %r68, 1, 31, -1;
	mov.b32 	%f123, %r140;
	add.rn.f32 	%f124, %f122, %f123;
	setp.eq.s32 	%p3, %r121, 0;
	mov.b32 	%r71, %f124;
	// begin inline asm
	@%p3 st.shared.b32 [ %r69 + 0 ], %r71;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f125, [global_smem];
	mul.rn.f32 	%f126, %f125, 0f3A800000;
	// begin inline asm
	mov.u32 %r72, 0x0;
	ld.global.b32 { %r72 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f127, %r72;
	add.rn.f32 	%f128, %f126, %f127;
	rsqrt.approx.f32 	%f129, %f128;
	mul.rn.f32 	%f130, %f65, %f129;
	mul.rn.f32 	%f131, %f66, %f129;
	mul.rn.f32 	%f132, %f67, %f129;
	mul.rn.f32 	%f133, %f68, %f129;
	mul.rn.f32 	%f134, %f69, %f129;
	mul.rn.f32 	%f135, %f70, %f129;
	mul.rn.f32 	%f136, %f71, %f129;
	mul.rn.f32 	%f137, %f72, %f129;
	mul.rn.f32 	%f138, %f73, %f129;
	mul.rn.f32 	%f139, %f74, %f129;
	mul.rn.f32 	%f140, %f75, %f129;
	mul.rn.f32 	%f141, %f76, %f129;
	mul.rn.f32 	%f142, %f77, %f129;
	mul.rn.f32 	%f143, %f78, %f129;
	mul.rn.f32 	%f144, %f79, %f129;
	mul.rn.f32 	%f145, %f80, %f129;
	add.s64 	%rd10, %rd24, %rd27;
	add.s64 	%rd11, %rd10, 1024;
	// begin inline asm
	mov.u32 %r73, 0x0;
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	ld.global.v4.b32 { %r73, %r74, %r75, %r76 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r73;
	mov.b32 	{%rs35, %rs36}, %r74;
	mov.b32 	{%rs37, %rs38}, %r75;
	mov.b32 	{%rs39, %rs40}, %r76;
	// begin inline asm
	mov.u32 %r77, 0x0;
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	ld.global.v4.b32 { %r77, %r78, %r79, %r80 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r77;
	mov.b32 	{%rs43, %rs44}, %r78;
	mov.b32 	{%rs45, %rs46}, %r79;
	mov.b32 	{%rs47, %rs48}, %r80;
	// begin inline asm
	cvt.f32.bf16 %r81, %rs33;
	// end inline asm
	mov.b32 	%f146, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs34;
	// end inline asm
	mov.b32 	%f147, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs35;
	// end inline asm
	mov.b32 	%f148, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs36;
	// end inline asm
	mov.b32 	%f149, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs37;
	// end inline asm
	mov.b32 	%f150, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs38;
	// end inline asm
	mov.b32 	%f151, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs39;
	// end inline asm
	mov.b32 	%f152, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs40;
	// end inline asm
	mov.b32 	%f153, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs41;
	// end inline asm
	mov.b32 	%f154, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs42;
	// end inline asm
	mov.b32 	%f155, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs43;
	// end inline asm
	mov.b32 	%f156, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs44;
	// end inline asm
	mov.b32 	%f157, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs45;
	// end inline asm
	mov.b32 	%f158, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs46;
	// end inline asm
	mov.b32 	%f159, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs47;
	// end inline asm
	mov.b32 	%f160, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs48;
	// end inline asm
	mov.b32 	%f161, %r96;
	mul.rn.f32 	%f162, %f130, %f146;
	mul.rn.f32 	%f163, %f131, %f147;
	mul.rn.f32 	%f164, %f132, %f148;
	mul.rn.f32 	%f165, %f133, %f149;
	mul.rn.f32 	%f166, %f134, %f150;
	mul.rn.f32 	%f167, %f135, %f151;
	mul.rn.f32 	%f168, %f136, %f152;
	mul.rn.f32 	%f169, %f137, %f153;
	mul.rn.f32 	%f170, %f138, %f154;
	mul.rn.f32 	%f171, %f139, %f155;
	mul.rn.f32 	%f172, %f140, %f156;
	mul.rn.f32 	%f173, %f141, %f157;
	mul.rn.f32 	%f174, %f142, %f158;
	mul.rn.f32 	%f175, %f143, %f159;
	mul.rn.f32 	%f176, %f144, %f160;
	mul.rn.f32 	%f177, %f145, %f161;
	mov.b32 	%r97, %f162;
	// begin inline asm
	cvt.rn.bf16.f32 %rs49, %r97;
	// end inline asm
	mov.b32 	%r98, %f163;
	// begin inline asm
	cvt.rn.bf16.f32 %rs50, %r98;
	// end inline asm
	mov.b32 	%r99, %f164;
	// begin inline asm
	cvt.rn.bf16.f32 %rs51, %r99;
	// end inline asm
	mov.b32 	%r100, %f165;
	// begin inline asm
	cvt.rn.bf16.f32 %rs52, %r100;
	// end inline asm
	mov.b32 	%r101, %f166;
	// begin inline asm
	cvt.rn.bf16.f32 %rs53, %r101;
	// end inline asm
	mov.b32 	%r102, %f167;
	// begin inline asm
	cvt.rn.bf16.f32 %rs54, %r102;
	// end inline asm
	mov.b32 	%r103, %f168;
	// begin inline asm
	cvt.rn.bf16.f32 %rs55, %r103;
	// end inline asm
	mov.b32 	%r104, %f169;
	// begin inline asm
	cvt.rn.bf16.f32 %rs56, %r104;
	// end inline asm
	mov.b32 	%r105, %f170;
	// begin inline asm
	cvt.rn.bf16.f32 %rs57, %r105;
	// end inline asm
	mov.b32 	%r106, %f171;
	// begin inline asm
	cvt.rn.bf16.f32 %rs58, %r106;
	// end inline asm
	mov.b32 	%r107, %f172;
	// begin inline asm
	cvt.rn.bf16.f32 %rs59, %r107;
	// end inline asm
	mov.b32 	%r108, %f173;
	// begin inline asm
	cvt.rn.bf16.f32 %rs60, %r108;
	// end inline asm
	mov.b32 	%r109, %f174;
	// begin inline asm
	cvt.rn.bf16.f32 %rs61, %r109;
	// end inline asm
	mov.b32 	%r110, %f175;
	// begin inline asm
	cvt.rn.bf16.f32 %rs62, %r110;
	// end inline asm
	mov.b32 	%r111, %f176;
	// begin inline asm
	cvt.rn.bf16.f32 %rs63, %r111;
	// end inline asm
	mov.b32 	%r112, %f177;
	// begin inline asm
	cvt.rn.bf16.f32 %rs64, %r112;
	// end inline asm
	add.s64 	%rd40, %rd16, %rd30;
	add.s64 	%rd12, %rd40, %rd27;
	add.s64 	%rd13, %rd12, 1024;
	mov.b32 	%r113, {%rs49, %rs50};
	mov.b32 	%r114, {%rs51, %rs52};
	mov.b32 	%r115, {%rs53, %rs54};
	mov.b32 	%r116, {%rs55, %rs56};
	// begin inline asm
	st.global.v4.b32 [ %rd12 + 0 ], { %r113, %r114, %r115, %r116 };
	// end inline asm
	mov.b32 	%r117, {%rs57, %rs58};
	mov.b32 	%r118, {%rs59, %rs60};
	mov.b32 	%r119, {%rs61, %rs62};
	mov.b32 	%r120, {%rs63, %rs64};
	// begin inline asm
	st.global.v4.b32 [ %rd13 + 0 ], { %r117, %r118, %r119, %r120 };
	// end inline asm
	ret;

}
	// .globl	fusion_347
.visible .entry fusion_347(
	.param .u64 .ptr .align 16 fusion_347_param_0,
	.param .u64 .ptr .align 16 fusion_347_param_1,
	.param .u64 .ptr .align 128 fusion_347_param_2,
	.param .u64 .ptr .align 128 fusion_347_param_3,
	.param .u64 .ptr .align 128 fusion_347_param_4,
	.param .u64 .ptr .align 128 fusion_347_param_5,
	.param .u64 .ptr .align 128 fusion_347_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<97>;
	.reg .b32 	%r<189>;
	.reg .f32 	%f<242>;
	.reg .b64 	%rd<48>;

	ld.param.u64 	%rd18, [fusion_347_param_0];
	ld.param.u64 	%rd19, [fusion_347_param_6];
	cvta.to.global.u64 	%rd20, %rd19;
	ld.param.u64 	%rd21, [fusion_347_param_1];
	ld.param.u64 	%rd22, [fusion_347_param_5];
	cvta.to.global.u64 	%rd23, %rd22;
	ld.param.u64 	%rd24, [fusion_347_param_2];
	ld.param.u64 	%rd25, [fusion_347_param_4];
	cvta.to.global.u64 	%rd26, %rd25;
	ld.param.u64 	%rd27, [fusion_347_param_3];
	cvta.to.global.u64 	%rd28, %rd27;
	cvta.to.global.u64 	%rd29, %rd24;
	cvta.to.global.u64 	%rd30, %rd21;
	cvta.to.global.u64 	%rd13, %rd18;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd31, %r1, 53248;
	add.s64 	%rd32, %rd26, %rd31;
	mov.u32 	%r169, %tid.x;
	and.b32  	%r170, %r169, 31;
	shl.b32 	%r171, %r169, 3;
	and.b32  	%r172, %r171, 248;
	setp.lt.u32 	%p4, %r169, 32;
	selp.b32 	%r173, 0, 256, %p4;
	or.b32  	%r174, %r172, %r173;
	mul.wide.u32 	%rd33, %r174, 2;
	add.s64 	%rd34, %rd32, %rd33;
	add.s64 	%rd1, %rd34, 8192;
	add.s64 	%rd2, %rd34, 9216;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd35, %r1, 1024;
	shl.b64 	%rd36, %rd35, 1;
	add.s64 	%rd37, %rd23, %rd36;
	add.s64 	%rd3, %rd37, %rd33;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	add.s64 	%rd5, %rd34, 10240;
	add.s64 	%rd6, %rd34, 11264;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r50;
	mov.b32 	{%rs35, %rs36}, %r51;
	mov.b32 	{%rs37, %rs38}, %r52;
	mov.b32 	{%rs39, %rs40}, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r54;
	mov.b32 	{%rs43, %rs44}, %r55;
	mov.b32 	{%rs45, %rs46}, %r56;
	mov.b32 	{%rs47, %rs48}, %r57;
	// begin inline asm
	cvt.f32.bf16 %r58, %rs33;
	// end inline asm
	mov.b32 	%f33, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs34;
	// end inline asm
	mov.b32 	%f34, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs35;
	// end inline asm
	mov.b32 	%f35, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs36;
	// end inline asm
	mov.b32 	%f36, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs37;
	// end inline asm
	mov.b32 	%f37, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs38;
	// end inline asm
	mov.b32 	%f38, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs39;
	// end inline asm
	mov.b32 	%f39, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs40;
	// end inline asm
	mov.b32 	%f40, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs41;
	// end inline asm
	mov.b32 	%f41, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs42;
	// end inline asm
	mov.b32 	%f42, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs43;
	// end inline asm
	mov.b32 	%f43, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs44;
	// end inline asm
	mov.b32 	%f44, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs45;
	// end inline asm
	mov.b32 	%f45, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs46;
	// end inline asm
	mov.b32 	%f46, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs47;
	// end inline asm
	mov.b32 	%f47, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs48;
	// end inline asm
	mov.b32 	%f48, %r73;
	add.s64 	%rd38, %rd28, %rd36;
	add.s64 	%rd7, %rd38, %rd33;
	add.s64 	%rd8, %rd7, 1024;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	ld.global.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs49, %rs50}, %r74;
	mov.b32 	{%rs51, %rs52}, %r75;
	mov.b32 	{%rs53, %rs54}, %r76;
	mov.b32 	{%rs55, %rs56}, %r77;
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	ld.global.v4.b32 { %r78, %r79, %r80, %r81 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	{%rs57, %rs58}, %r78;
	mov.b32 	{%rs59, %rs60}, %r79;
	mov.b32 	{%rs61, %rs62}, %r80;
	mov.b32 	{%rs63, %rs64}, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs49;
	// end inline asm
	mov.b32 	%f49, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs50;
	// end inline asm
	mov.b32 	%f50, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs51;
	// end inline asm
	mov.b32 	%f51, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs52;
	// end inline asm
	mov.b32 	%f52, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs53;
	// end inline asm
	mov.b32 	%f53, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs54;
	// end inline asm
	mov.b32 	%f54, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs55;
	// end inline asm
	mov.b32 	%f55, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs56;
	// end inline asm
	mov.b32 	%f56, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs57;
	// end inline asm
	mov.b32 	%f57, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs58;
	// end inline asm
	mov.b32 	%f58, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs59;
	// end inline asm
	mov.b32 	%f59, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs60;
	// end inline asm
	mov.b32 	%f60, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs61;
	// end inline asm
	mov.b32 	%f61, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs62;
	// end inline asm
	mov.b32 	%f62, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs63;
	// end inline asm
	mov.b32 	%f63, %r96;
	// begin inline asm
	cvt.f32.bf16 %r97, %rs64;
	// end inline asm
	mov.b32 	%f64, %r97;
	shl.b64 	%rd39, %rd35, 2;
	add.s64 	%rd40, %rd29, %rd39;
	mul.wide.u32 	%rd41, %r174, 4;
	add.s64 	%rd9, %rd40, %rd41;
	add.s64 	%rd10, %rd9, 16;
	add.s64 	%rd11, %rd9, 2048;
	add.s64 	%rd12, %rd9, 2064;
	// begin inline asm
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	ld.global.v4.b32 { %r98, %r99, %r100, %r101 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f65, %r98;
	mov.b32 	%f66, %r99;
	mov.b32 	%f67, %r100;
	mov.b32 	%f68, %r101;
	// begin inline asm
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	ld.global.v4.b32 { %r102, %r103, %r104, %r105 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f69, %r102;
	mov.b32 	%f70, %r103;
	mov.b32 	%f71, %r104;
	mov.b32 	%f72, %r105;
	// begin inline asm
	mov.u32 %r106, 0x0;
	mov.u32 %r107, 0x0;
	mov.u32 %r108, 0x0;
	mov.u32 %r109, 0x0;
	ld.global.v4.b32 { %r106, %r107, %r108, %r109 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f73, %r106;
	mov.b32 	%f74, %r107;
	mov.b32 	%f75, %r108;
	mov.b32 	%f76, %r109;
	// begin inline asm
	mov.u32 %r110, 0x0;
	mov.u32 %r111, 0x0;
	mov.u32 %r112, 0x0;
	mov.u32 %r113, 0x0;
	ld.global.v4.b32 { %r110, %r111, %r112, %r113 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f77, %r110;
	mov.b32 	%f78, %r111;
	mov.b32 	%f79, %r112;
	mov.b32 	%f80, %r113;
	add.rn.f32 	%f81, %f49, %f65;
	add.rn.f32 	%f82, %f50, %f66;
	add.rn.f32 	%f83, %f51, %f67;
	add.rn.f32 	%f84, %f52, %f68;
	add.rn.f32 	%f85, %f53, %f69;
	add.rn.f32 	%f86, %f54, %f70;
	add.rn.f32 	%f87, %f55, %f71;
	add.rn.f32 	%f88, %f56, %f72;
	add.rn.f32 	%f89, %f57, %f73;
	add.rn.f32 	%f90, %f58, %f74;
	add.rn.f32 	%f91, %f59, %f75;
	add.rn.f32 	%f92, %f60, %f76;
	add.rn.f32 	%f93, %f61, %f77;
	add.rn.f32 	%f94, %f62, %f78;
	add.rn.f32 	%f95, %f63, %f79;
	add.rn.f32 	%f96, %f64, %f80;
	add.rn.f32 	%f97, %f33, %f81;
	add.rn.f32 	%f98, %f34, %f82;
	add.rn.f32 	%f99, %f35, %f83;
	add.rn.f32 	%f100, %f36, %f84;
	add.rn.f32 	%f101, %f37, %f85;
	add.rn.f32 	%f102, %f38, %f86;
	add.rn.f32 	%f103, %f39, %f87;
	add.rn.f32 	%f104, %f40, %f88;
	add.rn.f32 	%f105, %f41, %f89;
	add.rn.f32 	%f106, %f42, %f90;
	add.rn.f32 	%f107, %f43, %f91;
	add.rn.f32 	%f108, %f44, %f92;
	add.rn.f32 	%f109, %f45, %f93;
	add.rn.f32 	%f110, %f46, %f94;
	add.rn.f32 	%f111, %f47, %f95;
	add.rn.f32 	%f112, %f48, %f96;
	add.rn.f32 	%f113, %f17, %f97;
	add.rn.f32 	%f114, %f18, %f98;
	add.rn.f32 	%f115, %f19, %f99;
	add.rn.f32 	%f116, %f20, %f100;
	add.rn.f32 	%f117, %f21, %f101;
	add.rn.f32 	%f118, %f22, %f102;
	add.rn.f32 	%f119, %f23, %f103;
	add.rn.f32 	%f120, %f24, %f104;
	add.rn.f32 	%f121, %f25, %f105;
	add.rn.f32 	%f122, %f26, %f106;
	add.rn.f32 	%f123, %f27, %f107;
	add.rn.f32 	%f124, %f28, %f108;
	add.rn.f32 	%f125, %f29, %f109;
	add.rn.f32 	%f126, %f30, %f110;
	add.rn.f32 	%f127, %f31, %f111;
	add.rn.f32 	%f128, %f32, %f112;
	add.rn.f32 	%f129, %f1, %f113;
	add.rn.f32 	%f130, %f2, %f114;
	add.rn.f32 	%f131, %f3, %f115;
	add.rn.f32 	%f132, %f4, %f116;
	add.rn.f32 	%f133, %f5, %f117;
	add.rn.f32 	%f134, %f6, %f118;
	add.rn.f32 	%f135, %f7, %f119;
	add.rn.f32 	%f136, %f8, %f120;
	add.rn.f32 	%f137, %f9, %f121;
	add.rn.f32 	%f138, %f10, %f122;
	add.rn.f32 	%f139, %f11, %f123;
	add.rn.f32 	%f140, %f12, %f124;
	add.rn.f32 	%f141, %f13, %f125;
	add.rn.f32 	%f142, %f14, %f126;
	add.rn.f32 	%f143, %f15, %f127;
	add.rn.f32 	%f144, %f16, %f128;
	mul.rn.f32 	%f145, %f129, %f129;
	mul.rn.f32 	%f146, %f130, %f130;
	mul.rn.f32 	%f147, %f131, %f131;
	mul.rn.f32 	%f148, %f132, %f132;
	mul.rn.f32 	%f149, %f133, %f133;
	mul.rn.f32 	%f150, %f134, %f134;
	mul.rn.f32 	%f151, %f135, %f135;
	mul.rn.f32 	%f152, %f136, %f136;
	mul.rn.f32 	%f153, %f137, %f137;
	mul.rn.f32 	%f154, %f138, %f138;
	mul.rn.f32 	%f155, %f139, %f139;
	mul.rn.f32 	%f156, %f140, %f140;
	mul.rn.f32 	%f157, %f141, %f141;
	mul.rn.f32 	%f158, %f142, %f142;
	mul.rn.f32 	%f159, %f143, %f143;
	mul.rn.f32 	%f160, %f144, %f144;
	add.rn.f32 	%f161, %f145, %f146;
	add.rn.f32 	%f162, %f147, %f161;
	add.rn.f32 	%f163, %f148, %f162;
	add.rn.f32 	%f164, %f149, %f163;
	add.rn.f32 	%f165, %f150, %f164;
	add.rn.f32 	%f166, %f151, %f165;
	add.rn.f32 	%f167, %f152, %f166;
	add.rn.f32 	%f168, %f153, %f167;
	add.rn.f32 	%f169, %f154, %f168;
	add.rn.f32 	%f170, %f155, %f169;
	add.rn.f32 	%f171, %f156, %f170;
	add.rn.f32 	%f172, %f157, %f171;
	add.rn.f32 	%f173, %f158, %f172;
	add.rn.f32 	%f174, %f159, %f173;
	add.rn.f32 	%f175, %f160, %f174;
	mov.b32 	%r175, %f175;
	shfl.sync.bfly.b32	%r176, %r175, 16, 31, -1;
	mov.b32 	%f176, %r176;
	add.rn.f32 	%f177, %f175, %f176;
	mov.b32 	%r177, %f177;
	shfl.sync.bfly.b32	%r178, %r177, 8, 31, -1;
	mov.b32 	%f178, %r178;
	add.rn.f32 	%f179, %f177, %f178;
	mov.b32 	%r179, %f179;
	shfl.sync.bfly.b32	%r180, %r179, 4, 31, -1;
	mov.b32 	%f180, %r180;
	add.rn.f32 	%f181, %f179, %f180;
	mov.b32 	%r181, %f181;
	shfl.sync.bfly.b32	%r182, %r181, 2, 31, -1;
	mov.b32 	%f182, %r182;
	add.rn.f32 	%f183, %f181, %f182;
	mov.b32 	%r183, %f183;
	shfl.sync.bfly.b32	%r184, %r183, 1, 31, -1;
	mov.b32 	%f184, %r184;
	add.rn.f32 	%f185, %f183, %f184;
	setp.eq.s32 	%p1, %r170, 0;
	shr.u32 	%r185, %r169, 3;
	and.b32  	%r186, %r185, 4;
	cvt.u64.u32 	%rd42, %r186;
	mov.u64 	%rd43, global_smem;
	add.s64 	%rd44, %rd43, %rd42;
	mov.b32 	%r115, %f185;
	cvt.u32.u64 	%r114, %rd44;
	// begin inline asm
	@%p1 st.shared.b32 [ %r114 + 0 ], %r115;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r169, 2;
	shl.b32 	%r187, %r169, 2;
	cvt.u64.u32 	%rd45, %r187;
	add.s64 	%rd46, %rd43, %rd45;
	cvt.u32.u64 	%r117, %rd46;
	// begin inline asm
	@%p2 ld.shared.b32 %r116, [ %r117 + 0 ];
	// end inline asm
	mov.b32 	%f186, %r116;
	shfl.sync.bfly.b32	%r188, %r116, 1, 31, -1;
	mov.b32 	%f187, %r188;
	add.rn.f32 	%f188, %f186, %f187;
	setp.eq.s32 	%p3, %r169, 0;
	mov.b32 	%r119, %f188;
	// begin inline asm
	@%p3 st.shared.b32 [ %r117 + 0 ], %r119;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f189, [global_smem];
	mul.rn.f32 	%f190, %f189, 0f3A800000;
	// begin inline asm
	mov.u32 %r120, 0x0;
	ld.global.b32 { %r120 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f191, %r120;
	add.rn.f32 	%f192, %f190, %f191;
	rsqrt.approx.f32 	%f193, %f192;
	mul.rn.f32 	%f194, %f129, %f193;
	mul.rn.f32 	%f195, %f130, %f193;
	mul.rn.f32 	%f196, %f131, %f193;
	mul.rn.f32 	%f197, %f132, %f193;
	mul.rn.f32 	%f198, %f133, %f193;
	mul.rn.f32 	%f199, %f134, %f193;
	mul.rn.f32 	%f200, %f135, %f193;
	mul.rn.f32 	%f201, %f136, %f193;
	mul.rn.f32 	%f202, %f137, %f193;
	mul.rn.f32 	%f203, %f138, %f193;
	mul.rn.f32 	%f204, %f139, %f193;
	mul.rn.f32 	%f205, %f140, %f193;
	mul.rn.f32 	%f206, %f141, %f193;
	mul.rn.f32 	%f207, %f142, %f193;
	mul.rn.f32 	%f208, %f143, %f193;
	mul.rn.f32 	%f209, %f144, %f193;
	add.s64 	%rd14, %rd30, %rd33;
	add.s64 	%rd15, %rd14, 1024;
	// begin inline asm
	mov.u32 %r121, 0x0;
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	ld.global.v4.b32 { %r121, %r122, %r123, %r124 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	{%rs65, %rs66}, %r121;
	mov.b32 	{%rs67, %rs68}, %r122;
	mov.b32 	{%rs69, %rs70}, %r123;
	mov.b32 	{%rs71, %rs72}, %r124;
	// begin inline asm
	mov.u32 %r125, 0x0;
	mov.u32 %r126, 0x0;
	mov.u32 %r127, 0x0;
	mov.u32 %r128, 0x0;
	ld.global.v4.b32 { %r125, %r126, %r127, %r128 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	{%rs73, %rs74}, %r125;
	mov.b32 	{%rs75, %rs76}, %r126;
	mov.b32 	{%rs77, %rs78}, %r127;
	mov.b32 	{%rs79, %rs80}, %r128;
	// begin inline asm
	cvt.f32.bf16 %r129, %rs65;
	// end inline asm
	mov.b32 	%f210, %r129;
	// begin inline asm
	cvt.f32.bf16 %r130, %rs66;
	// end inline asm
	mov.b32 	%f211, %r130;
	// begin inline asm
	cvt.f32.bf16 %r131, %rs67;
	// end inline asm
	mov.b32 	%f212, %r131;
	// begin inline asm
	cvt.f32.bf16 %r132, %rs68;
	// end inline asm
	mov.b32 	%f213, %r132;
	// begin inline asm
	cvt.f32.bf16 %r133, %rs69;
	// end inline asm
	mov.b32 	%f214, %r133;
	// begin inline asm
	cvt.f32.bf16 %r134, %rs70;
	// end inline asm
	mov.b32 	%f215, %r134;
	// begin inline asm
	cvt.f32.bf16 %r135, %rs71;
	// end inline asm
	mov.b32 	%f216, %r135;
	// begin inline asm
	cvt.f32.bf16 %r136, %rs72;
	// end inline asm
	mov.b32 	%f217, %r136;
	// begin inline asm
	cvt.f32.bf16 %r137, %rs73;
	// end inline asm
	mov.b32 	%f218, %r137;
	// begin inline asm
	cvt.f32.bf16 %r138, %rs74;
	// end inline asm
	mov.b32 	%f219, %r138;
	// begin inline asm
	cvt.f32.bf16 %r139, %rs75;
	// end inline asm
	mov.b32 	%f220, %r139;
	// begin inline asm
	cvt.f32.bf16 %r140, %rs76;
	// end inline asm
	mov.b32 	%f221, %r140;
	// begin inline asm
	cvt.f32.bf16 %r141, %rs77;
	// end inline asm
	mov.b32 	%f222, %r141;
	// begin inline asm
	cvt.f32.bf16 %r142, %rs78;
	// end inline asm
	mov.b32 	%f223, %r142;
	// begin inline asm
	cvt.f32.bf16 %r143, %rs79;
	// end inline asm
	mov.b32 	%f224, %r143;
	// begin inline asm
	cvt.f32.bf16 %r144, %rs80;
	// end inline asm
	mov.b32 	%f225, %r144;
	mul.rn.f32 	%f226, %f194, %f210;
	mul.rn.f32 	%f227, %f195, %f211;
	mul.rn.f32 	%f228, %f196, %f212;
	mul.rn.f32 	%f229, %f197, %f213;
	mul.rn.f32 	%f230, %f198, %f214;
	mul.rn.f32 	%f231, %f199, %f215;
	mul.rn.f32 	%f232, %f200, %f216;
	mul.rn.f32 	%f233, %f201, %f217;
	mul.rn.f32 	%f234, %f202, %f218;
	mul.rn.f32 	%f235, %f203, %f219;
	mul.rn.f32 	%f236, %f204, %f220;
	mul.rn.f32 	%f237, %f205, %f221;
	mul.rn.f32 	%f238, %f206, %f222;
	mul.rn.f32 	%f239, %f207, %f223;
	mul.rn.f32 	%f240, %f208, %f224;
	mul.rn.f32 	%f241, %f209, %f225;
	mov.b32 	%r145, %f226;
	// begin inline asm
	cvt.rn.bf16.f32 %rs81, %r145;
	// end inline asm
	mov.b32 	%r146, %f227;
	// begin inline asm
	cvt.rn.bf16.f32 %rs82, %r146;
	// end inline asm
	mov.b32 	%r147, %f228;
	// begin inline asm
	cvt.rn.bf16.f32 %rs83, %r147;
	// end inline asm
	mov.b32 	%r148, %f229;
	// begin inline asm
	cvt.rn.bf16.f32 %rs84, %r148;
	// end inline asm
	mov.b32 	%r149, %f230;
	// begin inline asm
	cvt.rn.bf16.f32 %rs85, %r149;
	// end inline asm
	mov.b32 	%r150, %f231;
	// begin inline asm
	cvt.rn.bf16.f32 %rs86, %r150;
	// end inline asm
	mov.b32 	%r151, %f232;
	// begin inline asm
	cvt.rn.bf16.f32 %rs87, %r151;
	// end inline asm
	mov.b32 	%r152, %f233;
	// begin inline asm
	cvt.rn.bf16.f32 %rs88, %r152;
	// end inline asm
	mov.b32 	%r153, %f234;
	// begin inline asm
	cvt.rn.bf16.f32 %rs89, %r153;
	// end inline asm
	mov.b32 	%r154, %f235;
	// begin inline asm
	cvt.rn.bf16.f32 %rs90, %r154;
	// end inline asm
	mov.b32 	%r155, %f236;
	// begin inline asm
	cvt.rn.bf16.f32 %rs91, %r155;
	// end inline asm
	mov.b32 	%r156, %f237;
	// begin inline asm
	cvt.rn.bf16.f32 %rs92, %r156;
	// end inline asm
	mov.b32 	%r157, %f238;
	// begin inline asm
	cvt.rn.bf16.f32 %rs93, %r157;
	// end inline asm
	mov.b32 	%r158, %f239;
	// begin inline asm
	cvt.rn.bf16.f32 %rs94, %r158;
	// end inline asm
	mov.b32 	%r159, %f240;
	// begin inline asm
	cvt.rn.bf16.f32 %rs95, %r159;
	// end inline asm
	mov.b32 	%r160, %f241;
	// begin inline asm
	cvt.rn.bf16.f32 %rs96, %r160;
	// end inline asm
	add.s64 	%rd47, %rd20, %rd36;
	add.s64 	%rd16, %rd47, %rd33;
	add.s64 	%rd17, %rd16, 1024;
	mov.b32 	%r161, {%rs81, %rs82};
	mov.b32 	%r162, {%rs83, %rs84};
	mov.b32 	%r163, {%rs85, %rs86};
	mov.b32 	%r164, {%rs87, %rs88};
	// begin inline asm
	st.global.v4.b32 [ %rd16 + 0 ], { %r161, %r162, %r163, %r164 };
	// end inline asm
	mov.b32 	%r165, {%rs89, %rs90};
	mov.b32 	%r166, {%rs91, %rs92};
	mov.b32 	%r167, {%rs93, %rs94};
	mov.b32 	%r168, {%rs95, %rs96};
	// begin inline asm
	st.global.v4.b32 [ %rd17 + 0 ], { %r165, %r166, %r167, %r168 };
	// end inline asm
	ret;

}
	// .globl	fusion_348
.visible .entry fusion_348(
	.param .u64 .ptr .align 16 fusion_348_param_0,
	.param .u64 .ptr .align 16 fusion_348_param_1,
	.param .u64 .ptr .align 128 fusion_348_param_2,
	.param .u64 .ptr .align 128 fusion_348_param_3,
	.param .u64 .ptr .align 128 fusion_348_param_4,
	.param .u64 .ptr .align 128 fusion_348_param_5,
	.param .u64 .ptr .align 128 fusion_348_param_6,
	.param .u64 .ptr .align 128 fusion_348_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<129>;
	.reg .b32 	%r<237>;
	.reg .f32 	%f<306>;
	.reg .b64 	%rd<55>;

	ld.param.u64 	%rd22, [fusion_348_param_0];
	ld.param.u64 	%rd23, [fusion_348_param_7];
	cvta.to.global.u64 	%rd24, %rd23;
	ld.param.u64 	%rd25, [fusion_348_param_1];
	ld.param.u64 	%rd26, [fusion_348_param_6];
	cvta.to.global.u64 	%rd27, %rd26;
	ld.param.u64 	%rd28, [fusion_348_param_2];
	ld.param.u64 	%rd29, [fusion_348_param_5];
	cvta.to.global.u64 	%rd30, %rd29;
	ld.param.u64 	%rd31, [fusion_348_param_3];
	ld.param.u64 	%rd32, [fusion_348_param_4];
	cvta.to.global.u64 	%rd33, %rd32;
	cvta.to.global.u64 	%rd34, %rd31;
	cvta.to.global.u64 	%rd35, %rd28;
	cvta.to.global.u64 	%rd36, %rd25;
	cvta.to.global.u64 	%rd17, %rd22;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd37, %r1, 53248;
	add.s64 	%rd38, %rd34, %rd37;
	mov.u32 	%r217, %tid.x;
	and.b32  	%r218, %r217, 31;
	shl.b32 	%r219, %r217, 3;
	and.b32  	%r220, %r219, 248;
	setp.lt.u32 	%p4, %r217, 32;
	selp.b32 	%r221, 0, 256, %p4;
	or.b32  	%r222, %r220, %r221;
	mul.wide.u32 	%rd39, %r222, 2;
	add.s64 	%rd40, %rd38, %rd39;
	add.s64 	%rd1, %rd40, 6144;
	add.s64 	%rd2, %rd40, 7168;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd41, %r1, 1024;
	shl.b64 	%rd42, %rd41, 1;
	add.s64 	%rd43, %rd35, %rd42;
	add.s64 	%rd3, %rd43, %rd39;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	add.s64 	%rd5, %rd40, 8192;
	add.s64 	%rd6, %rd40, 9216;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r50;
	mov.b32 	{%rs35, %rs36}, %r51;
	mov.b32 	{%rs37, %rs38}, %r52;
	mov.b32 	{%rs39, %rs40}, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r54;
	mov.b32 	{%rs43, %rs44}, %r55;
	mov.b32 	{%rs45, %rs46}, %r56;
	mov.b32 	{%rs47, %rs48}, %r57;
	// begin inline asm
	cvt.f32.bf16 %r58, %rs33;
	// end inline asm
	mov.b32 	%f33, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs34;
	// end inline asm
	mov.b32 	%f34, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs35;
	// end inline asm
	mov.b32 	%f35, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs36;
	// end inline asm
	mov.b32 	%f36, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs37;
	// end inline asm
	mov.b32 	%f37, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs38;
	// end inline asm
	mov.b32 	%f38, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs39;
	// end inline asm
	mov.b32 	%f39, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs40;
	// end inline asm
	mov.b32 	%f40, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs41;
	// end inline asm
	mov.b32 	%f41, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs42;
	// end inline asm
	mov.b32 	%f42, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs43;
	// end inline asm
	mov.b32 	%f43, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs44;
	// end inline asm
	mov.b32 	%f44, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs45;
	// end inline asm
	mov.b32 	%f45, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs46;
	// end inline asm
	mov.b32 	%f46, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs47;
	// end inline asm
	mov.b32 	%f47, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs48;
	// end inline asm
	mov.b32 	%f48, %r73;
	add.s64 	%rd44, %rd27, %rd42;
	add.s64 	%rd7, %rd44, %rd39;
	add.s64 	%rd8, %rd7, 1024;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	ld.global.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs49, %rs50}, %r74;
	mov.b32 	{%rs51, %rs52}, %r75;
	mov.b32 	{%rs53, %rs54}, %r76;
	mov.b32 	{%rs55, %rs56}, %r77;
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	ld.global.v4.b32 { %r78, %r79, %r80, %r81 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	{%rs57, %rs58}, %r78;
	mov.b32 	{%rs59, %rs60}, %r79;
	mov.b32 	{%rs61, %rs62}, %r80;
	mov.b32 	{%rs63, %rs64}, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs49;
	// end inline asm
	mov.b32 	%f49, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs50;
	// end inline asm
	mov.b32 	%f50, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs51;
	// end inline asm
	mov.b32 	%f51, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs52;
	// end inline asm
	mov.b32 	%f52, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs53;
	// end inline asm
	mov.b32 	%f53, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs54;
	// end inline asm
	mov.b32 	%f54, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs55;
	// end inline asm
	mov.b32 	%f55, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs56;
	// end inline asm
	mov.b32 	%f56, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs57;
	// end inline asm
	mov.b32 	%f57, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs58;
	// end inline asm
	mov.b32 	%f58, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs59;
	// end inline asm
	mov.b32 	%f59, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs60;
	// end inline asm
	mov.b32 	%f60, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs61;
	// end inline asm
	mov.b32 	%f61, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs62;
	// end inline asm
	mov.b32 	%f62, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs63;
	// end inline asm
	mov.b32 	%f63, %r96;
	// begin inline asm
	cvt.f32.bf16 %r97, %rs64;
	// end inline asm
	mov.b32 	%f64, %r97;
	add.s64 	%rd9, %rd40, 10240;
	add.s64 	%rd10, %rd40, 11264;
	// begin inline asm
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	ld.global.v4.b32 { %r98, %r99, %r100, %r101 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	{%rs65, %rs66}, %r98;
	mov.b32 	{%rs67, %rs68}, %r99;
	mov.b32 	{%rs69, %rs70}, %r100;
	mov.b32 	{%rs71, %rs72}, %r101;
	// begin inline asm
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	ld.global.v4.b32 { %r102, %r103, %r104, %r105 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	{%rs73, %rs74}, %r102;
	mov.b32 	{%rs75, %rs76}, %r103;
	mov.b32 	{%rs77, %rs78}, %r104;
	mov.b32 	{%rs79, %rs80}, %r105;
	// begin inline asm
	cvt.f32.bf16 %r106, %rs65;
	// end inline asm
	mov.b32 	%f65, %r106;
	// begin inline asm
	cvt.f32.bf16 %r107, %rs66;
	// end inline asm
	mov.b32 	%f66, %r107;
	// begin inline asm
	cvt.f32.bf16 %r108, %rs67;
	// end inline asm
	mov.b32 	%f67, %r108;
	// begin inline asm
	cvt.f32.bf16 %r109, %rs68;
	// end inline asm
	mov.b32 	%f68, %r109;
	// begin inline asm
	cvt.f32.bf16 %r110, %rs69;
	// end inline asm
	mov.b32 	%f69, %r110;
	// begin inline asm
	cvt.f32.bf16 %r111, %rs70;
	// end inline asm
	mov.b32 	%f70, %r111;
	// begin inline asm
	cvt.f32.bf16 %r112, %rs71;
	// end inline asm
	mov.b32 	%f71, %r112;
	// begin inline asm
	cvt.f32.bf16 %r113, %rs72;
	// end inline asm
	mov.b32 	%f72, %r113;
	// begin inline asm
	cvt.f32.bf16 %r114, %rs73;
	// end inline asm
	mov.b32 	%f73, %r114;
	// begin inline asm
	cvt.f32.bf16 %r115, %rs74;
	// end inline asm
	mov.b32 	%f74, %r115;
	// begin inline asm
	cvt.f32.bf16 %r116, %rs75;
	// end inline asm
	mov.b32 	%f75, %r116;
	// begin inline asm
	cvt.f32.bf16 %r117, %rs76;
	// end inline asm
	mov.b32 	%f76, %r117;
	// begin inline asm
	cvt.f32.bf16 %r118, %rs77;
	// end inline asm
	mov.b32 	%f77, %r118;
	// begin inline asm
	cvt.f32.bf16 %r119, %rs78;
	// end inline asm
	mov.b32 	%f78, %r119;
	// begin inline asm
	cvt.f32.bf16 %r120, %rs79;
	// end inline asm
	mov.b32 	%f79, %r120;
	// begin inline asm
	cvt.f32.bf16 %r121, %rs80;
	// end inline asm
	mov.b32 	%f80, %r121;
	add.s64 	%rd45, %rd30, %rd42;
	add.s64 	%rd11, %rd45, %rd39;
	add.s64 	%rd12, %rd11, 1024;
	// begin inline asm
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	mov.u32 %r125, 0x0;
	ld.global.v4.b32 { %r122, %r123, %r124, %r125 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	{%rs81, %rs82}, %r122;
	mov.b32 	{%rs83, %rs84}, %r123;
	mov.b32 	{%rs85, %rs86}, %r124;
	mov.b32 	{%rs87, %rs88}, %r125;
	// begin inline asm
	mov.u32 %r126, 0x0;
	mov.u32 %r127, 0x0;
	mov.u32 %r128, 0x0;
	mov.u32 %r129, 0x0;
	ld.global.v4.b32 { %r126, %r127, %r128, %r129 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	{%rs89, %rs90}, %r126;
	mov.b32 	{%rs91, %rs92}, %r127;
	mov.b32 	{%rs93, %rs94}, %r128;
	mov.b32 	{%rs95, %rs96}, %r129;
	// begin inline asm
	cvt.f32.bf16 %r130, %rs81;
	// end inline asm
	mov.b32 	%f81, %r130;
	// begin inline asm
	cvt.f32.bf16 %r131, %rs82;
	// end inline asm
	mov.b32 	%f82, %r131;
	// begin inline asm
	cvt.f32.bf16 %r132, %rs83;
	// end inline asm
	mov.b32 	%f83, %r132;
	// begin inline asm
	cvt.f32.bf16 %r133, %rs84;
	// end inline asm
	mov.b32 	%f84, %r133;
	// begin inline asm
	cvt.f32.bf16 %r134, %rs85;
	// end inline asm
	mov.b32 	%f85, %r134;
	// begin inline asm
	cvt.f32.bf16 %r135, %rs86;
	// end inline asm
	mov.b32 	%f86, %r135;
	// begin inline asm
	cvt.f32.bf16 %r136, %rs87;
	// end inline asm
	mov.b32 	%f87, %r136;
	// begin inline asm
	cvt.f32.bf16 %r137, %rs88;
	// end inline asm
	mov.b32 	%f88, %r137;
	// begin inline asm
	cvt.f32.bf16 %r138, %rs89;
	// end inline asm
	mov.b32 	%f89, %r138;
	// begin inline asm
	cvt.f32.bf16 %r139, %rs90;
	// end inline asm
	mov.b32 	%f90, %r139;
	// begin inline asm
	cvt.f32.bf16 %r140, %rs91;
	// end inline asm
	mov.b32 	%f91, %r140;
	// begin inline asm
	cvt.f32.bf16 %r141, %rs92;
	// end inline asm
	mov.b32 	%f92, %r141;
	// begin inline asm
	cvt.f32.bf16 %r142, %rs93;
	// end inline asm
	mov.b32 	%f93, %r142;
	// begin inline asm
	cvt.f32.bf16 %r143, %rs94;
	// end inline asm
	mov.b32 	%f94, %r143;
	// begin inline asm
	cvt.f32.bf16 %r144, %rs95;
	// end inline asm
	mov.b32 	%f95, %r144;
	// begin inline asm
	cvt.f32.bf16 %r145, %rs96;
	// end inline asm
	mov.b32 	%f96, %r145;
	shl.b64 	%rd46, %rd41, 2;
	add.s64 	%rd47, %rd33, %rd46;
	mul.wide.u32 	%rd48, %r222, 4;
	add.s64 	%rd13, %rd47, %rd48;
	add.s64 	%rd14, %rd13, 16;
	add.s64 	%rd15, %rd13, 2048;
	add.s64 	%rd16, %rd13, 2064;
	// begin inline asm
	mov.u32 %r146, 0x0;
	mov.u32 %r147, 0x0;
	mov.u32 %r148, 0x0;
	mov.u32 %r149, 0x0;
	ld.global.v4.b32 { %r146, %r147, %r148, %r149 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f97, %r146;
	mov.b32 	%f98, %r147;
	mov.b32 	%f99, %r148;
	mov.b32 	%f100, %r149;
	// begin inline asm
	mov.u32 %r150, 0x0;
	mov.u32 %r151, 0x0;
	mov.u32 %r152, 0x0;
	mov.u32 %r153, 0x0;
	ld.global.v4.b32 { %r150, %r151, %r152, %r153 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f101, %r150;
	mov.b32 	%f102, %r151;
	mov.b32 	%f103, %r152;
	mov.b32 	%f104, %r153;
	// begin inline asm
	mov.u32 %r154, 0x0;
	mov.u32 %r155, 0x0;
	mov.u32 %r156, 0x0;
	mov.u32 %r157, 0x0;
	ld.global.v4.b32 { %r154, %r155, %r156, %r157 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f105, %r154;
	mov.b32 	%f106, %r155;
	mov.b32 	%f107, %r156;
	mov.b32 	%f108, %r157;
	// begin inline asm
	mov.u32 %r158, 0x0;
	mov.u32 %r159, 0x0;
	mov.u32 %r160, 0x0;
	mov.u32 %r161, 0x0;
	ld.global.v4.b32 { %r158, %r159, %r160, %r161 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f109, %r158;
	mov.b32 	%f110, %r159;
	mov.b32 	%f111, %r160;
	mov.b32 	%f112, %r161;
	add.rn.f32 	%f113, %f81, %f97;
	add.rn.f32 	%f114, %f82, %f98;
	add.rn.f32 	%f115, %f83, %f99;
	add.rn.f32 	%f116, %f84, %f100;
	add.rn.f32 	%f117, %f85, %f101;
	add.rn.f32 	%f118, %f86, %f102;
	add.rn.f32 	%f119, %f87, %f103;
	add.rn.f32 	%f120, %f88, %f104;
	add.rn.f32 	%f121, %f89, %f105;
	add.rn.f32 	%f122, %f90, %f106;
	add.rn.f32 	%f123, %f91, %f107;
	add.rn.f32 	%f124, %f92, %f108;
	add.rn.f32 	%f125, %f93, %f109;
	add.rn.f32 	%f126, %f94, %f110;
	add.rn.f32 	%f127, %f95, %f111;
	add.rn.f32 	%f128, %f96, %f112;
	add.rn.f32 	%f129, %f65, %f113;
	add.rn.f32 	%f130, %f66, %f114;
	add.rn.f32 	%f131, %f67, %f115;
	add.rn.f32 	%f132, %f68, %f116;
	add.rn.f32 	%f133, %f69, %f117;
	add.rn.f32 	%f134, %f70, %f118;
	add.rn.f32 	%f135, %f71, %f119;
	add.rn.f32 	%f136, %f72, %f120;
	add.rn.f32 	%f137, %f73, %f121;
	add.rn.f32 	%f138, %f74, %f122;
	add.rn.f32 	%f139, %f75, %f123;
	add.rn.f32 	%f140, %f76, %f124;
	add.rn.f32 	%f141, %f77, %f125;
	add.rn.f32 	%f142, %f78, %f126;
	add.rn.f32 	%f143, %f79, %f127;
	add.rn.f32 	%f144, %f80, %f128;
	add.rn.f32 	%f145, %f49, %f129;
	add.rn.f32 	%f146, %f50, %f130;
	add.rn.f32 	%f147, %f51, %f131;
	add.rn.f32 	%f148, %f52, %f132;
	add.rn.f32 	%f149, %f53, %f133;
	add.rn.f32 	%f150, %f54, %f134;
	add.rn.f32 	%f151, %f55, %f135;
	add.rn.f32 	%f152, %f56, %f136;
	add.rn.f32 	%f153, %f57, %f137;
	add.rn.f32 	%f154, %f58, %f138;
	add.rn.f32 	%f155, %f59, %f139;
	add.rn.f32 	%f156, %f60, %f140;
	add.rn.f32 	%f157, %f61, %f141;
	add.rn.f32 	%f158, %f62, %f142;
	add.rn.f32 	%f159, %f63, %f143;
	add.rn.f32 	%f160, %f64, %f144;
	add.rn.f32 	%f161, %f33, %f145;
	add.rn.f32 	%f162, %f34, %f146;
	add.rn.f32 	%f163, %f35, %f147;
	add.rn.f32 	%f164, %f36, %f148;
	add.rn.f32 	%f165, %f37, %f149;
	add.rn.f32 	%f166, %f38, %f150;
	add.rn.f32 	%f167, %f39, %f151;
	add.rn.f32 	%f168, %f40, %f152;
	add.rn.f32 	%f169, %f41, %f153;
	add.rn.f32 	%f170, %f42, %f154;
	add.rn.f32 	%f171, %f43, %f155;
	add.rn.f32 	%f172, %f44, %f156;
	add.rn.f32 	%f173, %f45, %f157;
	add.rn.f32 	%f174, %f46, %f158;
	add.rn.f32 	%f175, %f47, %f159;
	add.rn.f32 	%f176, %f48, %f160;
	add.rn.f32 	%f177, %f17, %f161;
	add.rn.f32 	%f178, %f18, %f162;
	add.rn.f32 	%f179, %f19, %f163;
	add.rn.f32 	%f180, %f20, %f164;
	add.rn.f32 	%f181, %f21, %f165;
	add.rn.f32 	%f182, %f22, %f166;
	add.rn.f32 	%f183, %f23, %f167;
	add.rn.f32 	%f184, %f24, %f168;
	add.rn.f32 	%f185, %f25, %f169;
	add.rn.f32 	%f186, %f26, %f170;
	add.rn.f32 	%f187, %f27, %f171;
	add.rn.f32 	%f188, %f28, %f172;
	add.rn.f32 	%f189, %f29, %f173;
	add.rn.f32 	%f190, %f30, %f174;
	add.rn.f32 	%f191, %f31, %f175;
	add.rn.f32 	%f192, %f32, %f176;
	add.rn.f32 	%f193, %f1, %f177;
	add.rn.f32 	%f194, %f2, %f178;
	add.rn.f32 	%f195, %f3, %f179;
	add.rn.f32 	%f196, %f4, %f180;
	add.rn.f32 	%f197, %f5, %f181;
	add.rn.f32 	%f198, %f6, %f182;
	add.rn.f32 	%f199, %f7, %f183;
	add.rn.f32 	%f200, %f8, %f184;
	add.rn.f32 	%f201, %f9, %f185;
	add.rn.f32 	%f202, %f10, %f186;
	add.rn.f32 	%f203, %f11, %f187;
	add.rn.f32 	%f204, %f12, %f188;
	add.rn.f32 	%f205, %f13, %f189;
	add.rn.f32 	%f206, %f14, %f190;
	add.rn.f32 	%f207, %f15, %f191;
	add.rn.f32 	%f208, %f16, %f192;
	mul.rn.f32 	%f209, %f193, %f193;
	mul.rn.f32 	%f210, %f194, %f194;
	mul.rn.f32 	%f211, %f195, %f195;
	mul.rn.f32 	%f212, %f196, %f196;
	mul.rn.f32 	%f213, %f197, %f197;
	mul.rn.f32 	%f214, %f198, %f198;
	mul.rn.f32 	%f215, %f199, %f199;
	mul.rn.f32 	%f216, %f200, %f200;
	mul.rn.f32 	%f217, %f201, %f201;
	mul.rn.f32 	%f218, %f202, %f202;
	mul.rn.f32 	%f219, %f203, %f203;
	mul.rn.f32 	%f220, %f204, %f204;
	mul.rn.f32 	%f221, %f205, %f205;
	mul.rn.f32 	%f222, %f206, %f206;
	mul.rn.f32 	%f223, %f207, %f207;
	mul.rn.f32 	%f224, %f208, %f208;
	add.rn.f32 	%f225, %f209, %f210;
	add.rn.f32 	%f226, %f211, %f225;
	add.rn.f32 	%f227, %f212, %f226;
	add.rn.f32 	%f228, %f213, %f227;
	add.rn.f32 	%f229, %f214, %f228;
	add.rn.f32 	%f230, %f215, %f229;
	add.rn.f32 	%f231, %f216, %f230;
	add.rn.f32 	%f232, %f217, %f231;
	add.rn.f32 	%f233, %f218, %f232;
	add.rn.f32 	%f234, %f219, %f233;
	add.rn.f32 	%f235, %f220, %f234;
	add.rn.f32 	%f236, %f221, %f235;
	add.rn.f32 	%f237, %f222, %f236;
	add.rn.f32 	%f238, %f223, %f237;
	add.rn.f32 	%f239, %f224, %f238;
	mov.b32 	%r223, %f239;
	shfl.sync.bfly.b32	%r224, %r223, 16, 31, -1;
	mov.b32 	%f240, %r224;
	add.rn.f32 	%f241, %f239, %f240;
	mov.b32 	%r225, %f241;
	shfl.sync.bfly.b32	%r226, %r225, 8, 31, -1;
	mov.b32 	%f242, %r226;
	add.rn.f32 	%f243, %f241, %f242;
	mov.b32 	%r227, %f243;
	shfl.sync.bfly.b32	%r228, %r227, 4, 31, -1;
	mov.b32 	%f244, %r228;
	add.rn.f32 	%f245, %f243, %f244;
	mov.b32 	%r229, %f245;
	shfl.sync.bfly.b32	%r230, %r229, 2, 31, -1;
	mov.b32 	%f246, %r230;
	add.rn.f32 	%f247, %f245, %f246;
	mov.b32 	%r231, %f247;
	shfl.sync.bfly.b32	%r232, %r231, 1, 31, -1;
	mov.b32 	%f248, %r232;
	add.rn.f32 	%f249, %f247, %f248;
	setp.eq.s32 	%p1, %r218, 0;
	shr.u32 	%r233, %r217, 3;
	and.b32  	%r234, %r233, 4;
	cvt.u64.u32 	%rd49, %r234;
	mov.u64 	%rd50, global_smem;
	add.s64 	%rd51, %rd50, %rd49;
	mov.b32 	%r163, %f249;
	cvt.u32.u64 	%r162, %rd51;
	// begin inline asm
	@%p1 st.shared.b32 [ %r162 + 0 ], %r163;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r217, 2;
	shl.b32 	%r235, %r217, 2;
	cvt.u64.u32 	%rd52, %r235;
	add.s64 	%rd53, %rd50, %rd52;
	cvt.u32.u64 	%r165, %rd53;
	// begin inline asm
	@%p2 ld.shared.b32 %r164, [ %r165 + 0 ];
	// end inline asm
	mov.b32 	%f250, %r164;
	shfl.sync.bfly.b32	%r236, %r164, 1, 31, -1;
	mov.b32 	%f251, %r236;
	add.rn.f32 	%f252, %f250, %f251;
	setp.eq.s32 	%p3, %r217, 0;
	mov.b32 	%r167, %f252;
	// begin inline asm
	@%p3 st.shared.b32 [ %r165 + 0 ], %r167;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f253, [global_smem];
	mul.rn.f32 	%f254, %f253, 0f3A800000;
	// begin inline asm
	mov.u32 %r168, 0x0;
	ld.global.b32 { %r168 }, [ %rd17 + 0 ];
	// end inline asm
	mov.b32 	%f255, %r168;
	add.rn.f32 	%f256, %f254, %f255;
	rsqrt.approx.f32 	%f257, %f256;
	mul.rn.f32 	%f258, %f193, %f257;
	mul.rn.f32 	%f259, %f194, %f257;
	mul.rn.f32 	%f260, %f195, %f257;
	mul.rn.f32 	%f261, %f196, %f257;
	mul.rn.f32 	%f262, %f197, %f257;
	mul.rn.f32 	%f263, %f198, %f257;
	mul.rn.f32 	%f264, %f199, %f257;
	mul.rn.f32 	%f265, %f200, %f257;
	mul.rn.f32 	%f266, %f201, %f257;
	mul.rn.f32 	%f267, %f202, %f257;
	mul.rn.f32 	%f268, %f203, %f257;
	mul.rn.f32 	%f269, %f204, %f257;
	mul.rn.f32 	%f270, %f205, %f257;
	mul.rn.f32 	%f271, %f206, %f257;
	mul.rn.f32 	%f272, %f207, %f257;
	mul.rn.f32 	%f273, %f208, %f257;
	add.s64 	%rd18, %rd36, %rd39;
	add.s64 	%rd19, %rd18, 1024;
	// begin inline asm
	mov.u32 %r169, 0x0;
	mov.u32 %r170, 0x0;
	mov.u32 %r171, 0x0;
	mov.u32 %r172, 0x0;
	ld.global.v4.b32 { %r169, %r170, %r171, %r172 }, [ %rd18 + 0 ];
	// end inline asm
	mov.b32 	{%rs97, %rs98}, %r169;
	mov.b32 	{%rs99, %rs100}, %r170;
	mov.b32 	{%rs101, %rs102}, %r171;
	mov.b32 	{%rs103, %rs104}, %r172;
	// begin inline asm
	mov.u32 %r173, 0x0;
	mov.u32 %r174, 0x0;
	mov.u32 %r175, 0x0;
	mov.u32 %r176, 0x0;
	ld.global.v4.b32 { %r173, %r174, %r175, %r176 }, [ %rd19 + 0 ];
	// end inline asm
	mov.b32 	{%rs105, %rs106}, %r173;
	mov.b32 	{%rs107, %rs108}, %r174;
	mov.b32 	{%rs109, %rs110}, %r175;
	mov.b32 	{%rs111, %rs112}, %r176;
	// begin inline asm
	cvt.f32.bf16 %r177, %rs97;
	// end inline asm
	mov.b32 	%f274, %r177;
	// begin inline asm
	cvt.f32.bf16 %r178, %rs98;
	// end inline asm
	mov.b32 	%f275, %r178;
	// begin inline asm
	cvt.f32.bf16 %r179, %rs99;
	// end inline asm
	mov.b32 	%f276, %r179;
	// begin inline asm
	cvt.f32.bf16 %r180, %rs100;
	// end inline asm
	mov.b32 	%f277, %r180;
	// begin inline asm
	cvt.f32.bf16 %r181, %rs101;
	// end inline asm
	mov.b32 	%f278, %r181;
	// begin inline asm
	cvt.f32.bf16 %r182, %rs102;
	// end inline asm
	mov.b32 	%f279, %r182;
	// begin inline asm
	cvt.f32.bf16 %r183, %rs103;
	// end inline asm
	mov.b32 	%f280, %r183;
	// begin inline asm
	cvt.f32.bf16 %r184, %rs104;
	// end inline asm
	mov.b32 	%f281, %r184;
	// begin inline asm
	cvt.f32.bf16 %r185, %rs105;
	// end inline asm
	mov.b32 	%f282, %r185;
	// begin inline asm
	cvt.f32.bf16 %r186, %rs106;
	// end inline asm
	mov.b32 	%f283, %r186;
	// begin inline asm
	cvt.f32.bf16 %r187, %rs107;
	// end inline asm
	mov.b32 	%f284, %r187;
	// begin inline asm
	cvt.f32.bf16 %r188, %rs108;
	// end inline asm
	mov.b32 	%f285, %r188;
	// begin inline asm
	cvt.f32.bf16 %r189, %rs109;
	// end inline asm
	mov.b32 	%f286, %r189;
	// begin inline asm
	cvt.f32.bf16 %r190, %rs110;
	// end inline asm
	mov.b32 	%f287, %r190;
	// begin inline asm
	cvt.f32.bf16 %r191, %rs111;
	// end inline asm
	mov.b32 	%f288, %r191;
	// begin inline asm
	cvt.f32.bf16 %r192, %rs112;
	// end inline asm
	mov.b32 	%f289, %r192;
	mul.rn.f32 	%f290, %f258, %f274;
	mul.rn.f32 	%f291, %f259, %f275;
	mul.rn.f32 	%f292, %f260, %f276;
	mul.rn.f32 	%f293, %f261, %f277;
	mul.rn.f32 	%f294, %f262, %f278;
	mul.rn.f32 	%f295, %f263, %f279;
	mul.rn.f32 	%f296, %f264, %f280;
	mul.rn.f32 	%f297, %f265, %f281;
	mul.rn.f32 	%f298, %f266, %f282;
	mul.rn.f32 	%f299, %f267, %f283;
	mul.rn.f32 	%f300, %f268, %f284;
	mul.rn.f32 	%f301, %f269, %f285;
	mul.rn.f32 	%f302, %f270, %f286;
	mul.rn.f32 	%f303, %f271, %f287;
	mul.rn.f32 	%f304, %f272, %f288;
	mul.rn.f32 	%f305, %f273, %f289;
	mov.b32 	%r193, %f290;
	// begin inline asm
	cvt.rn.bf16.f32 %rs113, %r193;
	// end inline asm
	mov.b32 	%r194, %f291;
	// begin inline asm
	cvt.rn.bf16.f32 %rs114, %r194;
	// end inline asm
	mov.b32 	%r195, %f292;
	// begin inline asm
	cvt.rn.bf16.f32 %rs115, %r195;
	// end inline asm
	mov.b32 	%r196, %f293;
	// begin inline asm
	cvt.rn.bf16.f32 %rs116, %r196;
	// end inline asm
	mov.b32 	%r197, %f294;
	// begin inline asm
	cvt.rn.bf16.f32 %rs117, %r197;
	// end inline asm
	mov.b32 	%r198, %f295;
	// begin inline asm
	cvt.rn.bf16.f32 %rs118, %r198;
	// end inline asm
	mov.b32 	%r199, %f296;
	// begin inline asm
	cvt.rn.bf16.f32 %rs119, %r199;
	// end inline asm
	mov.b32 	%r200, %f297;
	// begin inline asm
	cvt.rn.bf16.f32 %rs120, %r200;
	// end inline asm
	mov.b32 	%r201, %f298;
	// begin inline asm
	cvt.rn.bf16.f32 %rs121, %r201;
	// end inline asm
	mov.b32 	%r202, %f299;
	// begin inline asm
	cvt.rn.bf16.f32 %rs122, %r202;
	// end inline asm
	mov.b32 	%r203, %f300;
	// begin inline asm
	cvt.rn.bf16.f32 %rs123, %r203;
	// end inline asm
	mov.b32 	%r204, %f301;
	// begin inline asm
	cvt.rn.bf16.f32 %rs124, %r204;
	// end inline asm
	mov.b32 	%r205, %f302;
	// begin inline asm
	cvt.rn.bf16.f32 %rs125, %r205;
	// end inline asm
	mov.b32 	%r206, %f303;
	// begin inline asm
	cvt.rn.bf16.f32 %rs126, %r206;
	// end inline asm
	mov.b32 	%r207, %f304;
	// begin inline asm
	cvt.rn.bf16.f32 %rs127, %r207;
	// end inline asm
	mov.b32 	%r208, %f305;
	// begin inline asm
	cvt.rn.bf16.f32 %rs128, %r208;
	// end inline asm
	add.s64 	%rd54, %rd24, %rd42;
	add.s64 	%rd20, %rd54, %rd39;
	add.s64 	%rd21, %rd20, 1024;
	mov.b32 	%r209, {%rs113, %rs114};
	mov.b32 	%r210, {%rs115, %rs116};
	mov.b32 	%r211, {%rs117, %rs118};
	mov.b32 	%r212, {%rs119, %rs120};
	// begin inline asm
	st.global.v4.b32 [ %rd20 + 0 ], { %r209, %r210, %r211, %r212 };
	// end inline asm
	mov.b32 	%r213, {%rs121, %rs122};
	mov.b32 	%r214, {%rs123, %rs124};
	mov.b32 	%r215, {%rs125, %rs126};
	mov.b32 	%r216, {%rs127, %rs128};
	// begin inline asm
	st.global.v4.b32 [ %rd21 + 0 ], { %r213, %r214, %r215, %r216 };
	// end inline asm
	ret;

}
	// .globl	loop_add_fusion_5
.visible .entry loop_add_fusion_5(
	.param .u64 .ptr .align 128 loop_add_fusion_5_param_0,
	.param .u64 .ptr .align 128 loop_add_fusion_5_param_1,
	.param .u64 .ptr .align 128 loop_add_fusion_5_param_2,
	.param .u64 .ptr .align 128 loop_add_fusion_5_param_3,
	.param .u64 .ptr .align 128 loop_add_fusion_5_param_4,
	.param .u64 .ptr .align 128 loop_add_fusion_5_param_5
)
.reqntid 128, 1, 1
{
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<9>;
	.reg .f32 	%f<18>;
	.reg .b64 	%rd<25>;

	ld.param.u64 	%rd1, [loop_add_fusion_5_param_0];
	ld.param.u64 	%rd2, [loop_add_fusion_5_param_5];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.param.u64 	%rd4, [loop_add_fusion_5_param_1];
	ld.param.u64 	%rd5, [loop_add_fusion_5_param_4];
	cvta.to.global.u64 	%rd6, %rd5;
	ld.param.u64 	%rd7, [loop_add_fusion_5_param_2];
	ld.param.u64 	%rd8, [loop_add_fusion_5_param_3];
	cvta.to.global.u64 	%rd9, %rd8;
	cvta.to.global.u64 	%rd10, %rd7;
	cvta.to.global.u64 	%rd11, %rd4;
	cvta.to.global.u64 	%rd12, %rd1;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shr.u32 	%r3, %r2, 3;
	shl.b32 	%r4, %r2, 7;
	and.b32  	%r5, %r4, 896;
	or.b32  	%r6, %r5, %r1;
	or.b32  	%r7, %r4, %r1;
	mul.wide.u32 	%rd13, %r7, 2;
	add.s64 	%rd14, %rd6, %rd13;
	ld.global.nc.u16 	%rs1, [%rd14];
	cvt.f32.bf16 	%f1, %rs1;
	mul.wide.u32 	%rd15, %r7, 4;
	add.s64 	%rd16, %rd9, %rd15;
	ld.global.f32 	%f2, [%rd16];
	add.s64 	%rd17, %rd3, %rd13;
	ld.global.nc.u16 	%rs2, [%rd17];
	mul.lo.s32 	%r8, %r3, 26624;
	cvt.u64.u32 	%rd18, %r6;
	cvt.u64.u32 	%rd19, %r8;
	add.s64 	%rd20, %rd19, %rd18;
	shl.b64 	%rd21, %rd20, 1;
	add.s64 	%rd22, %rd12, %rd21;
	ld.global.nc.u16 	%rs3, [%rd22+10240];
	cvt.f32.bf16 	%f3, %rs3;
	add.rn.f32 	%f4, %f2, %f1;
	cvt.f32.bf16 	%f5, %rs2;
	add.rn.f32 	%f6, %f4, %f3;
	add.s64 	%rd23, %rd10, %rd13;
	ld.global.nc.u16 	%rs4, [%rd23];
	ld.global.nc.u16 	%rs5, [%rd22+8192];
	cvt.f32.bf16 	%f7, %rs5;
	add.rn.f32 	%f8, %f6, %f5;
	cvt.f32.bf16 	%f9, %rs4;
	add.rn.f32 	%f10, %f8, %f7;
	add.s64 	%rd24, %rd11, %rd13;
	ld.global.nc.u16 	%rs6, [%rd24];
	ld.global.nc.u16 	%rs7, [%rd22+6144];
	cvt.f32.bf16 	%f11, %rs7;
	add.rn.f32 	%f12, %f10, %f9;
	cvt.f32.bf16 	%f13, %rs6;
	add.rn.f32 	%f14, %f12, %f11;
	ld.global.nc.u16 	%rs8, [%rd22+4096];
	cvt.f32.bf16 	%f15, %rs8;
	add.rn.f32 	%f16, %f14, %f13;
	add.rn.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd16], %f17;
	ret;

}
	// .globl	fusion_350
.visible .entry fusion_350(
	.param .u64 .ptr .align 16 fusion_350_param_0,
	.param .u64 .ptr .align 16 fusion_350_param_1,
	.param .u64 .ptr .align 128 fusion_350_param_2,
	.param .u64 .ptr .align 128 fusion_350_param_3,
	.param .u64 .ptr .align 128 fusion_350_param_4,
	.param .u64 .ptr .align 128 fusion_350_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<65>;
	.reg .b32 	%r<141>;
	.reg .f32 	%f<178>;
	.reg .b64 	%rd<41>;

	ld.param.u64 	%rd14, [fusion_350_param_0];
	ld.param.u64 	%rd15, [fusion_350_param_5];
	cvta.to.global.u64 	%rd16, %rd15;
	ld.param.u64 	%rd17, [fusion_350_param_1];
	ld.param.u64 	%rd18, [fusion_350_param_4];
	cvta.to.global.u64 	%rd19, %rd18;
	ld.param.u64 	%rd20, [fusion_350_param_2];
	ld.param.u64 	%rd21, [fusion_350_param_3];
	cvta.to.global.u64 	%rd22, %rd21;
	cvta.to.global.u64 	%rd23, %rd20;
	cvta.to.global.u64 	%rd24, %rd17;
	cvta.to.global.u64 	%rd9, %rd14;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd25, %r1, 53248;
	add.s64 	%rd26, %rd19, %rd25;
	mov.u32 	%r121, %tid.x;
	and.b32  	%r122, %r121, 31;
	shl.b32 	%r123, %r121, 3;
	and.b32  	%r124, %r123, 248;
	setp.lt.u32 	%p4, %r121, 32;
	selp.b32 	%r125, 0, 256, %p4;
	or.b32  	%r126, %r124, %r125;
	mul.wide.u32 	%rd27, %r126, 2;
	add.s64 	%rd28, %rd26, %rd27;
	add.s64 	%rd1, %rd28, 2048;
	add.s64 	%rd2, %rd28, 3072;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd29, %r1, 1024;
	shl.b64 	%rd30, %rd29, 1;
	add.s64 	%rd31, %rd22, %rd30;
	add.s64 	%rd3, %rd31, %rd27;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	shl.b64 	%rd32, %rd29, 2;
	add.s64 	%rd33, %rd23, %rd32;
	mul.wide.u32 	%rd34, %r126, 4;
	add.s64 	%rd5, %rd33, %rd34;
	add.s64 	%rd6, %rd5, 16;
	add.s64 	%rd7, %rd5, 2048;
	add.s64 	%rd8, %rd5, 2064;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r50;
	mov.b32 	%f34, %r51;
	mov.b32 	%f35, %r52;
	mov.b32 	%f36, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f37, %r54;
	mov.b32 	%f38, %r55;
	mov.b32 	%f39, %r56;
	mov.b32 	%f40, %r57;
	// begin inline asm
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	ld.global.v4.b32 { %r58, %r59, %r60, %r61 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r58;
	mov.b32 	%f42, %r59;
	mov.b32 	%f43, %r60;
	mov.b32 	%f44, %r61;
	// begin inline asm
	mov.u32 %r62, 0x0;
	mov.u32 %r63, 0x0;
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	ld.global.v4.b32 { %r62, %r63, %r64, %r65 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f45, %r62;
	mov.b32 	%f46, %r63;
	mov.b32 	%f47, %r64;
	mov.b32 	%f48, %r65;
	add.rn.f32 	%f49, %f17, %f33;
	add.rn.f32 	%f50, %f18, %f34;
	add.rn.f32 	%f51, %f19, %f35;
	add.rn.f32 	%f52, %f20, %f36;
	add.rn.f32 	%f53, %f21, %f37;
	add.rn.f32 	%f54, %f22, %f38;
	add.rn.f32 	%f55, %f23, %f39;
	add.rn.f32 	%f56, %f24, %f40;
	add.rn.f32 	%f57, %f25, %f41;
	add.rn.f32 	%f58, %f26, %f42;
	add.rn.f32 	%f59, %f27, %f43;
	add.rn.f32 	%f60, %f28, %f44;
	add.rn.f32 	%f61, %f29, %f45;
	add.rn.f32 	%f62, %f30, %f46;
	add.rn.f32 	%f63, %f31, %f47;
	add.rn.f32 	%f64, %f32, %f48;
	add.rn.f32 	%f65, %f1, %f49;
	add.rn.f32 	%f66, %f2, %f50;
	add.rn.f32 	%f67, %f3, %f51;
	add.rn.f32 	%f68, %f4, %f52;
	add.rn.f32 	%f69, %f5, %f53;
	add.rn.f32 	%f70, %f6, %f54;
	add.rn.f32 	%f71, %f7, %f55;
	add.rn.f32 	%f72, %f8, %f56;
	add.rn.f32 	%f73, %f9, %f57;
	add.rn.f32 	%f74, %f10, %f58;
	add.rn.f32 	%f75, %f11, %f59;
	add.rn.f32 	%f76, %f12, %f60;
	add.rn.f32 	%f77, %f13, %f61;
	add.rn.f32 	%f78, %f14, %f62;
	add.rn.f32 	%f79, %f15, %f63;
	add.rn.f32 	%f80, %f16, %f64;
	mul.rn.f32 	%f81, %f65, %f65;
	mul.rn.f32 	%f82, %f66, %f66;
	mul.rn.f32 	%f83, %f67, %f67;
	mul.rn.f32 	%f84, %f68, %f68;
	mul.rn.f32 	%f85, %f69, %f69;
	mul.rn.f32 	%f86, %f70, %f70;
	mul.rn.f32 	%f87, %f71, %f71;
	mul.rn.f32 	%f88, %f72, %f72;
	mul.rn.f32 	%f89, %f73, %f73;
	mul.rn.f32 	%f90, %f74, %f74;
	mul.rn.f32 	%f91, %f75, %f75;
	mul.rn.f32 	%f92, %f76, %f76;
	mul.rn.f32 	%f93, %f77, %f77;
	mul.rn.f32 	%f94, %f78, %f78;
	mul.rn.f32 	%f95, %f79, %f79;
	mul.rn.f32 	%f96, %f80, %f80;
	add.rn.f32 	%f97, %f81, %f82;
	add.rn.f32 	%f98, %f83, %f97;
	add.rn.f32 	%f99, %f84, %f98;
	add.rn.f32 	%f100, %f85, %f99;
	add.rn.f32 	%f101, %f86, %f100;
	add.rn.f32 	%f102, %f87, %f101;
	add.rn.f32 	%f103, %f88, %f102;
	add.rn.f32 	%f104, %f89, %f103;
	add.rn.f32 	%f105, %f90, %f104;
	add.rn.f32 	%f106, %f91, %f105;
	add.rn.f32 	%f107, %f92, %f106;
	add.rn.f32 	%f108, %f93, %f107;
	add.rn.f32 	%f109, %f94, %f108;
	add.rn.f32 	%f110, %f95, %f109;
	add.rn.f32 	%f111, %f96, %f110;
	mov.b32 	%r127, %f111;
	shfl.sync.bfly.b32	%r128, %r127, 16, 31, -1;
	mov.b32 	%f112, %r128;
	add.rn.f32 	%f113, %f111, %f112;
	mov.b32 	%r129, %f113;
	shfl.sync.bfly.b32	%r130, %r129, 8, 31, -1;
	mov.b32 	%f114, %r130;
	add.rn.f32 	%f115, %f113, %f114;
	mov.b32 	%r131, %f115;
	shfl.sync.bfly.b32	%r132, %r131, 4, 31, -1;
	mov.b32 	%f116, %r132;
	add.rn.f32 	%f117, %f115, %f116;
	mov.b32 	%r133, %f117;
	shfl.sync.bfly.b32	%r134, %r133, 2, 31, -1;
	mov.b32 	%f118, %r134;
	add.rn.f32 	%f119, %f117, %f118;
	mov.b32 	%r135, %f119;
	shfl.sync.bfly.b32	%r136, %r135, 1, 31, -1;
	mov.b32 	%f120, %r136;
	add.rn.f32 	%f121, %f119, %f120;
	setp.eq.s32 	%p1, %r122, 0;
	shr.u32 	%r137, %r121, 3;
	and.b32  	%r138, %r137, 4;
	cvt.u64.u32 	%rd35, %r138;
	mov.u64 	%rd36, global_smem;
	add.s64 	%rd37, %rd36, %rd35;
	mov.b32 	%r67, %f121;
	cvt.u32.u64 	%r66, %rd37;
	// begin inline asm
	@%p1 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r121, 2;
	shl.b32 	%r139, %r121, 2;
	cvt.u64.u32 	%rd38, %r139;
	add.s64 	%rd39, %rd36, %rd38;
	cvt.u32.u64 	%r69, %rd39;
	// begin inline asm
	@%p2 ld.shared.b32 %r68, [ %r69 + 0 ];
	// end inline asm
	mov.b32 	%f122, %r68;
	shfl.sync.bfly.b32	%r140, %r68, 1, 31, -1;
	mov.b32 	%f123, %r140;
	add.rn.f32 	%f124, %f122, %f123;
	setp.eq.s32 	%p3, %r121, 0;
	mov.b32 	%r71, %f124;
	// begin inline asm
	@%p3 st.shared.b32 [ %r69 + 0 ], %r71;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f125, [global_smem];
	mul.rn.f32 	%f126, %f125, 0f3A800000;
	// begin inline asm
	mov.u32 %r72, 0x0;
	ld.global.b32 { %r72 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f127, %r72;
	add.rn.f32 	%f128, %f126, %f127;
	rsqrt.approx.f32 	%f129, %f128;
	mul.rn.f32 	%f130, %f65, %f129;
	mul.rn.f32 	%f131, %f66, %f129;
	mul.rn.f32 	%f132, %f67, %f129;
	mul.rn.f32 	%f133, %f68, %f129;
	mul.rn.f32 	%f134, %f69, %f129;
	mul.rn.f32 	%f135, %f70, %f129;
	mul.rn.f32 	%f136, %f71, %f129;
	mul.rn.f32 	%f137, %f72, %f129;
	mul.rn.f32 	%f138, %f73, %f129;
	mul.rn.f32 	%f139, %f74, %f129;
	mul.rn.f32 	%f140, %f75, %f129;
	mul.rn.f32 	%f141, %f76, %f129;
	mul.rn.f32 	%f142, %f77, %f129;
	mul.rn.f32 	%f143, %f78, %f129;
	mul.rn.f32 	%f144, %f79, %f129;
	mul.rn.f32 	%f145, %f80, %f129;
	add.s64 	%rd10, %rd24, %rd27;
	add.s64 	%rd11, %rd10, 1024;
	// begin inline asm
	mov.u32 %r73, 0x0;
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	ld.global.v4.b32 { %r73, %r74, %r75, %r76 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r73;
	mov.b32 	{%rs35, %rs36}, %r74;
	mov.b32 	{%rs37, %rs38}, %r75;
	mov.b32 	{%rs39, %rs40}, %r76;
	// begin inline asm
	mov.u32 %r77, 0x0;
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	ld.global.v4.b32 { %r77, %r78, %r79, %r80 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r77;
	mov.b32 	{%rs43, %rs44}, %r78;
	mov.b32 	{%rs45, %rs46}, %r79;
	mov.b32 	{%rs47, %rs48}, %r80;
	// begin inline asm
	cvt.f32.bf16 %r81, %rs33;
	// end inline asm
	mov.b32 	%f146, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs34;
	// end inline asm
	mov.b32 	%f147, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs35;
	// end inline asm
	mov.b32 	%f148, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs36;
	// end inline asm
	mov.b32 	%f149, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs37;
	// end inline asm
	mov.b32 	%f150, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs38;
	// end inline asm
	mov.b32 	%f151, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs39;
	// end inline asm
	mov.b32 	%f152, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs40;
	// end inline asm
	mov.b32 	%f153, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs41;
	// end inline asm
	mov.b32 	%f154, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs42;
	// end inline asm
	mov.b32 	%f155, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs43;
	// end inline asm
	mov.b32 	%f156, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs44;
	// end inline asm
	mov.b32 	%f157, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs45;
	// end inline asm
	mov.b32 	%f158, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs46;
	// end inline asm
	mov.b32 	%f159, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs47;
	// end inline asm
	mov.b32 	%f160, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs48;
	// end inline asm
	mov.b32 	%f161, %r96;
	mul.rn.f32 	%f162, %f130, %f146;
	mul.rn.f32 	%f163, %f131, %f147;
	mul.rn.f32 	%f164, %f132, %f148;
	mul.rn.f32 	%f165, %f133, %f149;
	mul.rn.f32 	%f166, %f134, %f150;
	mul.rn.f32 	%f167, %f135, %f151;
	mul.rn.f32 	%f168, %f136, %f152;
	mul.rn.f32 	%f169, %f137, %f153;
	mul.rn.f32 	%f170, %f138, %f154;
	mul.rn.f32 	%f171, %f139, %f155;
	mul.rn.f32 	%f172, %f140, %f156;
	mul.rn.f32 	%f173, %f141, %f157;
	mul.rn.f32 	%f174, %f142, %f158;
	mul.rn.f32 	%f175, %f143, %f159;
	mul.rn.f32 	%f176, %f144, %f160;
	mul.rn.f32 	%f177, %f145, %f161;
	mov.b32 	%r97, %f162;
	// begin inline asm
	cvt.rn.bf16.f32 %rs49, %r97;
	// end inline asm
	mov.b32 	%r98, %f163;
	// begin inline asm
	cvt.rn.bf16.f32 %rs50, %r98;
	// end inline asm
	mov.b32 	%r99, %f164;
	// begin inline asm
	cvt.rn.bf16.f32 %rs51, %r99;
	// end inline asm
	mov.b32 	%r100, %f165;
	// begin inline asm
	cvt.rn.bf16.f32 %rs52, %r100;
	// end inline asm
	mov.b32 	%r101, %f166;
	// begin inline asm
	cvt.rn.bf16.f32 %rs53, %r101;
	// end inline asm
	mov.b32 	%r102, %f167;
	// begin inline asm
	cvt.rn.bf16.f32 %rs54, %r102;
	// end inline asm
	mov.b32 	%r103, %f168;
	// begin inline asm
	cvt.rn.bf16.f32 %rs55, %r103;
	// end inline asm
	mov.b32 	%r104, %f169;
	// begin inline asm
	cvt.rn.bf16.f32 %rs56, %r104;
	// end inline asm
	mov.b32 	%r105, %f170;
	// begin inline asm
	cvt.rn.bf16.f32 %rs57, %r105;
	// end inline asm
	mov.b32 	%r106, %f171;
	// begin inline asm
	cvt.rn.bf16.f32 %rs58, %r106;
	// end inline asm
	mov.b32 	%r107, %f172;
	// begin inline asm
	cvt.rn.bf16.f32 %rs59, %r107;
	// end inline asm
	mov.b32 	%r108, %f173;
	// begin inline asm
	cvt.rn.bf16.f32 %rs60, %r108;
	// end inline asm
	mov.b32 	%r109, %f174;
	// begin inline asm
	cvt.rn.bf16.f32 %rs61, %r109;
	// end inline asm
	mov.b32 	%r110, %f175;
	// begin inline asm
	cvt.rn.bf16.f32 %rs62, %r110;
	// end inline asm
	mov.b32 	%r111, %f176;
	// begin inline asm
	cvt.rn.bf16.f32 %rs63, %r111;
	// end inline asm
	mov.b32 	%r112, %f177;
	// begin inline asm
	cvt.rn.bf16.f32 %rs64, %r112;
	// end inline asm
	add.s64 	%rd40, %rd16, %rd30;
	add.s64 	%rd12, %rd40, %rd27;
	add.s64 	%rd13, %rd12, 1024;
	mov.b32 	%r113, {%rs49, %rs50};
	mov.b32 	%r114, {%rs51, %rs52};
	mov.b32 	%r115, {%rs53, %rs54};
	mov.b32 	%r116, {%rs55, %rs56};
	// begin inline asm
	st.global.v4.b32 [ %rd12 + 0 ], { %r113, %r114, %r115, %r116 };
	// end inline asm
	mov.b32 	%r117, {%rs57, %rs58};
	mov.b32 	%r118, {%rs59, %rs60};
	mov.b32 	%r119, {%rs61, %rs62};
	mov.b32 	%r120, {%rs63, %rs64};
	// begin inline asm
	st.global.v4.b32 [ %rd13 + 0 ], { %r117, %r118, %r119, %r120 };
	// end inline asm
	ret;

}
	// .globl	fusion_351
.visible .entry fusion_351(
	.param .u64 .ptr .align 16 fusion_351_param_0,
	.param .u64 .ptr .align 16 fusion_351_param_1,
	.param .u64 .ptr .align 128 fusion_351_param_2,
	.param .u64 .ptr .align 128 fusion_351_param_3,
	.param .u64 .ptr .align 128 fusion_351_param_4,
	.param .u64 .ptr .align 128 fusion_351_param_5,
	.param .u64 .ptr .align 128 fusion_351_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<97>;
	.reg .b32 	%r<189>;
	.reg .f32 	%f<242>;
	.reg .b64 	%rd<47>;

	ld.param.u64 	%rd18, [fusion_351_param_0];
	ld.param.u64 	%rd19, [fusion_351_param_6];
	cvta.to.global.u64 	%rd20, %rd19;
	ld.param.u64 	%rd21, [fusion_351_param_1];
	ld.param.u64 	%rd22, [fusion_351_param_5];
	cvta.to.global.u64 	%rd23, %rd22;
	ld.param.u64 	%rd24, [fusion_351_param_2];
	ld.param.u64 	%rd25, [fusion_351_param_4];
	cvta.to.global.u64 	%rd26, %rd25;
	ld.param.u64 	%rd27, [fusion_351_param_3];
	cvta.to.global.u64 	%rd28, %rd27;
	cvta.to.global.u64 	%rd29, %rd24;
	cvta.to.global.u64 	%rd30, %rd21;
	cvta.to.global.u64 	%rd13, %rd18;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd31, %r1, 53248;
	add.s64 	%rd32, %rd26, %rd31;
	mov.u32 	%r169, %tid.x;
	and.b32  	%r170, %r169, 31;
	shl.b32 	%r171, %r169, 3;
	and.b32  	%r172, %r171, 248;
	setp.lt.u32 	%p4, %r169, 32;
	selp.b32 	%r173, 0, 256, %p4;
	or.b32  	%r174, %r172, %r173;
	mul.wide.u32 	%rd33, %r174, 2;
	add.s64 	%rd1, %rd32, %rd33;
	add.s64 	%rd2, %rd1, 1024;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd34, %r1, 1024;
	shl.b64 	%rd35, %rd34, 1;
	add.s64 	%rd36, %rd23, %rd35;
	add.s64 	%rd3, %rd36, %rd33;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	add.s64 	%rd5, %rd1, 2048;
	add.s64 	%rd6, %rd1, 3072;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r50;
	mov.b32 	{%rs35, %rs36}, %r51;
	mov.b32 	{%rs37, %rs38}, %r52;
	mov.b32 	{%rs39, %rs40}, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r54;
	mov.b32 	{%rs43, %rs44}, %r55;
	mov.b32 	{%rs45, %rs46}, %r56;
	mov.b32 	{%rs47, %rs48}, %r57;
	// begin inline asm
	cvt.f32.bf16 %r58, %rs33;
	// end inline asm
	mov.b32 	%f33, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs34;
	// end inline asm
	mov.b32 	%f34, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs35;
	// end inline asm
	mov.b32 	%f35, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs36;
	// end inline asm
	mov.b32 	%f36, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs37;
	// end inline asm
	mov.b32 	%f37, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs38;
	// end inline asm
	mov.b32 	%f38, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs39;
	// end inline asm
	mov.b32 	%f39, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs40;
	// end inline asm
	mov.b32 	%f40, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs41;
	// end inline asm
	mov.b32 	%f41, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs42;
	// end inline asm
	mov.b32 	%f42, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs43;
	// end inline asm
	mov.b32 	%f43, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs44;
	// end inline asm
	mov.b32 	%f44, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs45;
	// end inline asm
	mov.b32 	%f45, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs46;
	// end inline asm
	mov.b32 	%f46, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs47;
	// end inline asm
	mov.b32 	%f47, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs48;
	// end inline asm
	mov.b32 	%f48, %r73;
	add.s64 	%rd37, %rd28, %rd35;
	add.s64 	%rd7, %rd37, %rd33;
	add.s64 	%rd8, %rd7, 1024;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	ld.global.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs49, %rs50}, %r74;
	mov.b32 	{%rs51, %rs52}, %r75;
	mov.b32 	{%rs53, %rs54}, %r76;
	mov.b32 	{%rs55, %rs56}, %r77;
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	ld.global.v4.b32 { %r78, %r79, %r80, %r81 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	{%rs57, %rs58}, %r78;
	mov.b32 	{%rs59, %rs60}, %r79;
	mov.b32 	{%rs61, %rs62}, %r80;
	mov.b32 	{%rs63, %rs64}, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs49;
	// end inline asm
	mov.b32 	%f49, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs50;
	// end inline asm
	mov.b32 	%f50, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs51;
	// end inline asm
	mov.b32 	%f51, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs52;
	// end inline asm
	mov.b32 	%f52, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs53;
	// end inline asm
	mov.b32 	%f53, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs54;
	// end inline asm
	mov.b32 	%f54, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs55;
	// end inline asm
	mov.b32 	%f55, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs56;
	// end inline asm
	mov.b32 	%f56, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs57;
	// end inline asm
	mov.b32 	%f57, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs58;
	// end inline asm
	mov.b32 	%f58, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs59;
	// end inline asm
	mov.b32 	%f59, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs60;
	// end inline asm
	mov.b32 	%f60, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs61;
	// end inline asm
	mov.b32 	%f61, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs62;
	// end inline asm
	mov.b32 	%f62, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs63;
	// end inline asm
	mov.b32 	%f63, %r96;
	// begin inline asm
	cvt.f32.bf16 %r97, %rs64;
	// end inline asm
	mov.b32 	%f64, %r97;
	shl.b64 	%rd38, %rd34, 2;
	add.s64 	%rd39, %rd29, %rd38;
	mul.wide.u32 	%rd40, %r174, 4;
	add.s64 	%rd9, %rd39, %rd40;
	add.s64 	%rd10, %rd9, 16;
	add.s64 	%rd11, %rd9, 2048;
	add.s64 	%rd12, %rd9, 2064;
	// begin inline asm
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	ld.global.v4.b32 { %r98, %r99, %r100, %r101 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f65, %r98;
	mov.b32 	%f66, %r99;
	mov.b32 	%f67, %r100;
	mov.b32 	%f68, %r101;
	// begin inline asm
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	ld.global.v4.b32 { %r102, %r103, %r104, %r105 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f69, %r102;
	mov.b32 	%f70, %r103;
	mov.b32 	%f71, %r104;
	mov.b32 	%f72, %r105;
	// begin inline asm
	mov.u32 %r106, 0x0;
	mov.u32 %r107, 0x0;
	mov.u32 %r108, 0x0;
	mov.u32 %r109, 0x0;
	ld.global.v4.b32 { %r106, %r107, %r108, %r109 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f73, %r106;
	mov.b32 	%f74, %r107;
	mov.b32 	%f75, %r108;
	mov.b32 	%f76, %r109;
	// begin inline asm
	mov.u32 %r110, 0x0;
	mov.u32 %r111, 0x0;
	mov.u32 %r112, 0x0;
	mov.u32 %r113, 0x0;
	ld.global.v4.b32 { %r110, %r111, %r112, %r113 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f77, %r110;
	mov.b32 	%f78, %r111;
	mov.b32 	%f79, %r112;
	mov.b32 	%f80, %r113;
	add.rn.f32 	%f81, %f49, %f65;
	add.rn.f32 	%f82, %f50, %f66;
	add.rn.f32 	%f83, %f51, %f67;
	add.rn.f32 	%f84, %f52, %f68;
	add.rn.f32 	%f85, %f53, %f69;
	add.rn.f32 	%f86, %f54, %f70;
	add.rn.f32 	%f87, %f55, %f71;
	add.rn.f32 	%f88, %f56, %f72;
	add.rn.f32 	%f89, %f57, %f73;
	add.rn.f32 	%f90, %f58, %f74;
	add.rn.f32 	%f91, %f59, %f75;
	add.rn.f32 	%f92, %f60, %f76;
	add.rn.f32 	%f93, %f61, %f77;
	add.rn.f32 	%f94, %f62, %f78;
	add.rn.f32 	%f95, %f63, %f79;
	add.rn.f32 	%f96, %f64, %f80;
	add.rn.f32 	%f97, %f33, %f81;
	add.rn.f32 	%f98, %f34, %f82;
	add.rn.f32 	%f99, %f35, %f83;
	add.rn.f32 	%f100, %f36, %f84;
	add.rn.f32 	%f101, %f37, %f85;
	add.rn.f32 	%f102, %f38, %f86;
	add.rn.f32 	%f103, %f39, %f87;
	add.rn.f32 	%f104, %f40, %f88;
	add.rn.f32 	%f105, %f41, %f89;
	add.rn.f32 	%f106, %f42, %f90;
	add.rn.f32 	%f107, %f43, %f91;
	add.rn.f32 	%f108, %f44, %f92;
	add.rn.f32 	%f109, %f45, %f93;
	add.rn.f32 	%f110, %f46, %f94;
	add.rn.f32 	%f111, %f47, %f95;
	add.rn.f32 	%f112, %f48, %f96;
	add.rn.f32 	%f113, %f17, %f97;
	add.rn.f32 	%f114, %f18, %f98;
	add.rn.f32 	%f115, %f19, %f99;
	add.rn.f32 	%f116, %f20, %f100;
	add.rn.f32 	%f117, %f21, %f101;
	add.rn.f32 	%f118, %f22, %f102;
	add.rn.f32 	%f119, %f23, %f103;
	add.rn.f32 	%f120, %f24, %f104;
	add.rn.f32 	%f121, %f25, %f105;
	add.rn.f32 	%f122, %f26, %f106;
	add.rn.f32 	%f123, %f27, %f107;
	add.rn.f32 	%f124, %f28, %f108;
	add.rn.f32 	%f125, %f29, %f109;
	add.rn.f32 	%f126, %f30, %f110;
	add.rn.f32 	%f127, %f31, %f111;
	add.rn.f32 	%f128, %f32, %f112;
	add.rn.f32 	%f129, %f1, %f113;
	add.rn.f32 	%f130, %f2, %f114;
	add.rn.f32 	%f131, %f3, %f115;
	add.rn.f32 	%f132, %f4, %f116;
	add.rn.f32 	%f133, %f5, %f117;
	add.rn.f32 	%f134, %f6, %f118;
	add.rn.f32 	%f135, %f7, %f119;
	add.rn.f32 	%f136, %f8, %f120;
	add.rn.f32 	%f137, %f9, %f121;
	add.rn.f32 	%f138, %f10, %f122;
	add.rn.f32 	%f139, %f11, %f123;
	add.rn.f32 	%f140, %f12, %f124;
	add.rn.f32 	%f141, %f13, %f125;
	add.rn.f32 	%f142, %f14, %f126;
	add.rn.f32 	%f143, %f15, %f127;
	add.rn.f32 	%f144, %f16, %f128;
	mul.rn.f32 	%f145, %f129, %f129;
	mul.rn.f32 	%f146, %f130, %f130;
	mul.rn.f32 	%f147, %f131, %f131;
	mul.rn.f32 	%f148, %f132, %f132;
	mul.rn.f32 	%f149, %f133, %f133;
	mul.rn.f32 	%f150, %f134, %f134;
	mul.rn.f32 	%f151, %f135, %f135;
	mul.rn.f32 	%f152, %f136, %f136;
	mul.rn.f32 	%f153, %f137, %f137;
	mul.rn.f32 	%f154, %f138, %f138;
	mul.rn.f32 	%f155, %f139, %f139;
	mul.rn.f32 	%f156, %f140, %f140;
	mul.rn.f32 	%f157, %f141, %f141;
	mul.rn.f32 	%f158, %f142, %f142;
	mul.rn.f32 	%f159, %f143, %f143;
	mul.rn.f32 	%f160, %f144, %f144;
	add.rn.f32 	%f161, %f145, %f146;
	add.rn.f32 	%f162, %f147, %f161;
	add.rn.f32 	%f163, %f148, %f162;
	add.rn.f32 	%f164, %f149, %f163;
	add.rn.f32 	%f165, %f150, %f164;
	add.rn.f32 	%f166, %f151, %f165;
	add.rn.f32 	%f167, %f152, %f166;
	add.rn.f32 	%f168, %f153, %f167;
	add.rn.f32 	%f169, %f154, %f168;
	add.rn.f32 	%f170, %f155, %f169;
	add.rn.f32 	%f171, %f156, %f170;
	add.rn.f32 	%f172, %f157, %f171;
	add.rn.f32 	%f173, %f158, %f172;
	add.rn.f32 	%f174, %f159, %f173;
	add.rn.f32 	%f175, %f160, %f174;
	mov.b32 	%r175, %f175;
	shfl.sync.bfly.b32	%r176, %r175, 16, 31, -1;
	mov.b32 	%f176, %r176;
	add.rn.f32 	%f177, %f175, %f176;
	mov.b32 	%r177, %f177;
	shfl.sync.bfly.b32	%r178, %r177, 8, 31, -1;
	mov.b32 	%f178, %r178;
	add.rn.f32 	%f179, %f177, %f178;
	mov.b32 	%r179, %f179;
	shfl.sync.bfly.b32	%r180, %r179, 4, 31, -1;
	mov.b32 	%f180, %r180;
	add.rn.f32 	%f181, %f179, %f180;
	mov.b32 	%r181, %f181;
	shfl.sync.bfly.b32	%r182, %r181, 2, 31, -1;
	mov.b32 	%f182, %r182;
	add.rn.f32 	%f183, %f181, %f182;
	mov.b32 	%r183, %f183;
	shfl.sync.bfly.b32	%r184, %r183, 1, 31, -1;
	mov.b32 	%f184, %r184;
	add.rn.f32 	%f185, %f183, %f184;
	setp.eq.s32 	%p1, %r170, 0;
	shr.u32 	%r185, %r169, 3;
	and.b32  	%r186, %r185, 4;
	cvt.u64.u32 	%rd41, %r186;
	mov.u64 	%rd42, global_smem;
	add.s64 	%rd43, %rd42, %rd41;
	mov.b32 	%r115, %f185;
	cvt.u32.u64 	%r114, %rd43;
	// begin inline asm
	@%p1 st.shared.b32 [ %r114 + 0 ], %r115;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r169, 2;
	shl.b32 	%r187, %r169, 2;
	cvt.u64.u32 	%rd44, %r187;
	add.s64 	%rd45, %rd42, %rd44;
	cvt.u32.u64 	%r117, %rd45;
	// begin inline asm
	@%p2 ld.shared.b32 %r116, [ %r117 + 0 ];
	// end inline asm
	mov.b32 	%f186, %r116;
	shfl.sync.bfly.b32	%r188, %r116, 1, 31, -1;
	mov.b32 	%f187, %r188;
	add.rn.f32 	%f188, %f186, %f187;
	setp.eq.s32 	%p3, %r169, 0;
	mov.b32 	%r119, %f188;
	// begin inline asm
	@%p3 st.shared.b32 [ %r117 + 0 ], %r119;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f189, [global_smem];
	mul.rn.f32 	%f190, %f189, 0f3A800000;
	// begin inline asm
	mov.u32 %r120, 0x0;
	ld.global.b32 { %r120 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f191, %r120;
	add.rn.f32 	%f192, %f190, %f191;
	rsqrt.approx.f32 	%f193, %f192;
	mul.rn.f32 	%f194, %f129, %f193;
	mul.rn.f32 	%f195, %f130, %f193;
	mul.rn.f32 	%f196, %f131, %f193;
	mul.rn.f32 	%f197, %f132, %f193;
	mul.rn.f32 	%f198, %f133, %f193;
	mul.rn.f32 	%f199, %f134, %f193;
	mul.rn.f32 	%f200, %f135, %f193;
	mul.rn.f32 	%f201, %f136, %f193;
	mul.rn.f32 	%f202, %f137, %f193;
	mul.rn.f32 	%f203, %f138, %f193;
	mul.rn.f32 	%f204, %f139, %f193;
	mul.rn.f32 	%f205, %f140, %f193;
	mul.rn.f32 	%f206, %f141, %f193;
	mul.rn.f32 	%f207, %f142, %f193;
	mul.rn.f32 	%f208, %f143, %f193;
	mul.rn.f32 	%f209, %f144, %f193;
	add.s64 	%rd14, %rd30, %rd33;
	add.s64 	%rd15, %rd14, 1024;
	// begin inline asm
	mov.u32 %r121, 0x0;
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	ld.global.v4.b32 { %r121, %r122, %r123, %r124 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	{%rs65, %rs66}, %r121;
	mov.b32 	{%rs67, %rs68}, %r122;
	mov.b32 	{%rs69, %rs70}, %r123;
	mov.b32 	{%rs71, %rs72}, %r124;
	// begin inline asm
	mov.u32 %r125, 0x0;
	mov.u32 %r126, 0x0;
	mov.u32 %r127, 0x0;
	mov.u32 %r128, 0x0;
	ld.global.v4.b32 { %r125, %r126, %r127, %r128 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	{%rs73, %rs74}, %r125;
	mov.b32 	{%rs75, %rs76}, %r126;
	mov.b32 	{%rs77, %rs78}, %r127;
	mov.b32 	{%rs79, %rs80}, %r128;
	// begin inline asm
	cvt.f32.bf16 %r129, %rs65;
	// end inline asm
	mov.b32 	%f210, %r129;
	// begin inline asm
	cvt.f32.bf16 %r130, %rs66;
	// end inline asm
	mov.b32 	%f211, %r130;
	// begin inline asm
	cvt.f32.bf16 %r131, %rs67;
	// end inline asm
	mov.b32 	%f212, %r131;
	// begin inline asm
	cvt.f32.bf16 %r132, %rs68;
	// end inline asm
	mov.b32 	%f213, %r132;
	// begin inline asm
	cvt.f32.bf16 %r133, %rs69;
	// end inline asm
	mov.b32 	%f214, %r133;
	// begin inline asm
	cvt.f32.bf16 %r134, %rs70;
	// end inline asm
	mov.b32 	%f215, %r134;
	// begin inline asm
	cvt.f32.bf16 %r135, %rs71;
	// end inline asm
	mov.b32 	%f216, %r135;
	// begin inline asm
	cvt.f32.bf16 %r136, %rs72;
	// end inline asm
	mov.b32 	%f217, %r136;
	// begin inline asm
	cvt.f32.bf16 %r137, %rs73;
	// end inline asm
	mov.b32 	%f218, %r137;
	// begin inline asm
	cvt.f32.bf16 %r138, %rs74;
	// end inline asm
	mov.b32 	%f219, %r138;
	// begin inline asm
	cvt.f32.bf16 %r139, %rs75;
	// end inline asm
	mov.b32 	%f220, %r139;
	// begin inline asm
	cvt.f32.bf16 %r140, %rs76;
	// end inline asm
	mov.b32 	%f221, %r140;
	// begin inline asm
	cvt.f32.bf16 %r141, %rs77;
	// end inline asm
	mov.b32 	%f222, %r141;
	// begin inline asm
	cvt.f32.bf16 %r142, %rs78;
	// end inline asm
	mov.b32 	%f223, %r142;
	// begin inline asm
	cvt.f32.bf16 %r143, %rs79;
	// end inline asm
	mov.b32 	%f224, %r143;
	// begin inline asm
	cvt.f32.bf16 %r144, %rs80;
	// end inline asm
	mov.b32 	%f225, %r144;
	mul.rn.f32 	%f226, %f194, %f210;
	mul.rn.f32 	%f227, %f195, %f211;
	mul.rn.f32 	%f228, %f196, %f212;
	mul.rn.f32 	%f229, %f197, %f213;
	mul.rn.f32 	%f230, %f198, %f214;
	mul.rn.f32 	%f231, %f199, %f215;
	mul.rn.f32 	%f232, %f200, %f216;
	mul.rn.f32 	%f233, %f201, %f217;
	mul.rn.f32 	%f234, %f202, %f218;
	mul.rn.f32 	%f235, %f203, %f219;
	mul.rn.f32 	%f236, %f204, %f220;
	mul.rn.f32 	%f237, %f205, %f221;
	mul.rn.f32 	%f238, %f206, %f222;
	mul.rn.f32 	%f239, %f207, %f223;
	mul.rn.f32 	%f240, %f208, %f224;
	mul.rn.f32 	%f241, %f209, %f225;
	mov.b32 	%r145, %f226;
	// begin inline asm
	cvt.rn.bf16.f32 %rs81, %r145;
	// end inline asm
	mov.b32 	%r146, %f227;
	// begin inline asm
	cvt.rn.bf16.f32 %rs82, %r146;
	// end inline asm
	mov.b32 	%r147, %f228;
	// begin inline asm
	cvt.rn.bf16.f32 %rs83, %r147;
	// end inline asm
	mov.b32 	%r148, %f229;
	// begin inline asm
	cvt.rn.bf16.f32 %rs84, %r148;
	// end inline asm
	mov.b32 	%r149, %f230;
	// begin inline asm
	cvt.rn.bf16.f32 %rs85, %r149;
	// end inline asm
	mov.b32 	%r150, %f231;
	// begin inline asm
	cvt.rn.bf16.f32 %rs86, %r150;
	// end inline asm
	mov.b32 	%r151, %f232;
	// begin inline asm
	cvt.rn.bf16.f32 %rs87, %r151;
	// end inline asm
	mov.b32 	%r152, %f233;
	// begin inline asm
	cvt.rn.bf16.f32 %rs88, %r152;
	// end inline asm
	mov.b32 	%r153, %f234;
	// begin inline asm
	cvt.rn.bf16.f32 %rs89, %r153;
	// end inline asm
	mov.b32 	%r154, %f235;
	// begin inline asm
	cvt.rn.bf16.f32 %rs90, %r154;
	// end inline asm
	mov.b32 	%r155, %f236;
	// begin inline asm
	cvt.rn.bf16.f32 %rs91, %r155;
	// end inline asm
	mov.b32 	%r156, %f237;
	// begin inline asm
	cvt.rn.bf16.f32 %rs92, %r156;
	// end inline asm
	mov.b32 	%r157, %f238;
	// begin inline asm
	cvt.rn.bf16.f32 %rs93, %r157;
	// end inline asm
	mov.b32 	%r158, %f239;
	// begin inline asm
	cvt.rn.bf16.f32 %rs94, %r158;
	// end inline asm
	mov.b32 	%r159, %f240;
	// begin inline asm
	cvt.rn.bf16.f32 %rs95, %r159;
	// end inline asm
	mov.b32 	%r160, %f241;
	// begin inline asm
	cvt.rn.bf16.f32 %rs96, %r160;
	// end inline asm
	add.s64 	%rd46, %rd20, %rd35;
	add.s64 	%rd16, %rd46, %rd33;
	add.s64 	%rd17, %rd16, 1024;
	mov.b32 	%r161, {%rs81, %rs82};
	mov.b32 	%r162, {%rs83, %rs84};
	mov.b32 	%r163, {%rs85, %rs86};
	mov.b32 	%r164, {%rs87, %rs88};
	// begin inline asm
	st.global.v4.b32 [ %rd16 + 0 ], { %r161, %r162, %r163, %r164 };
	// end inline asm
	mov.b32 	%r165, {%rs89, %rs90};
	mov.b32 	%r166, {%rs91, %rs92};
	mov.b32 	%r167, {%rs93, %rs94};
	mov.b32 	%r168, {%rs95, %rs96};
	// begin inline asm
	st.global.v4.b32 [ %rd17 + 0 ], { %r165, %r166, %r167, %r168 };
	// end inline asm
	ret;

}
	// .globl	fusion_352
.visible .entry fusion_352(
	.param .u64 .ptr .align 16 fusion_352_param_0,
	.param .u64 .ptr .align 128 fusion_352_param_1,
	.param .u64 .ptr .align 16 fusion_352_param_2,
	.param .u64 .ptr .align 128 fusion_352_param_3,
	.param .u64 .ptr .align 128 fusion_352_param_4,
	.param .u64 .ptr .align 128 fusion_352_param_5,
	.param .u64 .ptr .align 128 fusion_352_param_6,
	.param .u64 .ptr .align 128 fusion_352_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<113>;
	.reg .b32 	%r<213>;
	.reg .f32 	%f<274>;
	.reg .b64 	%rd<52>;

	ld.param.u64 	%rd20, [fusion_352_param_0];
	ld.param.u64 	%rd21, [fusion_352_param_7];
	cvta.to.global.u64 	%rd22, %rd21;
	ld.param.u64 	%rd23, [fusion_352_param_1];
	ld.param.u64 	%rd24, [fusion_352_param_6];
	cvta.to.global.u64 	%rd25, %rd24;
	ld.param.u64 	%rd26, [fusion_352_param_2];
	ld.param.u64 	%rd27, [fusion_352_param_5];
	cvta.to.global.u64 	%rd28, %rd27;
	ld.param.u64 	%rd29, [fusion_352_param_3];
	ld.param.u64 	%rd30, [fusion_352_param_4];
	cvta.to.global.u64 	%rd31, %rd30;
	cvta.to.global.u64 	%rd32, %rd29;
	cvta.to.global.u64 	%rd33, %rd26;
	cvta.to.global.u64 	%rd34, %rd23;
	cvta.to.global.u64 	%rd15, %rd20;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	mul.wide.s32 	%rd35, %r1, 1024;
	shl.b64 	%rd36, %rd35, 1;
	add.s64 	%rd37, %rd34, %rd36;
	mov.u32 	%r193, %tid.x;
	and.b32  	%r194, %r193, 31;
	shl.b32 	%r195, %r193, 3;
	and.b32  	%r196, %r195, 248;
	setp.lt.u32 	%p4, %r193, 32;
	selp.b32 	%r197, 0, 256, %p4;
	or.b32  	%r198, %r196, %r197;
	mul.wide.u32 	%rd38, %r198, 2;
	add.s64 	%rd1, %rd37, %rd38;
	add.s64 	%rd2, %rd1, 1024;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	{%rs9, %rs10}, %r6;
	mov.b32 	{%rs11, %rs12}, %r7;
	mov.b32 	{%rs13, %rs14}, %r8;
	mov.b32 	{%rs15, %rs16}, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs1;
	// end inline asm
	mov.b32 	%f1, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs2;
	// end inline asm
	mov.b32 	%f2, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs3;
	// end inline asm
	mov.b32 	%f3, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs4;
	// end inline asm
	mov.b32 	%f4, %r13;
	// begin inline asm
	cvt.f32.bf16 %r14, %rs5;
	// end inline asm
	mov.b32 	%f5, %r14;
	// begin inline asm
	cvt.f32.bf16 %r15, %rs6;
	// end inline asm
	mov.b32 	%f6, %r15;
	// begin inline asm
	cvt.f32.bf16 %r16, %rs7;
	// end inline asm
	mov.b32 	%f7, %r16;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs8;
	// end inline asm
	mov.b32 	%f8, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs9;
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs10;
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs11;
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs12;
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs13;
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs14;
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs15;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs16;
	// end inline asm
	mov.b32 	%f16, %r25;
	mul.wide.s32 	%rd39, %r1, 53248;
	add.s64 	%rd40, %rd28, %rd39;
	add.s64 	%rd3, %rd40, %rd38;
	add.s64 	%rd4, %rd3, 1024;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	{%rs17, %rs18}, %r26;
	mov.b32 	{%rs19, %rs20}, %r27;
	mov.b32 	{%rs21, %rs22}, %r28;
	mov.b32 	{%rs23, %rs24}, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	ld.global.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	{%rs25, %rs26}, %r30;
	mov.b32 	{%rs27, %rs28}, %r31;
	mov.b32 	{%rs29, %rs30}, %r32;
	mov.b32 	{%rs31, %rs32}, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs17;
	// end inline asm
	mov.b32 	%f17, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs18;
	// end inline asm
	mov.b32 	%f18, %r35;
	// begin inline asm
	cvt.f32.bf16 %r36, %rs19;
	// end inline asm
	mov.b32 	%f19, %r36;
	// begin inline asm
	cvt.f32.bf16 %r37, %rs20;
	// end inline asm
	mov.b32 	%f20, %r37;
	// begin inline asm
	cvt.f32.bf16 %r38, %rs21;
	// end inline asm
	mov.b32 	%f21, %r38;
	// begin inline asm
	cvt.f32.bf16 %r39, %rs22;
	// end inline asm
	mov.b32 	%f22, %r39;
	// begin inline asm
	cvt.f32.bf16 %r40, %rs23;
	// end inline asm
	mov.b32 	%f23, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs24;
	// end inline asm
	mov.b32 	%f24, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs25;
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs26;
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	cvt.f32.bf16 %r44, %rs27;
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	cvt.f32.bf16 %r45, %rs28;
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	cvt.f32.bf16 %r46, %rs29;
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	cvt.f32.bf16 %r47, %rs30;
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	cvt.f32.bf16 %r48, %rs31;
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	cvt.f32.bf16 %r49, %rs32;
	// end inline asm
	mov.b32 	%f32, %r49;
	add.s64 	%rd41, %rd25, %rd36;
	add.s64 	%rd5, %rd41, %rd38;
	add.s64 	%rd6, %rd5, 1024;
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	{%rs33, %rs34}, %r50;
	mov.b32 	{%rs35, %rs36}, %r51;
	mov.b32 	{%rs37, %rs38}, %r52;
	mov.b32 	{%rs39, %rs40}, %r53;
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	{%rs41, %rs42}, %r54;
	mov.b32 	{%rs43, %rs44}, %r55;
	mov.b32 	{%rs45, %rs46}, %r56;
	mov.b32 	{%rs47, %rs48}, %r57;
	// begin inline asm
	cvt.f32.bf16 %r58, %rs33;
	// end inline asm
	mov.b32 	%f33, %r58;
	// begin inline asm
	cvt.f32.bf16 %r59, %rs34;
	// end inline asm
	mov.b32 	%f34, %r59;
	// begin inline asm
	cvt.f32.bf16 %r60, %rs35;
	// end inline asm
	mov.b32 	%f35, %r60;
	// begin inline asm
	cvt.f32.bf16 %r61, %rs36;
	// end inline asm
	mov.b32 	%f36, %r61;
	// begin inline asm
	cvt.f32.bf16 %r62, %rs37;
	// end inline asm
	mov.b32 	%f37, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs38;
	// end inline asm
	mov.b32 	%f38, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs39;
	// end inline asm
	mov.b32 	%f39, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs40;
	// end inline asm
	mov.b32 	%f40, %r65;
	// begin inline asm
	cvt.f32.bf16 %r66, %rs41;
	// end inline asm
	mov.b32 	%f41, %r66;
	// begin inline asm
	cvt.f32.bf16 %r67, %rs42;
	// end inline asm
	mov.b32 	%f42, %r67;
	// begin inline asm
	cvt.f32.bf16 %r68, %rs43;
	// end inline asm
	mov.b32 	%f43, %r68;
	// begin inline asm
	cvt.f32.bf16 %r69, %rs44;
	// end inline asm
	mov.b32 	%f44, %r69;
	// begin inline asm
	cvt.f32.bf16 %r70, %rs45;
	// end inline asm
	mov.b32 	%f45, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs46;
	// end inline asm
	mov.b32 	%f46, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs47;
	// end inline asm
	mov.b32 	%f47, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs48;
	// end inline asm
	mov.b32 	%f48, %r73;
	add.s64 	%rd7, %rd3, 2048;
	add.s64 	%rd8, %rd3, 3072;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	ld.global.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	{%rs49, %rs50}, %r74;
	mov.b32 	{%rs51, %rs52}, %r75;
	mov.b32 	{%rs53, %rs54}, %r76;
	mov.b32 	{%rs55, %rs56}, %r77;
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	ld.global.v4.b32 { %r78, %r79, %r80, %r81 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	{%rs57, %rs58}, %r78;
	mov.b32 	{%rs59, %rs60}, %r79;
	mov.b32 	{%rs61, %rs62}, %r80;
	mov.b32 	{%rs63, %rs64}, %r81;
	// begin inline asm
	cvt.f32.bf16 %r82, %rs49;
	// end inline asm
	mov.b32 	%f49, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs50;
	// end inline asm
	mov.b32 	%f50, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs51;
	// end inline asm
	mov.b32 	%f51, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs52;
	// end inline asm
	mov.b32 	%f52, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs53;
	// end inline asm
	mov.b32 	%f53, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs54;
	// end inline asm
	mov.b32 	%f54, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs55;
	// end inline asm
	mov.b32 	%f55, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs56;
	// end inline asm
	mov.b32 	%f56, %r89;
	// begin inline asm
	cvt.f32.bf16 %r90, %rs57;
	// end inline asm
	mov.b32 	%f57, %r90;
	// begin inline asm
	cvt.f32.bf16 %r91, %rs58;
	// end inline asm
	mov.b32 	%f58, %r91;
	// begin inline asm
	cvt.f32.bf16 %r92, %rs59;
	// end inline asm
	mov.b32 	%f59, %r92;
	// begin inline asm
	cvt.f32.bf16 %r93, %rs60;
	// end inline asm
	mov.b32 	%f60, %r93;
	// begin inline asm
	cvt.f32.bf16 %r94, %rs61;
	// end inline asm
	mov.b32 	%f61, %r94;
	// begin inline asm
	cvt.f32.bf16 %r95, %rs62;
	// end inline asm
	mov.b32 	%f62, %r95;
	// begin inline asm
	cvt.f32.bf16 %r96, %rs63;
	// end inline asm
	mov.b32 	%f63, %r96;
	// begin inline asm
	cvt.f32.bf16 %r97, %rs64;
	// end inline asm
	mov.b32 	%f64, %r97;
	add.s64 	%rd42, %rd31, %rd36;
	add.s64 	%rd9, %rd42, %rd38;
	add.s64 	%rd10, %rd9, 1024;
	// begin inline asm
	mov.u32 %r98, 0x0;
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	ld.global.v4.b32 { %r98, %r99, %r100, %r101 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	{%rs65, %rs66}, %r98;
	mov.b32 	{%rs67, %rs68}, %r99;
	mov.b32 	{%rs69, %rs70}, %r100;
	mov.b32 	{%rs71, %rs72}, %r101;
	// begin inline asm
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	ld.global.v4.b32 { %r102, %r103, %r104, %r105 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	{%rs73, %rs74}, %r102;
	mov.b32 	{%rs75, %rs76}, %r103;
	mov.b32 	{%rs77, %rs78}, %r104;
	mov.b32 	{%rs79, %rs80}, %r105;
	// begin inline asm
	cvt.f32.bf16 %r106, %rs65;
	// end inline asm
	mov.b32 	%f65, %r106;
	// begin inline asm
	cvt.f32.bf16 %r107, %rs66;
	// end inline asm
	mov.b32 	%f66, %r107;
	// begin inline asm
	cvt.f32.bf16 %r108, %rs67;
	// end inline asm
	mov.b32 	%f67, %r108;
	// begin inline asm
	cvt.f32.bf16 %r109, %rs68;
	// end inline asm
	mov.b32 	%f68, %r109;
	// begin inline asm
	cvt.f32.bf16 %r110, %rs69;
	// end inline asm
	mov.b32 	%f69, %r110;
	// begin inline asm
	cvt.f32.bf16 %r111, %rs70;
	// end inline asm
	mov.b32 	%f70, %r111;
	// begin inline asm
	cvt.f32.bf16 %r112, %rs71;
	// end inline asm
	mov.b32 	%f71, %r112;
	// begin inline asm
	cvt.f32.bf16 %r113, %rs72;
	// end inline asm
	mov.b32 	%f72, %r113;
	// begin inline asm
	cvt.f32.bf16 %r114, %rs73;
	// end inline asm
	mov.b32 	%f73, %r114;
	// begin inline asm
	cvt.f32.bf16 %r115, %rs74;
	// end inline asm
	mov.b32 	%f74, %r115;
	// begin inline asm
	cvt.f32.bf16 %r116, %rs75;
	// end inline asm
	mov.b32 	%f75, %r116;
	// begin inline asm
	cvt.f32.bf16 %r117, %rs76;
	// end inline asm
	mov.b32 	%f76, %r117;
	// begin inline asm
	cvt.f32.bf16 %r118, %rs77;
	// end inline asm
	mov.b32 	%f77, %r118;
	// begin inline asm
	cvt.f32.bf16 %r119, %rs78;
	// end inline asm
	mov.b32 	%f78, %r119;
	// begin inline asm
	cvt.f32.bf16 %r120, %rs79;
	// end inline asm
	mov.b32 	%f79, %r120;
	// begin inline asm
	cvt.f32.bf16 %r121, %rs80;
	// end inline asm
	mov.b32 	%f80, %r121;
	shl.b64 	%rd43, %rd35, 2;
	add.s64 	%rd44, %rd32, %rd43;
	mul.wide.u32 	%rd45, %r198, 4;
	add.s64 	%rd11, %rd44, %rd45;
	add.s64 	%rd12, %rd11, 16;
	add.s64 	%rd13, %rd11, 2048;
	add.s64 	%rd14, %rd11, 2064;
	// begin inline asm
	mov.u32 %r122, 0x0;
	mov.u32 %r123, 0x0;
	mov.u32 %r124, 0x0;
	mov.u32 %r125, 0x0;
	ld.global.v4.b32 { %r122, %r123, %r124, %r125 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f81, %r122;
	mov.b32 	%f82, %r123;
	mov.b32 	%f83, %r124;
	mov.b32 	%f84, %r125;
	// begin inline asm
	mov.u32 %r126, 0x0;
	mov.u32 %r127, 0x0;
	mov.u32 %r128, 0x0;
	mov.u32 %r129, 0x0;
	ld.global.v4.b32 { %r126, %r127, %r128, %r129 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f85, %r126;
	mov.b32 	%f86, %r127;
	mov.b32 	%f87, %r128;
	mov.b32 	%f88, %r129;
	// begin inline asm
	mov.u32 %r130, 0x0;
	mov.u32 %r131, 0x0;
	mov.u32 %r132, 0x0;
	mov.u32 %r133, 0x0;
	ld.global.v4.b32 { %r130, %r131, %r132, %r133 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f89, %r130;
	mov.b32 	%f90, %r131;
	mov.b32 	%f91, %r132;
	mov.b32 	%f92, %r133;
	// begin inline asm
	mov.u32 %r134, 0x0;
	mov.u32 %r135, 0x0;
	mov.u32 %r136, 0x0;
	mov.u32 %r137, 0x0;
	ld.global.v4.b32 { %r134, %r135, %r136, %r137 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f93, %r134;
	mov.b32 	%f94, %r135;
	mov.b32 	%f95, %r136;
	mov.b32 	%f96, %r137;
	add.rn.f32 	%f97, %f65, %f81;
	add.rn.f32 	%f98, %f66, %f82;
	add.rn.f32 	%f99, %f67, %f83;
	add.rn.f32 	%f100, %f68, %f84;
	add.rn.f32 	%f101, %f69, %f85;
	add.rn.f32 	%f102, %f70, %f86;
	add.rn.f32 	%f103, %f71, %f87;
	add.rn.f32 	%f104, %f72, %f88;
	add.rn.f32 	%f105, %f73, %f89;
	add.rn.f32 	%f106, %f74, %f90;
	add.rn.f32 	%f107, %f75, %f91;
	add.rn.f32 	%f108, %f76, %f92;
	add.rn.f32 	%f109, %f77, %f93;
	add.rn.f32 	%f110, %f78, %f94;
	add.rn.f32 	%f111, %f79, %f95;
	add.rn.f32 	%f112, %f80, %f96;
	add.rn.f32 	%f113, %f49, %f97;
	add.rn.f32 	%f114, %f50, %f98;
	add.rn.f32 	%f115, %f51, %f99;
	add.rn.f32 	%f116, %f52, %f100;
	add.rn.f32 	%f117, %f53, %f101;
	add.rn.f32 	%f118, %f54, %f102;
	add.rn.f32 	%f119, %f55, %f103;
	add.rn.f32 	%f120, %f56, %f104;
	add.rn.f32 	%f121, %f57, %f105;
	add.rn.f32 	%f122, %f58, %f106;
	add.rn.f32 	%f123, %f59, %f107;
	add.rn.f32 	%f124, %f60, %f108;
	add.rn.f32 	%f125, %f61, %f109;
	add.rn.f32 	%f126, %f62, %f110;
	add.rn.f32 	%f127, %f63, %f111;
	add.rn.f32 	%f128, %f64, %f112;
	add.rn.f32 	%f129, %f33, %f113;
	add.rn.f32 	%f130, %f34, %f114;
	add.rn.f32 	%f131, %f35, %f115;
	add.rn.f32 	%f132, %f36, %f116;
	add.rn.f32 	%f133, %f37, %f117;
	add.rn.f32 	%f134, %f38, %f118;
	add.rn.f32 	%f135, %f39, %f119;
	add.rn.f32 	%f136, %f40, %f120;
	add.rn.f32 	%f137, %f41, %f121;
	add.rn.f32 	%f138, %f42, %f122;
	add.rn.f32 	%f139, %f43, %f123;
	add.rn.f32 	%f140, %f44, %f124;
	add.rn.f32 	%f141, %f45, %f125;
	add.rn.f32 	%f142, %f46, %f126;
	add.rn.f32 	%f143, %f47, %f127;
	add.rn.f32 	%f144, %f48, %f128;
	add.rn.f32 	%f145, %f17, %f129;
	add.rn.f32 	%f146, %f18, %f130;
	add.rn.f32 	%f147, %f19, %f131;
	add.rn.f32 	%f148, %f20, %f132;
	add.rn.f32 	%f149, %f21, %f133;
	add.rn.f32 	%f150, %f22, %f134;
	add.rn.f32 	%f151, %f23, %f135;
	add.rn.f32 	%f152, %f24, %f136;
	add.rn.f32 	%f153, %f25, %f137;
	add.rn.f32 	%f154, %f26, %f138;
	add.rn.f32 	%f155, %f27, %f139;
	add.rn.f32 	%f156, %f28, %f140;
	add.rn.f32 	%f157, %f29, %f141;
	add.rn.f32 	%f158, %f30, %f142;
	add.rn.f32 	%f159, %f31, %f143;
	add.rn.f32 	%f160, %f32, %f144;
	add.rn.f32 	%f161, %f1, %f145;
	add.rn.f32 	%f162, %f2, %f146;
	add.rn.f32 	%f163, %f3, %f147;
	add.rn.f32 	%f164, %f4, %f148;
	add.rn.f32 	%f165, %f5, %f149;
	add.rn.f32 	%f166, %f6, %f150;
	add.rn.f32 	%f167, %f7, %f151;
	add.rn.f32 	%f168, %f8, %f152;
	add.rn.f32 	%f169, %f9, %f153;
	add.rn.f32 	%f170, %f10, %f154;
	add.rn.f32 	%f171, %f11, %f155;
	add.rn.f32 	%f172, %f12, %f156;
	add.rn.f32 	%f173, %f13, %f157;
	add.rn.f32 	%f174, %f14, %f158;
	add.rn.f32 	%f175, %f15, %f159;
	add.rn.f32 	%f176, %f16, %f160;
	mul.rn.f32 	%f177, %f161, %f161;
	mul.rn.f32 	%f178, %f162, %f162;
	mul.rn.f32 	%f179, %f163, %f163;
	mul.rn.f32 	%f180, %f164, %f164;
	mul.rn.f32 	%f181, %f165, %f165;
	mul.rn.f32 	%f182, %f166, %f166;
	mul.rn.f32 	%f183, %f167, %f167;
	mul.rn.f32 	%f184, %f168, %f168;
	mul.rn.f32 	%f185, %f169, %f169;
	mul.rn.f32 	%f186, %f170, %f170;
	mul.rn.f32 	%f187, %f171, %f171;
	mul.rn.f32 	%f188, %f172, %f172;
	mul.rn.f32 	%f189, %f173, %f173;
	mul.rn.f32 	%f190, %f174, %f174;
	mul.rn.f32 	%f191, %f175, %f175;
	mul.rn.f32 	%f192, %f176, %f176;
	add.rn.f32 	%f193, %f177, %f178;
	add.rn.f32 	%f194, %f179, %f193;
	add.rn.f32 	%f195, %f180, %f194;
	add.rn.f32 	%f196, %f181, %f195;
	add.rn.f32 	%f197, %f182, %f196;
	add.rn.f32 	%f198, %f183, %f197;
	add.rn.f32 	%f199, %f184, %f198;
	add.rn.f32 	%f200, %f185, %f199;
	add.rn.f32 	%f201, %f186, %f200;
	add.rn.f32 	%f202, %f187, %f201;
	add.rn.f32 	%f203, %f188, %f202;
	add.rn.f32 	%f204, %f189, %f203;
	add.rn.f32 	%f205, %f190, %f204;
	add.rn.f32 	%f206, %f191, %f205;
	add.rn.f32 	%f207, %f192, %f206;
	mov.b32 	%r199, %f207;
	shfl.sync.bfly.b32	%r200, %r199, 16, 31, -1;
	mov.b32 	%f208, %r200;
	add.rn.f32 	%f209, %f207, %f208;
	mov.b32 	%r201, %f209;
	shfl.sync.bfly.b32	%r202, %r201, 8, 31, -1;
	mov.b32 	%f210, %r202;
	add.rn.f32 	%f211, %f209, %f210;
	mov.b32 	%r203, %f211;
	shfl.sync.bfly.b32	%r204, %r203, 4, 31, -1;
	mov.b32 	%f212, %r204;
	add.rn.f32 	%f213, %f211, %f212;
	mov.b32 	%r205, %f213;
	shfl.sync.bfly.b32	%r206, %r205, 2, 31, -1;
	mov.b32 	%f214, %r206;
	add.rn.f32 	%f215, %f213, %f214;
	mov.b32 	%r207, %f215;
	shfl.sync.bfly.b32	%r208, %r207, 1, 31, -1;
	mov.b32 	%f216, %r208;
	add.rn.f32 	%f217, %f215, %f216;
	setp.eq.s32 	%p1, %r194, 0;
	shr.u32 	%r209, %r193, 3;
	and.b32  	%r210, %r209, 4;
	cvt.u64.u32 	%rd46, %r210;
	mov.u64 	%rd47, global_smem;
	add.s64 	%rd48, %rd47, %rd46;
	mov.b32 	%r139, %f217;
	cvt.u32.u64 	%r138, %rd48;
	// begin inline asm
	@%p1 st.shared.b32 [ %r138 + 0 ], %r139;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p2, %r193, 2;
	shl.b32 	%r211, %r193, 2;
	cvt.u64.u32 	%rd49, %r211;
	add.s64 	%rd50, %rd47, %rd49;
	cvt.u32.u64 	%r141, %rd50;
	// begin inline asm
	@%p2 ld.shared.b32 %r140, [ %r141 + 0 ];
	// end inline asm
	mov.b32 	%f218, %r140;
	shfl.sync.bfly.b32	%r212, %r140, 1, 31, -1;
	mov.b32 	%f219, %r212;
	add.rn.f32 	%f220, %f218, %f219;
	setp.eq.s32 	%p3, %r193, 0;
	mov.b32 	%r143, %f220;
	// begin inline asm
	@%p3 st.shared.b32 [ %r141 + 0 ], %r143;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f221, [global_smem];
	mul.rn.f32 	%f222, %f221, 0f3A800000;
	// begin inline asm
	mov.u32 %r144, 0x0;
	ld.global.b32 { %r144 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f223, %r144;
	add.rn.f32 	%f224, %f222, %f223;
	rsqrt.approx.f32 	%f225, %f224;
	mul.rn.f32 	%f226, %f161, %f225;
	mul.rn.f32 	%f227, %f162, %f225;
	mul.rn.f32 	%f228, %f163, %f225;
	mul.rn.f32 	%f229, %f164, %f225;
	mul.rn.f32 	%f230, %f165, %f225;
	mul.rn.f32 	%f231, %f166, %f225;
	mul.rn.f32 	%f232, %f167, %f225;
	mul.rn.f32 	%f233, %f168, %f225;
	mul.rn.f32 	%f234, %f169, %f225;
	mul.rn.f32 	%f235, %f170, %f225;
	mul.rn.f32 	%f236, %f171, %f225;
	mul.rn.f32 	%f237, %f172, %f225;
	mul.rn.f32 	%f238, %f173, %f225;
	mul.rn.f32 	%f239, %f174, %f225;
	mul.rn.f32 	%f240, %f175, %f225;
	mul.rn.f32 	%f241, %f176, %f225;
	add.s64 	%rd16, %rd33, %rd38;
	add.s64 	%rd17, %rd16, 1024;
	// begin inline asm
	mov.u32 %r145, 0x0;
	mov.u32 %r146, 0x0;
	mov.u32 %r147, 0x0;
	mov.u32 %r148, 0x0;
	ld.global.v4.b32 { %r145, %r146, %r147, %r148 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	{%rs81, %rs82}, %r145;
	mov.b32 	{%rs83, %rs84}, %r146;
	mov.b32 	{%rs85, %rs86}, %r147;
	mov.b32 	{%rs87, %rs88}, %r148;
	// begin inline asm
	mov.u32 %r149, 0x0;
	mov.u32 %r150, 0x0;
	mov.u32 %r151, 0x0;
	mov.u32 %r152, 0x0;
	ld.global.v4.b32 { %r149, %r150, %r151, %r152 }, [ %rd17 + 0 ];
	// end inline asm
	mov.b32 	{%rs89, %rs90}, %r149;
	mov.b32 	{%rs91, %rs92}, %r150;
	mov.b32 	{%rs93, %rs94}, %r151;
	mov.b32 	{%rs95, %rs96}, %r152;
	// begin inline asm
	cvt.f32.bf16 %r153, %rs81;
	// end inline asm
	mov.b32 	%f242, %r153;
	// begin inline asm
	cvt.f32.bf16 %r154, %rs82;
	// end inline asm
	mov.b32 	%f243, %r154;
	// begin inline asm
	cvt.f32.bf16 %r155, %rs83;
	// end inline asm
	mov.b32 	%f244, %r155;
	// begin inline asm
	cvt.f32.bf16 %r156, %rs84;
	// end inline asm
	mov.b32 	%f245, %r156;
	// begin inline asm
	cvt.f32.bf16 %r157, %rs85;
	// end inline asm
	mov.b32 	%f246, %r157;
	// begin inline asm
	cvt.f32.bf16 %r158, %rs86;
	// end inline asm
	mov.b32 	%f247, %r158;
	// begin inline asm
	cvt.f32.bf16 %r159, %rs87;
	// end inline asm
	mov.b32 	%f248, %r159;
	// begin inline asm
	cvt.f32.bf16 %r160, %rs88;
	// end inline asm
	mov.b32 	%f249, %r160;
	// begin inline asm
	cvt.f32.bf16 %r161, %rs89;
	// end inline asm
	mov.b32 	%f250, %r161;
	// begin inline asm
	cvt.f32.bf16 %r162, %rs90;
	// end inline asm
	mov.b32 	%f251, %r162;
	// begin inline asm
	cvt.f32.bf16 %r163, %rs91;
	// end inline asm
	mov.b32 	%f252, %r163;
	// begin inline asm
	cvt.f32.bf16 %r164, %rs92;
	// end inline asm
	mov.b32 	%f253, %r164;
	// begin inline asm
	cvt.f32.bf16 %r165, %rs93;
	// end inline asm
	mov.b32 	%f254, %r165;
	// begin inline asm
	cvt.f32.bf16 %r166, %rs94;
	// end inline asm
	mov.b32 	%f255, %r166;
	// begin inline asm
	cvt.f32.bf16 %r167, %rs95;
	// end inline asm
	mov.b32 	%f256, %r167;
	// begin inline asm
	cvt.f32.bf16 %r168, %rs96;
	// end inline asm
	mov.b32 	%f257, %r168;
	mul.rn.f32 	%f258, %f226, %f242;
	mul.rn.f32 	%f259, %f227, %f243;
	mul.rn.f32 	%f260, %f228, %f244;
	mul.rn.f32 	%f261, %f229, %f245;
	mul.rn.f32 	%f262, %f230, %f246;
	mul.rn.f32 	%f263, %f231, %f247;
	mul.rn.f32 	%f264, %f232, %f248;
	mul.rn.f32 	%f265, %f233, %f249;
	mul.rn.f32 	%f266, %f234, %f250;
	mul.rn.f32 	%f267, %f235, %f251;
	mul.rn.f32 	%f268, %f236, %f252;
	mul.rn.f32 	%f269, %f237, %f253;
	mul.rn.f32 	%f270, %f238, %f254;
	mul.rn.f32 	%f271, %f239, %f255;
	mul.rn.f32 	%f272, %f240, %f256;
	mul.rn.f32 	%f273, %f241, %f257;
	mov.b32 	%r169, %f258;
	// begin inline asm
	cvt.rn.bf16.f32 %rs97, %r169;
	// end inline asm
	mov.b32 	%r170, %f259;
	// begin inline asm
	cvt.rn.bf16.f32 %rs98, %r170;
	// end inline asm
	mov.b32 	%r171, %f260;
	// begin inline asm
	cvt.rn.bf16.f32 %rs99, %r171;
	// end inline asm
	mov.b32 	%r172, %f261;
	// begin inline asm
	cvt.rn.bf16.f32 %rs100, %r172;
	// end inline asm
	mov.b32 	%r173, %f262;
	// begin inline asm
	cvt.rn.bf16.f32 %rs101, %r173;
	// end inline asm
	mov.b32 	%r174, %f263;
	// begin inline asm
	cvt.rn.bf16.f32 %rs102, %r174;
	// end inline asm
	mov.b32 	%r175, %f264;
	// begin inline asm
	cvt.rn.bf16.f32 %rs103, %r175;
	// end inline asm
	mov.b32 	%r176, %f265;
	// begin inline asm
	cvt.rn.bf16.f32 %rs104, %r176;
	// end inline asm
	mov.b32 	%r177, %f266;
	// begin inline asm
	cvt.rn.bf16.f32 %rs105, %r177;
	// end inline asm
	mov.b32 	%r178, %f267;
	// begin inline asm
	cvt.rn.bf16.f32 %rs106, %r178;
	// end inline asm
	mov.b32 	%r179, %f268;
	// begin inline asm
	cvt.rn.bf16.f32 %rs107, %r179;
	// end inline asm
	mov.b32 	%r180, %f269;
	// begin inline asm
	cvt.rn.bf16.f32 %rs108, %r180;
	// end inline asm
	mov.b32 	%r181, %f270;
	// begin inline asm
	cvt.rn.bf16.f32 %rs109, %r181;
	// end inline asm
	mov.b32 	%r182, %f271;
	// begin inline asm
	cvt.rn.bf16.f32 %rs110, %r182;
	// end inline asm
	mov.b32 	%r183, %f272;
	// begin inline asm
	cvt.rn.bf16.f32 %rs111, %r183;
	// end inline asm
	mov.b32 	%r184, %f273;
	// begin inline asm
	cvt.rn.bf16.f32 %rs112, %r184;
	// end inline asm
	add.s64 	%rd51, %rd22, %rd36;
	add.s64 	%rd18, %rd51, %rd38;
	add.s64 	%rd19, %rd18, 1024;
	mov.b32 	%r185, {%rs97, %rs98};
	mov.b32 	%r186, {%rs99, %rs100};
	mov.b32 	%r187, {%rs101, %rs102};
	mov.b32 	%r188, {%rs103, %rs104};
	// begin inline asm
	st.global.v4.b32 [ %rd18 + 0 ], { %r185, %r186, %r187, %r188 };
	// end inline asm
	mov.b32 	%r189, {%rs105, %rs106};
	mov.b32 	%r190, {%rs107, %rs108};
	mov.b32 	%r191, {%rs109, %rs110};
	mov.b32 	%r192, {%rs111, %rs112};
	// begin inline asm
	st.global.v4.b32 [ %rd19 + 0 ], { %r189, %r190, %r191, %r192 };
	// end inline asm
	ret;

}
	// .globl	wrapped_slice
.visible .entry wrapped_slice(
	.param .u64 .ptr .align 128 wrapped_slice_param_0,
	.param .u64 .ptr .align 128 wrapped_slice_param_1
)
.reqntid 128, 1, 1
{
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<9>;

	ld.param.u64 	%rd1, [wrapped_slice_param_0];
	ld.param.u64 	%rd2, [wrapped_slice_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r3, %r2, 7;
	and.b32  	%r4, %r3, 896;
	shl.b32 	%r5, %r2, 9;
	and.b32  	%r6, %r5, 126976;
	or.b32  	%r7, %r6, %r4;
	or.b32  	%r8, %r7, %r1;
	mul.wide.u32 	%rd5, %r8, 2;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.nc.u16 	%rs1, [%rd6+6144];
	or.b32  	%r9, %r3, %r1;
	mul.wide.u32 	%rd7, %r9, 2;
	add.s64 	%rd8, %rd3, %rd7;
	st.global.b16 	[%rd8], %rs1;
	ret;

}
	// .globl	fusion_298
.visible .entry fusion_298(
	.param .u64 .ptr .align 16 fusion_298_param_0,
	.param .u64 .ptr .align 128 fusion_298_param_1,
	.param .u64 .ptr .align 16 fusion_298_param_2,
	.param .u64 .ptr .align 128 fusion_298_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<78>;
	.reg .f32 	%f<60>;
	.reg .b64 	%rd<43>;

	ld.param.u64 	%rd6, [fusion_298_param_0];
	ld.param.u64 	%rd7, [fusion_298_param_3];
	cvta.to.global.u64 	%rd8, %rd7;
	ld.param.u64 	%rd9, [fusion_298_param_1];
	ld.param.u64 	%rd10, [fusion_298_param_2];
	cvta.to.global.u64 	%rd11, %rd10;
	cvta.to.global.u64 	%rd12, %rd9;
	cvta.to.global.u64 	%rd2, %rd6;
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	shl.b32 	%r43, %r1, 9;
	cvt.u64.u32 	%rd13, %r43;
	and.b64  	%rd14, %rd13, 512;
	mul.wide.s32 	%rd15, %r1, 2048;
	or.b64  	%rd16, %rd15, %rd14;
	shl.b64 	%rd17, %rd16, 1;
	or.b64  	%rd18, %rd17, 4096;
	add.s64 	%rd19, %rd12, %rd18;
	mov.u32 	%r44, %tid.x;
	shl.b32 	%r45, %r44, 3;
	and.b32  	%r46, %r45, 120;
	and.b32  	%r47, %r45, 248;
	setp.gt.u32 	%p4, %r44, 31;
	selp.b32 	%r48, 256, 0, %p4;
	or.b32  	%r49, %r47, %r48;
	mul.wide.u32 	%rd20, %r49, 2;
	add.s64 	%rd1, %rd19, %rd20;
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	{%rs1, %rs2}, %r2;
	mov.b32 	{%rs3, %rs4}, %r3;
	mov.b32 	{%rs5, %rs6}, %r4;
	mov.b32 	{%rs7, %rs8}, %r5;
	// begin inline asm
	cvt.f32.bf16 %r6, %rs1;
	// end inline asm
	mov.b32 	%f1, %r6;
	// begin inline asm
	cvt.f32.bf16 %r7, %rs2;
	// end inline asm
	mov.b32 	%f2, %r7;
	// begin inline asm
	cvt.f32.bf16 %r8, %rs3;
	// end inline asm
	mov.b32 	%f3, %r8;
	// begin inline asm
	cvt.f32.bf16 %r9, %rs4;
	// end inline asm
	mov.b32 	%f4, %r9;
	// begin inline asm
	cvt.f32.bf16 %r10, %rs5;
	// end inline asm
	mov.b32 	%f5, %r10;
	// begin inline asm
	cvt.f32.bf16 %r11, %rs6;
	// end inline asm
	mov.b32 	%f6, %r11;
	// begin inline asm
	cvt.f32.bf16 %r12, %rs7;
	// end inline asm
	mov.b32 	%f7, %r12;
	// begin inline asm
	cvt.f32.bf16 %r13, %rs8;
	// end inline asm
	mov.b32 	%f8, %r13;
	mul.rn.f32 	%f9, %f1, %f1;
	mul.rn.f32 	%f10, %f2, %f2;
	mul.rn.f32 	%f11, %f3, %f3;
	mul.rn.f32 	%f12, %f4, %f4;
	mul.rn.f32 	%f13, %f5, %f5;
	mul.rn.f32 	%f14, %f6, %f6;
	mul.rn.f32 	%f15, %f7, %f7;
	mul.rn.f32 	%f16, %f8, %f8;
	add.rn.f32 	%f17, %f9, %f10;
	add.rn.f32 	%f18, %f17, %f11;
	add.rn.f32 	%f19, %f18, %f12;
	add.rn.f32 	%f20, %f19, %f13;
	add.rn.f32 	%f21, %f20, %f14;
	add.rn.f32 	%f22, %f21, %f15;
	add.rn.f32 	%f23, %f22, %f16;
	mov.b32 	%r50, %f23;
	shfl.sync.bfly.b32	%r51, %r50, 8, 31, -1;
	mov.b32 	%f24, %r51;
	add.rn.f32 	%f25, %f23, %f24;
	mov.b32 	%r52, %f25;
	shfl.sync.bfly.b32	%r53, %r52, 4, 31, -1;
	mov.b32 	%f26, %r53;
	add.rn.f32 	%f27, %f25, %f26;
	mov.b32 	%r54, %f27;
	shfl.sync.bfly.b32	%r55, %r54, 2, 31, -1;
	mov.b32 	%f28, %r55;
	add.rn.f32 	%f29, %f27, %f28;
	mov.b32 	%r56, %f29;
	shfl.sync.bfly.b32	%r57, %r56, 1, 31, -1;
	mov.b32 	%f30, %r57;
	add.rn.f32 	%f31, %f29, %f30;
	mul.rn.f32 	%f32, %f31, 0f3C000000;
	// begin inline asm
	mov.u32 %r14, 0x0;
	ld.global.b32 { %r14 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r14;
	add.rn.f32 	%f34, %f32, %f33;
	rsqrt.approx.f32 	%f35, %f34;
	mul.rn.f32 	%f36, %f1, %f35;
	mul.rn.f32 	%f37, %f2, %f35;
	mul.rn.f32 	%f38, %f3, %f35;
	mul.rn.f32 	%f39, %f4, %f35;
	mul.rn.f32 	%f40, %f5, %f35;
	mul.rn.f32 	%f41, %f6, %f35;
	mul.rn.f32 	%f42, %f7, %f35;
	mul.rn.f32 	%f43, %f8, %f35;
	shl.b32 	%r58, %r44, 1;
	and.b32  	%r59, %r58, 62;
	selp.b32 	%r60, 64, 0, %p4;
	or.b32  	%r61, %r59, %r60;
	shl.b32 	%r62, %r44, 2;
	and.b32  	%r63, %r62, 124;
	cvt.u64.u32 	%rd21, %r63;
	mul.wide.u32 	%rd22, %r61, 2;
	add.s64 	%rd3, %rd11, %rd22;
	// begin inline asm
	mov.u32 %r15, 0x0;
	ld.global.b32 { %r15 }, [ %rd3 + 0 ];
	// end inline asm
	{ .reg .b16 tmp; mov.b32 {tmp, %rs10}, %r15; }
	mov.u64 	%rd23, global_smem;
	add.s64 	%rd24, %rd23, %rd22;
	cvt.u16.u32 	%rs9, %r15;
	cvt.u32.u64 	%r16, %rd24;
	mov.pred 	%p1, -1;
	// begin inline asm
	@%p1 st.shared.v2.b16 [ %r16 + 0 ], { %rs9, %rs10 };
	// end inline asm
	bar.sync 	0;
	mul.wide.u32 	%rd25, %r46, 2;
	add.s64 	%rd26, %rd23, %rd25;
	ld.shared.v4.b32 	{%r64, %r65, %r66, %r67}, [%rd26];
	mov.b32 	{%rs17, %rs18}, %r67;
	mov.b32 	{%rs15, %rs16}, %r66;
	mov.b32 	{%rs13, %rs14}, %r65;
	mov.b32 	{%rs11, %rs12}, %r64;
	// begin inline asm
	cvt.f32.bf16 %r17, %rs11;
	// end inline asm
	mov.b32 	%f44, %r17;
	// begin inline asm
	cvt.f32.bf16 %r18, %rs12;
	// end inline asm
	mov.b32 	%f45, %r18;
	// begin inline asm
	cvt.f32.bf16 %r19, %rs13;
	// end inline asm
	mov.b32 	%f46, %r19;
	// begin inline asm
	cvt.f32.bf16 %r20, %rs14;
	// end inline asm
	mov.b32 	%f47, %r20;
	// begin inline asm
	cvt.f32.bf16 %r21, %rs15;
	// end inline asm
	mov.b32 	%f48, %r21;
	// begin inline asm
	cvt.f32.bf16 %r22, %rs16;
	// end inline asm
	mov.b32 	%f49, %r22;
	// begin inline asm
	cvt.f32.bf16 %r23, %rs17;
	// end inline asm
	mov.b32 	%f50, %r23;
	// begin inline asm
	cvt.f32.bf16 %r24, %rs18;
	// end inline asm
	mov.b32 	%f51, %r24;
	mul.rn.f32 	%f52, %f36, %f44;
	mul.rn.f32 	%f53, %f37, %f45;
	mul.rn.f32 	%f54, %f38, %f46;
	mul.rn.f32 	%f55, %f39, %f47;
	mul.rn.f32 	%f56, %f40, %f48;
	mul.rn.f32 	%f57, %f41, %f49;
	mul.rn.f32 	%f58, %f42, %f50;
	mul.rn.f32 	%f59, %f43, %f51;
	add.s64 	%rd27, %rd8, %rd15;
	selp.b64 	%rd28, 128, 0, %p4;
	selp.b64 	%rd29, 384, 256, %p4;
	or.b64  	%rd30, %rd28, %rd21;
	or.b64  	%rd31, %rd29, %rd21;
	shl.b64 	%rd32, %rd30, 2;
	add.s64 	%rd4, %rd27, %rd32;
	shl.b64 	%rd33, %rd31, 2;
	add.s64 	%rd5, %rd27, %rd33;
	bar.sync 	0;
	selp.b32 	%r68, 128, 0, %p4;
	or.b32  	%r69, %r63, %r68;
	shr.u32 	%r70, %r49, 4;
	and.b32  	%r71, %r70, 24;
	add.s32 	%r72, %r71, %r49;
	shl.b32 	%r73, %r72, 2;
	cvt.u64.u32 	%rd34, %r73;
	add.s64 	%rd35, %rd23, %rd34;
	mov.b32 	%r26, %f52;
	mov.b32 	%r27, %f53;
	mov.b32 	%r28, %f54;
	mov.b32 	%r29, %f55;
	mov.b32 	%r31, %f56;
	mov.b32 	%r32, %f57;
	mov.b32 	%r33, %f58;
	mov.b32 	%r34, %f59;
	cvt.u32.u64 	%r25, %rd35;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r25 + 0 ], { %r26, %r27, %r28, %r29 };
	// end inline asm
	add.s32 	%r30, %r25, 16;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r30 + 0 ], { %r31, %r32, %r33, %r34 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r74, %r68, 4;
	add.s32 	%r75, %r74, %r69;
	mul.wide.u32 	%rd36, %r75, 4;
	add.s64 	%rd37, %rd23, %rd36;
	or.b32  	%r76, %r68, 256;
	shr.u32 	%r77, %r76, 4;
	cvt.u64.u32 	%rd38, %r77;
	cvt.u64.u32 	%rd39, %r69;
	add.s64 	%rd40, %rd38, %rd39;
	shl.b64 	%rd41, %rd40, 2;
	add.s64 	%rd42, %rd23, %rd41;
	ld.shared.v4.u32 	{%r39, %r40, %r41, %r42}, [%rd42+1024];
	ld.shared.v4.u32 	{%r35, %r36, %r37, %r38}, [%rd37];
	// begin inline asm
	st.global.v4.b32 [ %rd4 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd5 + 0 ], { %r39, %r40, %r41, %r42 };
	// end inline asm
	ret;

}
	// .globl	input_concatenate_fusion
.visible .entry input_concatenate_fusion(
	.param .u64 .ptr .align 128 input_concatenate_fusion_param_0,
	.param .u64 .ptr .align 16 input_concatenate_fusion_param_1,
	.param .u64 .ptr .align 16 input_concatenate_fusion_param_2,
	.param .u64 .ptr .align 128 input_concatenate_fusion_param_3
)
.reqntid 128, 1, 1
{
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<17>;
	.reg .f32 	%f<11>;
	.reg .b64 	%rd<19>;

	ld.param.u64 	%rd1, [input_concatenate_fusion_param_0];
	ld.param.u64 	%rd2, [input_concatenate_fusion_param_3];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.param.u64 	%rd4, [input_concatenate_fusion_param_1];
	ld.param.u64 	%rd5, [input_concatenate_fusion_param_2];
	cvta.to.global.u64 	%rd6, %rd5;
	cvta.to.global.u64 	%rd7, %rd4;
	cvta.to.global.u64 	%rd8, %rd1;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	and.b32  	%r3, %r1, 63;
	shl.b32 	%r4, %r1, 1;
	and.b32  	%r5, %r4, 128;
	shl.b32 	%r6, %r2, 8;
	or.b32  	%r7, %r5, %r6;
	or.b32  	%r8, %r7, %r3;
	mul.wide.u32 	%rd9, %r8, 4;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.nc.f32 	%f1, [%rd10];
	and.b32  	%r9, %r2, -4;
	cvt.u64.u32 	%rd11, %r9;
	add.s64 	%rd12, %rd6, %rd11;
	ld.global.nc.u32 	%r10, [%rd12];
	min.s32 	%r11, %r10, 40959;
	max.s32 	%r12, %r11, 0;
	shl.b32 	%r13, %r12, 7;
	or.b32  	%r14, %r13, %r3;
	mul.wide.u32 	%rd13, %r14, 2;
	add.s64 	%rd14, %rd7, %rd13;
	ld.global.nc.u16 	%rs1, [%rd14];
	cvt.f32.bf16 	%f2, %rs1;
	mul.rn.f32 	%f3, %f1, %f2;
	ld.global.nc.f32 	%f4, [%rd10+256];
	or.b32  	%r15, %r1, %r13;
	or.b32  	%r16, %r15, 64;
	mul.wide.u32 	%rd15, %r16, 2;
	add.s64 	%rd16, %rd7, %rd15;
	ld.global.nc.u16 	%rs2, [%rd16];
	cvt.f32.bf16 	%f5, %rs2;
	mul.rn.f32 	%f6, %f4, %f5;
	sub.rn.f32 	%f7, %f3, %f6;
	cvt.rn.bf16.f32 	%rs3, %f7;
	mul.wide.u32 	%rd17, %r8, 2;
	add.s64 	%rd18, %rd3, %rd17;
	st.global.b16 	[%rd18], %rs3;
	mul.rn.f32 	%f8, %f4, %f2;
	mul.rn.f32 	%f9, %f1, %f5;
	add.rn.f32 	%f10, %f8, %f9;
	cvt.rn.bf16.f32 	%rs4, %f10;
	st.global.b16 	[%rd18+128], %rs4;
	ret;

}
	// .globl	loop_slice_fusion
.visible .entry loop_slice_fusion(
	.param .u64 .ptr .align 16 loop_slice_fusion_param_0,
	.param .u64 .ptr .align 128 loop_slice_fusion_param_1
)
.reqntid 128, 1, 1
{
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;

	ld.param.u64 	%rd1, [loop_slice_fusion_param_0];
	ld.param.u64 	%rd2, [loop_slice_fusion_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r3, %r1, 2;
	shl.b32 	%r4, %r2, 9;
	or.b32  	%r5, %r3, %r4;
	mul.wide.u32 	%rd5, %r5, 2;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.nc.v4.u16 	{%rs1, %rs2, %rs3, %rs4}, [%rd6+138706944];
	add.s64 	%rd7, %rd3, %rd5;
	st.global.v4.b16 	[%rd7], {%rs1, %rs2, %rs3, %rs4};
	ret;

}
	// .globl	wrapped_slice_1
.visible .entry wrapped_slice_1(
	.param .u64 .ptr .align 16 wrapped_slice_1_param_0,
	.param .u64 .ptr .align 128 wrapped_slice_1_param_1
)
.reqntid 128, 1, 1
{
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;

	ld.param.u64 	%rd1, [wrapped_slice_1_param_0];
	ld.param.u64 	%rd2, [wrapped_slice_1_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r3, %r1, 2;
	shl.b32 	%r4, %r2, 9;
	or.b32  	%r5, %r3, %r4;
	mul.wide.u32 	%rd5, %r5, 2;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.nc.v4.u16 	{%rs1, %rs2, %rs3, %rs4}, [%rd6];
	add.s64 	%rd7, %rd3, %rd5;
	st.global.v4.b16 	[%rd7], {%rs1, %rs2, %rs3, %rs4};
	ret;

}
